name: build
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read
  issues: read
  checks: write
  pull-requests: write
  packages: write
  id-token: write

env:
  DOCKER_IMAGE_NAME: ghcr.io/graphql-hive/router
  DOCKER_LICENSE: MIT
  DOCKER_VENDOR: theguild
  DOCKER_PLATFORMS: linux/amd64,linux/arm64
  ZIG_VERSION: 0.14.1
  BINARY_NAME: gateway

jobs:
  binary:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: linux/arm64
            rust_target: aarch64-unknown-linux-gnu
            zigbuild_target: aarch64-unknown-linux-gnu.2.28
          - name: linux/amd64
            rust_target: x86_64-unknown-linux-gnu
            zigbuild_target: x86_64-unknown-linux-gnu.2.28
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        name: checkout
      - uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48 # v1
        name: rust toolchain (${{ matrix.rust_target }})
        with:
          rust-target: ${{ matrix.rust_target }}
      - uses: korandoru/setup-zig@v1
        name: setup zig
        with:
          zig-version: ${{ env.ZIG_VERSION }}
      - uses: Swatinem/rust-cache@v2
      - name: compile (${{ matrix.zigbuild_target }})
        run: cargo zigbuild --release --target ${{ matrix.zigbuild_target }}
      - uses: actions/upload-artifact@v4.6.2
        name: upload build artifact
        with:
          name: build/${{ matrix.name }}
          path: target/${{ matrix.zigbuild_target }}/release/${{ env.BINARY_NAME }}
          if-no-files-found: error

  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
  #     - name: setup qemu
  #       uses: docker/setup-qemu-action@v3.6.0
  #     - name: setup buildx
  #       uses: docker/setup-buildx-action@v3.11.1
  #     - name: setup docker tags
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: ${{ env.IMAGE_NAME }}
  #         labels: |
  #           org.opencontainers.image.licenses=${{ env.LICENSE }}
  #           org.opencontainers.image.vendor=${{ env.VENDOR }}
  #         tags: |
  #           type=ref,event=branch
  #           type=ref,event=pr
  #           type=ref,event=tag
  #           type=semver,pattern={{version}}
  #           type=semver,pattern={{major}}.{{minor}}
  #           type=semver,pattern={{major}}
  #           type=sha
  #           type=raw,value=latest,enable={{is_default_branch}}
  #     - uses: docker/login-action@v3.5.0
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: build and push
  #       uses: docker/build-push-action@v6.18.0
  #       with:
  #         file: ./docker/gateway.Dockerfile
  #         context: .
  #         platforms: ${{ env.PLATFORMS }}
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
