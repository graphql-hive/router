name: ci
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: write
  issues: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1
      - run: cargo test_all

  build-release:
    name: cargo build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1
      - run: cargo build --release

  # build-wasm:
  #   name: build-wasm
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
  #     - uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48 # v1

  #     - uses: jetli/wasm-pack-action@0d096b08b4e5a7de8c28de67e11e945404e9eefa # v0.4.0
  #       with:
  #         version: "latest"

  #     - name: "wasm-pack: nodejs"
  #       run: wasm-pack build -t nodejs -d pkg-node
  #       working-directory: ./lib/wasm-lib

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1
        with:
          components: rustfmt
      - name: cargo fmt
        uses: actions-rust-lang/rustfmt@559aa3035a47390ba96088dffa783b5d26da9326 # v1

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1
        with:
          components: clippy
      - name: cargo clippy
        run: cargo clippy --all

  benchmark:
    strategy:
      matrix:
        include:
          - name: "query-planner"
            package: "./lib/query-planner"
          - name: "executor"
            package: "./lib/executor"
    name: benchmark / ${{ matrix.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1
      - if: matrix.name == 'executor'
        name: Build subgraphs
        run: cargo build --release -p subgraphs
      - if: matrix.name == 'executor'
        name: Run subgraphs
        run: ./target/release/subgraphs & sleep 5
      - name: Run benchmarks
        run: cargo bench
        working-directory: ${{ matrix.package }}
      - name: Upload benchmark results
        if: always() # Upload results even if benchmarks fail
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{matrix.package}}-benchmark-results
          path: ${{matrix.package}}/target/criterion

  router-benchmark:
    name: benchmark / router
    runs-on: ubuntu-latest
    env:
      NODE_NO_WARNINGS: true
      NODE_ENV: production
      GITHUB_PR: ${{ github.event.number }}
      GITHUB_SHA: ${{ github.sha }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1
      - name: Setup K6
        run: |
          wget https://github.com/grafana/k6/releases/download/v0.37.0/k6-v0.37.0-linux-amd64.deb
          sudo apt-get update
          sudo apt-get install ./k6-v0.37.0-linux-amd64.deb
      - name: Build subgraphs
        run: cargo build --release -p subgraphs
      - name: Run subgraphs
        run: ./target/release/subgraphs & sleep 5
      - name: Build router
        run: cargo build --release -p hive-router
      - name: Run router
        run: ./target/release/hive_router & sleep 5
        env:
          HIVE__SUPERGRAPH__SOURCE: file
          HIVE__SUPERGRAPH__PATH: bench/supergraph.graphql
      - name: Run k6 benchmark
        run: k6 run bench/k6.js

  graphql-over-http:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version-file: audits/.node-version
      - run: npm install
        working-directory: audits
      - run: npm run ci:test:graphql-over-http
        working-directory: audits
      - name: Publish Test Results for comparison
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2
        if: (!cancelled())
        with:
          check_name: graphql-over-http
          comment_title: GraphQL over HTTP Audit Results
          comment_mode: changes
          files: |
            audits/reports/*.xml
      - name: Publish Test Results for details
        uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5
        if: (!cancelled())
        with:
          report_paths: "audits/reports/*.xml"
          group_reports: false
          annotate_only: true
          fail_on_failure: true # do not fail the job if the report fails
          fail_on_parse_error: true # do not fail the job if the report cannot be parsed
          job_summary: true
          verbose_summary: false
          skip_success_summary: true
          include_empty_in_summary: false
          include_time_in_summary: true
          simplified_summary: true
          group_suite: true
          comment: true
          updateComment: true
          exclude_sources: /lib/,/audits/node_modules/

  federation-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version-file: audits/.node-version
      - run: cargo build --package hive-router
      - run: npm install
        working-directory: audits
      - run: npm run test:federation-all
        working-directory: audits
        continue-on-error: true # continue even if the test fails
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: federation-audit-logs
          path: |
            ./audits/logs/*.log
      - name: Publish Test Results for comparison
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2
        if: (!cancelled())
        with:
          fail_on: "nothing"
          check_name: federation-audit
          comment_title: Federation Audit Results
          comment_mode: changes
          files: |
            audits/reports/*.xml
      - name: Publish Test Results for details
        uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5
        if: (!cancelled())
        with:
          report_paths: "audits/reports/*.xml"
          group_reports: false
          job_name: federation-audit
          check_name: federation-audit
          check_title_template: "{{FILE_NAME}}"
          fail_on_failure: false # do not fail the job if the report fails
          fail_on_parse_error: false # do not fail the job if the report cannot be parsed
          annotate_only: true
          job_summary: true
          verbose_summary: false
          skip_success_summary: true
          include_empty_in_summary: false
          include_time_in_summary: true
          simplified_summary: true
          group_suite: true
          comment: true
          updateComment: true
          exclude_sources: /lib/,/audits/node_modules/
