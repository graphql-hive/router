name: ci
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1
      - run: cargo test_all

  build-release:
    name: cargo build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1
      - run: cargo build --release

  build-wasm:
    name: build-wasm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1

      - uses: jetli/wasm-pack-action@0d096b08b4e5a7de8c28de67e11e945404e9eefa # v0.4.0
        with:
          version: "latest"

      - name: "wasm-pack: nodejs"
        run: wasm-pack build -t nodejs -d pkg-node
        working-directory: ./lib/wasm-lib

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1
        with:
          components: rustfmt
      - name: cargo fmt
        uses: actions-rust-lang/rustfmt@559aa3035a47390ba96088dffa783b5d26da9326 # v1

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1
        with:
          components: clippy
      - name: cargo clippy
        run: cargo clippy --all

  unit-benchmark:
    strategy: 
      matrix:
        include:
          - name: "Query Planner"
            package: "./lib/query-planner"
          - name: "Query Plan Executor"
            package: "./lib/query-plan-executor"
    name: ${{ matrix.name }} Benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1
      - if: matrix.name == 'Query Plan Executor'
        name: Build subgraphs
        run: cargo build --release -p subgraphs
      - if: matrix.name == 'Query Plan Executor'
        name: Run subgraphs
        run: ./target/release/subgraphs & sleep 5
      - name: Run benchmarks
        run: cargo bench
        working-directory: ${{ matrix.package }}
      - name: Upload benchmark results
        if: always() # Upload results even if benchmarks fail
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{matrix.package}}-benchmark-results
          path: ${{matrix.package}}/target/criterion


  k6-benchmark:
    name: Overall K6 Benchmark
    runs-on: ubuntu-latest
    env:
      NODE_NO_WARNINGS: true
      NODE_ENV: production
      GITHUB_PR: ${{ github.event.number }}
      GITHUB_SHA: ${{ github.sha }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1
      - name: Setup K6
        run: |
          wget https://github.com/grafana/k6/releases/download/v0.37.0/k6-v0.37.0-linux-amd64.deb
          sudo apt-get update
          sudo apt-get install ./k6-v0.37.0-linux-amd64.deb
      - name: Build subgraphs
        run: cargo build --release -p subgraphs
      - name: Run subgraphs
        run: ./target/release/subgraphs & sleep 5
      - name: Build gateway
        run: cargo build --release -p gateway
      - name: Run gateway
        run: ./target/release/gateway bench/supergraph.graphql & sleep 5
      - name: Run k6 benchmark
        run: k6 run bench/k6.js

  graphql-over-http:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: audits/.node-version
      - run: npm install
        working-directory: audits
      - run: npm run ci:test:graphql-over-http
        working-directory: audits
      - name: Publish Test Results for comparison
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2
        if: (!cancelled())
        with:
          check_name: graphql-over-http
          comment_title: GraphQL over HTTP Audit Results
          comment_mode: changes
          files: |
            audits/reports/*.xml
      - name: Publish Test Results for details
        uses: mikepenz/action-junit-report@a83fd2b5d58d4fc702e690c1ea688d702d28d281 # v5
        if: (!cancelled())
        with:
          report_paths: 'audits/reports/*.xml'
          group_reports: false
          annotate_only: true
          fail_on_failure: true # do not fail the job if the report fails
          fail_on_parse_error: true # do not fail the job if the report cannot be parsed
          job_summary: true
          verbose_summary: false
          skip_success_summary: true
          include_empty_in_summary: false
          include_time_in_summary: true
          simplified_summary: true
          group_suite: true
          comment: true
          updateComment: true
          exclude_sources: /lib/,/audits/node_modules/

  federation-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: audits/.node-version
      - run: cargo build --package gateway
      - run: npm install
        working-directory: audits
      - run: npm run test:federation-all
        working-directory: audits
        continue-on-error: true # continue even if the test fails
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: federation-audit-logs
          path: |
            ./audits/logs/*.log
      - name: Publish Test Results for comparison
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2
        if: (!cancelled())
        with:
          fail_on: "nothing"
          check_name: federation-audit
          comment_title: Federation Audit Results
          comment_mode: changes
          files: |
            audits/reports/*.xml
      - name: Publish Test Results for details
        uses: mikepenz/action-junit-report@a83fd2b5d58d4fc702e690c1ea688d702d28d281 # v5
        if: (!cancelled())
        with:
          report_paths: 'audits/reports/*.xml'
          group_reports: false
          job_name: federation-audit
          check_name: federation-audit
          check_title_template: "{{FILE_NAME}}"
          fail_on_failure: false # do not fail the job if the report fails
          fail_on_parse_error: false # do not fail the job if the report cannot be parsed
          annotate_only: true
          job_summary: true
          verbose_summary: false
          include_empty_in_summary: false
          include_time_in_summary: true
          simplified_summary: true
          group_suite: true
          comment: true
          updateComment: true
          exclude_sources: /lib/,/audits/node_modules/
    
