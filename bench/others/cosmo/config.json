{
  "engineConfig": {
    "defaultFlushInterval": "500",
    "datasourceConfigurations": [
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          { "typeName": "Query", "fieldNames": ["me", "user", "users"] },
          {
            "typeName": "User",
            "fieldNames": ["id", "name", "username", "birthday"]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": { "staticVariableContent": "http://0.0.0.0:4200/accounts" },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": { "staticVariableContent": "http://0.0.0.0:4200/accounts" },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
            "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "extend type Query {\n  me: User\n  user(id: ID!): User\n  users: [User]\n}\n\ntype User @key(fields: \"id\") {\n  id: ID!\n  name: String\n  username: String\n  birthday: Int\n}\n\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n"
          },
          "upstreamSchema": {
            "key": "db37a1abd369d6fee0ca43d7134e3998f9feba01"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "0",
        "keys": [{ "typeName": "User", "selectionSet": "id" }]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Product",
            "fieldNames": ["inStock", "shippingEstimate", "upc"],
            "externalFieldNames": ["upc", "weight", "price"]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": { "staticVariableContent": "http://0.0.0.0:4200/inventory" },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": { "staticVariableContent": "http://0.0.0.0:4200/inventory" },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
            "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "extend type Product @key(fields: \"upc\") {\n  upc: String! @external\n  weight: Int @external\n  price: Int @external\n  inStock: Boolean\n  shippingEstimate: Int @requires(fields: \"price weight\")\n}\n\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n"
          },
          "upstreamSchema": {
            "key": "64a29f293bb6d35526ce51e1715b8032cdfb31bf"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "1",
        "keys": [{ "typeName": "Product", "selectionSet": "upc" }],
        "requires": [
          {
            "typeName": "Product",
            "fieldName": "shippingEstimate",
            "selectionSet": "price weight"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Product",
            "fieldNames": ["upc", "name", "price", "weight"]
          },
          { "typeName": "Query", "fieldNames": ["topProducts"] }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": { "staticVariableContent": "http://0.0.0.0:4200/products" },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": { "staticVariableContent": "http://0.0.0.0:4200/products" },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
            "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Product @key(fields: \"upc\") {\n  upc: String!\n  name: String\n  price: Int\n  weight: Int\n}\n\nextend type Query {\n  topProducts(first: Int = 5): [Product]\n}\n\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n"
          },
          "upstreamSchema": {
            "key": "1afef6ee5330df98b15899d48b7d738c0f43f429"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "2",
        "keys": [{ "typeName": "Product", "selectionSet": "upc" }]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Product",
            "fieldNames": ["reviews", "upc"],
            "externalFieldNames": ["upc"]
          },
          {
            "typeName": "Review",
            "fieldNames": ["id", "body", "product", "author"]
          },
          {
            "typeName": "User",
            "fieldNames": ["reviews", "id"],
            "externalFieldNames": ["id", "username"]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": { "staticVariableContent": "http://0.0.0.0:4200/reviews" },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": { "staticVariableContent": "http://0.0.0.0:4200/reviews" },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
            "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "extend type Product @key(fields: \"upc\") {\n  upc: String! @external\n  reviews: [Review]\n}\n\ntype Review @key(fields: \"id\") {\n  id: ID!\n  body: String\n  product: Product\n  author: User @provides(fields: \"username\")\n}\n\nextend type User @key(fields: \"id\") {\n  id: ID! @external\n  username: String @external\n  reviews: [Review]\n}\n\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n"
          },
          "upstreamSchema": {
            "key": "1b9a4a72484d26b758d37d3884812af6affbc02f"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "3",
        "keys": [
          { "typeName": "Product", "selectionSet": "upc" },
          { "typeName": "Review", "selectionSet": "id" },
          { "typeName": "User", "selectionSet": "id" }
        ],
        "provides": [
          {
            "typeName": "Review",
            "fieldName": "author",
            "selectionSet": "username"
          }
        ]
      }
    ],
    "fieldConfigurations": [
      {
        "typeName": "Query",
        "fieldName": "user",
        "argumentsConfiguration": [
          { "name": "id", "sourceType": "FIELD_ARGUMENT" }
        ]
      },
      {
        "typeName": "Query",
        "fieldName": "topProducts",
        "argumentsConfiguration": [
          { "name": "first", "sourceType": "FIELD_ARGUMENT" }
        ]
      }
    ],
    "graphqlSchema": "schema {\n  query: Query\n}\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Query {\n  me: User\n  user(id: ID!): User\n  users: [User]\n  topProducts(first: Int = 5): [Product]\n}\n\ntype User {\n  id: ID!\n  name: String\n  username: String\n  birthday: Int\n  reviews: [Review]\n}\n\ntype Product {\n  upc: String!\n  weight: Int\n  price: Int\n  inStock: Boolean\n  shippingEstimate: Int\n  name: String\n  reviews: [Review]\n}\n\ntype Review {\n  id: ID!\n  body: String\n  product: Product\n  author: User\n}",
    "stringStorage": {
      "db37a1abd369d6fee0ca43d7134e3998f9feba01": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Query {\n  me: User\n  user(id: ID!): User\n  users: [User]\n}\n\ntype User @key(fields: \"id\") {\n  birthday: Int\n  id: ID!\n  name: String\n  username: String\n}\n\nscalar openfed__FieldSet",
      "64a29f293bb6d35526ce51e1715b8032cdfb31bf": "directive @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Product @key(fields: \"upc\") {\n  inStock: Boolean\n  price: Int @external\n  shippingEstimate: Int @requires(fields: \"price weight\")\n  upc: String! @external\n  weight: Int @external\n}\n\nscalar openfed__FieldSet",
      "1afef6ee5330df98b15899d48b7d738c0f43f429": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Product @key(fields: \"upc\") {\n  name: String\n  price: Int\n  upc: String!\n  weight: Int\n}\n\ntype Query {\n  topProducts(first: Int = 5): [Product]\n}\n\nscalar openfed__FieldSet",
      "1b9a4a72484d26b758d37d3884812af6affbc02f": "directive @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Product @key(fields: \"upc\") {\n  reviews: [Review]\n  upc: String! @external\n}\n\ntype Review @key(fields: \"id\") {\n  author: User @provides(fields: \"username\")\n  body: String\n  id: ID!\n  product: Product\n}\n\ntype User @key(fields: \"id\") {\n  id: ID! @external\n  reviews: [Review]\n  username: String @external\n}\n\nscalar openfed__FieldSet"
    }
  },
  "version": "6e9dbed6-ec25-44f1-8693-4d44274fe9a6",
  "subgraphs": [
    {
      "id": "0",
      "name": "accounts",
      "routingUrl": "http://0.0.0.0:4200/accounts"
    },
    {
      "id": "1",
      "name": "inventory",
      "routingUrl": "http://0.0.0.0:4200/inventory"
    },
    {
      "id": "2",
      "name": "products",
      "routingUrl": "http://0.0.0.0:4200/products"
    },
    {
      "id": "3",
      "name": "reviews",
      "routingUrl": "http://0.0.0.0:4200/reviews"
    }
  ]
}
