generating supergraph file for test...
running gateway...
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.11s
     Running `target/debug/gateway audits/fed-audit-supergraph.graphql`
┐new_supergraph_state{}
└─┐build_map{}
  └─┐build_interface_type{name="AnotherPost"}
    └─┐build_fields{fields_count=2}
    ┌─┘
  ┌─┘
  └─┐build_object_type{name="ImagePost"}
    └─┐build_fields{fields_count=2}
    ┌─┘
  ┌─┘
  └─┐build_scalar_type{name="join__FieldSet"}
  ┌─┘
  └─┐build_enum_type{name="join__Graph"}
  ┌─┘
  └─┐build_scalar_type{name="link__Import"}
  ┌─┘
  └─┐build_enum_type{name="link__Purpose"}
  ┌─┘
  └─┐build_interface_type{name="Post"}
    └─┐build_fields{fields_count=2}
    ┌─┘
  ┌─┘
  └─┐build_object_type{name="Query"}
    └─┐build_fields{fields_count=2}
    ┌─┘
  ┌─┘
  └─┐build_object_type{name="TextPost"}
    └─┐build_fields{fields_count=3}
    ┌─┘
  ┌─┘
┌─┘
└─┐decompose_from_supergraph{graph_id="A"}
┌─┘
└─┐decompose_from_supergraph{graph_id="B"}
┌─┘
┘
┐graph_from_supergraph_state{}
└─┐build_graph{}
  ├─   0.006182s   0ms DEBUG Building graph for supergraph with 17 definitions
  └─┐build_root_nodes{}
    ├─   0.006220s   0ms DEBUG added root type for queries: Query
  ┌─┘
  └─┐link_root_edges{}
  ┌─┘
  └─┐build_field_edges{}
    ├─   0.006269s   0ms INFO [x] Creating owned field move edge 'TextPost.__typename/B' (type: String)
    ├─   0.006286s   0ms INFO [x] Creating field move edge 'TextPost.body/B' (type: String)
    ├─   0.006294s   0ms INFO [x] Creating field move edge 'TextPost.body/B' (type: String)
    ├─   0.006300s   0ms INFO [x] Creating field move edge 'TextPost.createdAt/B' (type: String)
    ├─   0.006306s   0ms INFO [x] Creating field move edge 'TextPost.createdAt/B' (type: String)
    ├─   0.006312s   0ms INFO [x] Creating field move edge 'TextPost.id/B' (type: ID)
    ├─   0.006318s   0ms INFO [x] Creating field move edge 'TextPost.id/B' (type: ID)
    ├─   0.006324s   0ms INFO [x] Creating owned field move edge 'AnotherPost.__typename/B' (type: String)
    ├─   0.006331s   0ms INFO [x] Creating field move edge 'AnotherPost.createdAt/B' (type: String)
    ├─   0.006336s   0ms INFO [x] Creating field move edge 'AnotherPost.createdAt/B' (type: String)
    ├─   0.006342s   0ms INFO [x] Creating field move edge 'AnotherPost.id/B' (type: ID)
    ├─   0.006347s   0ms INFO [x] Creating field move edge 'AnotherPost.id/B' (type: ID)
    ├─   0.006354s   0ms INFO [x] Creating owned field move edge 'Query.__typename/A' (type: String)
    ├─   0.006363s   0ms INFO [ ] Field 'Query.anotherFeed/A' does is not available in the subgraph, skipping edge creation (type: AnotherPost)
    ├─   0.006368s   0ms INFO [x] Creating field move edge 'Query.feed/A' (type: Post)
    ├─   0.006374s   0ms INFO [x] Creating field move edge 'Query.feed/A' (type: Post)
    ├─   0.006381s   0ms INFO [x] Creating owned field move edge 'Query.__typename/B' (type: String)
    ├─   0.006387s   0ms INFO [x] Creating field move edge 'Query.anotherFeed/B' (type: AnotherPost)
    ├─   0.006393s   0ms INFO [x] Creating field move edge 'Query.anotherFeed/B' (type: AnotherPost)
    ├─   0.006398s   0ms INFO [ ] Field 'Query.feed/B' does is not available in the subgraph, skipping edge creation (type: Post)
    ├─   0.006404s   0ms INFO [x] Creating owned field move edge 'ImagePost.__typename/A' (type: String)
    ├─   0.006411s   0ms INFO [x] Creating field move edge 'ImagePost.createdAt/A' (type: String)
    ├─   0.006416s   0ms INFO [x] Creating field move edge 'ImagePost.createdAt/A' (type: String)
    ├─   0.006422s   0ms INFO [x] Creating field move edge 'ImagePost.id/A' (type: ID)
    ├─   0.006428s   0ms INFO [x] Creating field move edge 'ImagePost.id/A' (type: ID)
    ├─   0.006433s   0ms INFO [x] Creating owned field move edge 'ImagePost.__typename/B' (type: String)
    ├─   0.006440s   0ms INFO [x] Creating field move edge 'ImagePost.createdAt/B' (type: String)
    ├─   0.006446s   0ms INFO [x] Creating field move edge 'ImagePost.createdAt/B' (type: String)
    ├─   0.006452s   0ms INFO [x] Creating field move edge 'ImagePost.id/B' (type: ID)
    ├─   0.006457s   0ms INFO [x] Creating field move edge 'ImagePost.id/B' (type: ID)
    ├─   0.006463s   0ms INFO [x] Creating owned field move edge 'Post.__typename/A' (type: String)
    ├─   0.006469s   0ms INFO [x] Creating field move edge 'Post.createdAt/A' (type: String)
    ├─   0.006475s   0ms INFO [x] Creating field move edge 'Post.createdAt/A' (type: String)
    ├─   0.006480s   0ms INFO [x] Creating field move edge 'Post.id/A' (type: ID)
    ├─   0.006486s   0ms INFO [x] Creating field move edge 'Post.id/A' (type: ID)
    ├─   0.006494s   0ms INFO [x] Creating owned field move edge 'Post.__typename/B' (type: String)
    ├─   0.006504s   0ms INFO [x] Creating field move edge 'Post.createdAt/B' (type: String)
    ├─   0.006512s   0ms INFO [x] Creating field move edge 'Post.createdAt/B' (type: String)
    ├─   0.006520s   0ms INFO [x] Creating field move edge 'Post.id/B' (type: ID)
    ├─   0.006526s   0ms INFO [x] Creating field move edge 'Post.id/B' (type: ID)
  ┌─┘
  └─┐build_interface_implementation_edges{}
    ├─   0.006561s   0ms INFO Building interface implementation edge from 'TextPost/B' to 'Post/B'
    ├─   0.006575s   0ms INFO Building interface implementation edge from 'ImagePost/A' to 'Post/A'
    ├─   0.006588s   0ms INFO Building interface implementation edge from 'ImagePost/B' to 'AnotherPost/B'
  ┌─┘
  └─┐build_entity_reference_edges{}
    ├─   0.006688s   0ms INFO Creating self-referencing entity move edge in 'TextPost/B' via key 'id'
    ├─   0.006756s   0ms INFO Creating self-referencing entity move edge in 'ImagePost/A' via key 'id'
    ├─   0.006808s   0ms INFO Creating entity move edge from 'ImagePost/A' to 'ImagePost/B' via key 'id'
    ├─   0.006841s   0ms INFO Creating entity move edge from 'ImagePost/B' to 'ImagePost/A' via key 'id'
    ├─   0.006872s   0ms INFO Creating self-referencing entity move edge in 'ImagePost/B' via key 'id'
  ┌─┘
  └─┐build_viewed_field_edges{}
  ┌─┘
┌─┘
┘
   0.065813s INFO Starting server on http://localhost:4000
   0.066894s INFO starting 16 workers
   0.066952s INFO Actix runtime found; starting in Actix runtime
   0.066961s INFO starting service: "actix-web-service-0.0.0.0:4000", workers: 16, listening on: 0.0.0.0:4000
   0.296735s DEBUG original document: query ping {
  __typename
}

   0.296898s DEBUG normalized document: query ping {__typename}

   0.296926s DEBUG executable operation: query ping {__typename}
┐execute{}
┘
   0.297313s DEBUG execution result: ExecutionResult { data: Some(Object {"__typename": String("Query")}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan")}}) }
   0.370131s DEBUG original document: query {
  feed {
    id
    createdAt
  }
}

   0.370273s DEBUG normalized document: query{feed{id createdAt}}

   0.370287s DEBUG executable operation: query{feed{id createdAt}}
┐walk_operation{}
├─   0.370695s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="feed", leaf=false}
  ├─   0.370745s   0ms DEBUG Trying to advance to: feed{id createdAt} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "feed", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.370804s   0ms DEBUG checking edge Query/a -(feed)- Post/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="feed"}
        ├─   0.370824s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.370851s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(feed)- Post/a
      ├─   0.370862s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(10)" }])
    ┌─┘
    ├─   0.370904s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "feed", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.370971s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.370980s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.371007s   0ms DEBUG Indirect paths found: 0
    ├─   0.371017s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "feed", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.371049s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.371060s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "feed", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.371075s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.371080s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.371091s   0ms DEBUG Indirect paths found: 0
    ├─   0.371097s   0ms WARN failed to advance: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.371115s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="createdAt", leaf=true}
  ├─   0.371136s   0ms DEBUG Trying to advance to: createdAt through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(feed)- Post/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "createdAt", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(feed)- Post/a", current_cost=1001}
      ├─   0.371161s   0ms DEBUG checking edge Post/a -(createdAt)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(feed)- Post/a", edge="createdAt"}
        ├─   0.371177s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.371191s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(feed)- Post/a with edge Post/a -(createdAt)- String/a
      ├─   0.371199s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(20)" }])
    ┌─┘
    ├─   0.371213s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "createdAt", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(feed)- Post/a", current_cost=1001}
      ├─   0.371230s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.371235s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.371246s   0ms DEBUG Indirect paths found: 0
    ├─   0.371253s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(feed)- Post/a
  ┌─┘
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.371277s   0ms DEBUG Trying to advance to: id through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(feed)- Post/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(feed)- Post/a", current_cost=1001}
      ├─   0.371299s   0ms DEBUG checking edge Post/a -(id)- ID/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(feed)- Post/a", edge="id"}
        ├─   0.371314s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.371327s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(feed)- Post/a with edge Post/a -(id)- ID/a
      ├─   0.371335s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(21)" }])
    ┌─┘
    ├─   0.371347s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(feed)- Post/a", current_cost=1001}
      ├─   0.371364s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.371369s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.371380s   0ms DEBUG Indirect paths found: 0
    ├─   0.371387s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(feed)- Post/a
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(20)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.371431s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.371445s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.371457s   0ms DEBUG Processing edge: Query/a -(feed)- Post/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.371468s   0ms DEBUG Processing edge: Post/a -(createdAt)- String/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.371491s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.371502s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.371512s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(21)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.371545s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.371556s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.371588s   0ms DEBUG Processing edge: Query/a -(feed)- Post/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.371600s   0ms DEBUG Processing edge: Post/a -(id)- ID/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.371619s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.371630s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.371640s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=2}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="feed", leaf=false, list=true, response_path="", fetch_path=""}
          ├─   0.371759s   0ms DEBUG adding output field 'feed' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Post", field="createdAt", leaf=true, list=false, response_path="feed.@", fetch_path="feed.@"}
              ├─   0.371789s   0ms DEBUG adding output field 'createdAt' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Post", field="id", leaf=true, list=false, response_path="feed.@", fetch_path="feed.@"}
              ├─   0.371831s   0ms DEBUG adding output field 'id' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.371892s   0ms DEBUG Done
├─   0.371899s   0ms DEBUG found roots
├─   0.371904s   0ms DEBUG print graph
├─   0.371909s   0ms DEBUG Nodes:
│ [1] Query/a {} → {feed{createdAt id}} at $.
│ 
│ Tree:
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐FetchNode::execute{data=Null, representations=[]}
  └─┐execute{subgraph_name="a"}
    └─┐execute{subgraph_name="a"}
      ├─   0.372336s   0ms DEBUG starting new connection: http://localhost:4200/
      ├─   0.372654s   0ms DEBUG connecting to 127.0.0.1:4200
      ├─   0.373062s   0ms DEBUG connected to 127.0.0.1:4200
      ├─   0.377562s   5ms DEBUG pooling idle connection for ("http", localhost:4200)
    ┌─┘
  ┌─┘
┌─┘
┘
   0.377850s DEBUG execution result: ExecutionResult { data: Some(Object {"feed": Array [Object {"id": String("i1"), "createdAt": String("NEVER")}, Object {"id": String("i2"), "createdAt": String("NEVER")}]}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{feed{createdAt id}}")}}}) }
   0.387644s DEBUG original document: query {
  feed {
    ... on TextPost {
      id
      body
    }
  }
}

   0.387769s DEBUG normalized document: query{feed{...on TextPost{id body}}}

   0.387781s DEBUG executable operation: query{feed{...on TextPost{id body}}}
┐walk_operation{}
├─   0.388096s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="feed", leaf=false}
  ├─   0.388149s   0ms DEBUG Trying to advance to: feed{...on TextPost{id body}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "feed", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "TextPost", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "body", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.388207s   0ms DEBUG checking edge Query/a -(feed)- Post/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="feed"}
        ├─   0.388226s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.388247s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(feed)- Post/a
      ├─   0.388257s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(10)" }])
    ┌─┘
    ├─   0.388272s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "feed", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "TextPost", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "body", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.388299s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.388305s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.388316s   0ms DEBUG Indirect paths found: 0
    ├─   0.388323s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "feed", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "TextPost", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "body", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.388350s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.388360s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "feed", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "TextPost", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "body", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.388375s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.388380s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.388390s   0ms DEBUG Indirect paths found: 0
    ├─   0.388396s   0ms WARN failed to advance: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.388409s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_inline_fragment{type_condition="TextPost"}
  ├─   0.388433s   0ms DEBUG Processing inline fragment '{id body}' on type 'TextPost' through 1 possible paths
  ├─   0.388440s   0ms DEBUG Trying to advance to: ... on TextPost, through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(feed)- Post/a"}
    └─┐find_direct_paths{target=ConcreteType("TextPost"), path="root(Query) -(a)- Query/a -(feed)- Post/a", current_cost=1001}
      ├─   0.388477s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.388488s   0ms DEBUG Direct paths found: 0
    ├─   0.388493s   0ms WARN Object type 'TextPost' is not resolvable by 'Post', resolve only the __typename
  ┌─┘
  └─┐explore_path{path="root(Query) -(a)- Query/a -(feed)- Post/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(feed)- Post/a", current_cost=1001}
      ├─   0.388526s   0ms DEBUG checking edge Post/a -(__typename)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(feed)- Post/a", edge="__typename"}
        ├─   0.388541s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.388555s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(feed)- Post/a with edge Post/a -(__typename)- String/a
      ├─   0.388562s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(19)" }])
    ┌─┘
    ├─   0.388576s   0ms DEBUG Direct paths found: 1
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(19)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.388619s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.388632s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.388643s   0ms DEBUG Processing edge: Query/a -(feed)- Post/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.388654s   0ms DEBUG Processing edge: Post/a -(__typename)- String/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.388672s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.388682s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.388692s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=1}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="feed", leaf=false, list=true, response_path="", fetch_path=""}
          ├─   0.388792s   0ms DEBUG adding output field 'feed' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Post", field="__typename", leaf=true, list=false, response_path="feed.@", fetch_path="feed.@"}
              ├─   0.388824s   0ms DEBUG adding output field '__typename' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.388884s   0ms DEBUG Done
├─   0.388890s   0ms DEBUG found roots
├─   0.388894s   0ms DEBUG print graph
├─   0.388899s   0ms DEBUG Nodes:
│ [1] Query/a {} → {feed{__typename}} at $.
│ 
│ Tree:
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐FetchNode::execute{data=Null, representations=[]}
  └─┐execute{subgraph_name="a"}
    └─┐execute{subgraph_name="a"}
      ├─   0.389218s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
      ├─   0.391018s   1ms DEBUG pooling idle connection for ("http", localhost:4200)
    ┌─┘
  ┌─┘
┌─┘
┘
┐entity_satisfies_type_condition{possible_types={"Post": ["ImagePost", "TextPost"], "AnotherPost": ["ImagePost"]}, type_name="ImagePost", type_condition="TextPost"}
┘
┐entity_satisfies_type_condition{possible_types={"Post": ["ImagePost", "TextPost"], "AnotherPost": ["ImagePost"]}, type_name="ImagePost", type_condition="TextPost"}
┘
   0.391250s DEBUG execution result: ExecutionResult { data: Some(Object {"feed": Array [Object {}, Object {}]}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{feed{__typename}}")}}}) }
   0.393856s DEBUG original document: query {
  anotherFeed {
    createdAt
  }
}

   0.393945s DEBUG normalized document: query{anotherFeed{createdAt}}

   0.393972s DEBUG executable operation: query{anotherFeed{createdAt}}
┐walk_operation{}
├─   0.394218s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="anotherFeed", leaf=false}
  ├─   0.394258s   0ms DEBUG Trying to advance to: anotherFeed{createdAt} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "anotherFeed", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.394324s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.394357s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "anotherFeed", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.394384s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.394391s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.394405s   0ms DEBUG Indirect paths found: 0
    ├─   0.394414s   0ms WARN failed to advance: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "anotherFeed", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.394449s   0ms DEBUG checking edge Query/b -(anotherFeed)- AnotherPost/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="anotherFeed"}
        ├─   0.394479s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.394496s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(anotherFeed)- AnotherPost/b
      ├─   0.394506s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.394522s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "anotherFeed", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.394545s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.394551s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.394566s   0ms DEBUG Indirect paths found: 0
    ├─   0.394577s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.394592s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="createdAt", leaf=true}
  ├─   0.394615s   0ms DEBUG Trying to advance to: createdAt through 1 possible paths
  └─┐explore_path{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "createdAt", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b", current_cost=1001}
      ├─   0.394673s   0ms DEBUG checking edge AnotherPost/b -(createdAt)- String/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b", edge="createdAt"}
        ├─   0.394694s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.394734s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b with edge AnotherPost/b -(createdAt)- String/b
      ├─   0.394746s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(7)" }])
    ┌─┘
    ├─   0.394764s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "createdAt", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b", current_cost=1001}
      ├─   0.394807s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.394813s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.394827s   0ms DEBUG Indirect paths found: 0
    ├─   0.394836s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(7)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.394887s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.394902s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.394916s   0ms DEBUG Processing edge: Query/b -(anotherFeed)- AnotherPost/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.394931s   0ms DEBUG Processing edge: AnotherPost/b -(createdAt)- String/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.394952s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.394965s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.394977s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=1}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="b", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="anotherFeed", leaf=false, list=true, response_path="", fetch_path=""}
          ├─   0.395106s   0ms DEBUG adding output field 'anotherFeed' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="AnotherPost", field="createdAt", leaf=true, list=false, response_path="anotherFeed.@", fetch_path="anotherFeed.@"}
              ├─   0.395142s   0ms DEBUG adding output field 'createdAt' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.395219s   0ms DEBUG Done
├─   0.395228s   0ms DEBUG found roots
├─   0.395234s   0ms DEBUG print graph
├─   0.395239s   0ms DEBUG Nodes:
│ [1] Query/b {} → {anotherFeed{createdAt}} at $.
│ 
│ Tree:
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐FetchNode::execute{data=Null, representations=[]}
  └─┐execute{subgraph_name="b"}
    └─┐execute{subgraph_name="b"}
      ├─   0.395607s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
      ├─   0.400175s   4ms DEBUG pooling idle connection for ("http", localhost:4200)
    ┌─┘
  ┌─┘
┌─┘
┘
   0.400596s DEBUG execution result: ExecutionResult { data: Some(Object {"anotherFeed": Array [Object {"createdAt": String("i1-createdAt")}, Object {"createdAt": String("i2-createdAt")}]}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Fetch"), "serviceName": String("b"), "operationKind": String("query"), "operation": String("{anotherFeed{createdAt}}")}}}) }
   0.403366s DEBUG original document: {
  anotherFeed {
    createdAt
    id
    ... on ImagePost {
      createdAt
      id
    }
  }
}

   0.403521s DEBUG normalized document: query{anotherFeed{createdAt id ...on ImagePost{createdAt id}}}

   0.403533s DEBUG executable operation: query{anotherFeed{createdAt id ...on ImagePost{createdAt id}}}
┐walk_operation{}
├─   0.403893s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="anotherFeed", leaf=false}
  ├─   0.403937s   0ms DEBUG Trying to advance to: anotherFeed{createdAt id ...on ImagePost{createdAt id}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "anotherFeed", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "ImagePost", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.403994s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.404019s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "anotherFeed", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "ImagePost", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.404047s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.404054s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.404065s   0ms DEBUG Indirect paths found: 0
    ├─   0.404073s   0ms WARN failed to advance: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "anotherFeed", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "ImagePost", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.404104s   0ms DEBUG checking edge Query/b -(anotherFeed)- AnotherPost/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="anotherFeed"}
        ├─   0.404122s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.404136s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(anotherFeed)- AnotherPost/b
      ├─   0.404145s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.404160s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "anotherFeed", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "ImagePost", selections: SelectionSet { items: [SelectionItem::Field { name: "createdAt", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.404182s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.404188s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.404198s   0ms DEBUG Indirect paths found: 0
    ├─   0.404205s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.404219s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_inline_fragment{type_condition="ImagePost"}
  ├─   0.404242s   0ms DEBUG Processing inline fragment '{createdAt id}' on type 'ImagePost' through 1 possible paths
  ├─   0.404249s   0ms DEBUG Trying to advance to: ... on ImagePost, through 1 possible paths
  └─┐explore_path{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b"}
    └─┐find_direct_paths{target=ConcreteType("ImagePost"), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b", current_cost=1001}
      ├─   0.404280s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b with edge AnotherPost/b -(🔮)- ImagePost/b
      ├─   0.404288s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27)" }])
    ┌─┘
    ├─   0.404302s   0ms DEBUG Direct paths found: 1
    ├─   0.404309s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="createdAt", leaf=true}
      ├─   0.404334s   0ms DEBUG Trying to advance to: createdAt through 1 possible paths
      └─┐explore_path{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "createdAt", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", current_cost=2001}
          ├─   0.404363s   0ms DEBUG checking edge ImagePost/b -(createdAt)- String/b
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", edge="createdAt"}
            ├─   0.404381s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.404396s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b with edge ImagePost/b -(createdAt)- String/b
          ├─   0.404405s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(17)" }])
        ┌─┘
        ├─   0.404419s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "createdAt", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", current_cost=2001}
          ├─   0.404441s   0ms DEBUG Exploring edge ImagePost/b -(🔑🧩{id})- ImagePost/b
          ├─   0.404449s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.404456s   0ms DEBUG Exploring edge ImagePost/b -(🔑🧩{id})- ImagePost/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", edge="id"}
            ├─   0.404476s   0ms DEBUG checking requirements {id} for edge 'ImagePost/b -(🔑🧩{id})- ImagePost/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", current_cost=2001}
                  ├─   0.404517s   0ms DEBUG checking edge ImagePost/b -(id)- ID/b
                  └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", edge="id"}
                    ├─   0.404537s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.404554s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b with edge ImagePost/b -(id)- ID/b
                  ├─   0.404563s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(18)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", current_cost=2001}
                  ├─   0.404594s   0ms DEBUG Exploring edge ImagePost/b -(🔑🧩{id})- ImagePost/b
                  ├─   0.404601s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.404608s   0ms DEBUG Exploring edge ImagePost/b -(🔑🧩{id})- ImagePost/a
                  ├─   0.404616s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.404625s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.404631s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.404648s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(18)" }], [])))
              ┌─┘
              ├─   0.404666s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(18)" }], [])))
            ┌─┘
            ├─   0.404681s   0ms DEBUG Paths for id
            ├─   0.404691s   0ms DEBUG   Path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b -(id)- ID/b is valid
            ├─   0.404698s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.404715s   0ms DEBUG path ImagePost/b -(id)- ID/b is valid
            ├─   0.404721s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(18)" }]))
          ┌─┘
          ├─   0.404737s   0ms DEBUG Advancing path to ImagePost/b -(🔑🧩{id})- ImagePost/a
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(18)" }, root_node="ImagePost/b"}
            └─┐create_root_for_path_sequences{root_node="ImagePost/b", segments_count=1}
              ├─   0.404792s   0ms DEBUG Building root query tree node: ImagePost/b
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.404809s   0ms DEBUG Processing edge: ImagePost/b -(id)- ID/b
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.404832s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "createdAt", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b -(🔑🧩{id})- ImagePost/a", current_cost=3003}
            ├─   0.404881s   0ms DEBUG checking edge ImagePost/a -(createdAt)- String/a
            └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b -(🔑🧩{id})- ImagePost/a", edge="createdAt"}
              ├─   0.404901s   0ms INFO return=Ok(Some([]))
            ┌─┘
            ├─   0.404918s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b -(🔑🧩{id})- ImagePost/a with edge ImagePost/a -(createdAt)- String/a
            ├─   0.404926s   0ms INFO return=Ok([ { cost: 3004, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(31) --> EdgeIndex(14)" }])
          ┌─┘
          ├─   0.404944s   0ms DEBUG Found 1 direct paths to ImagePost/b -(🔑🧩{id})- ImagePost/a
          ├─   0.404958s   0ms DEBUG Finished finding indirect paths, found total of 1
          ├─   0.404964s   0ms INFO return=Ok([ { cost: 3004, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(31) --> EdgeIndex(14)" }])
        ┌─┘
        ├─   0.404978s   0ms DEBUG Indirect paths found: 1
        ├─   0.404990s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b
      ┌─┘
    ┌─┘
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.405018s   0ms DEBUG Trying to advance to: id through 1 possible paths
      └─┐explore_path{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", current_cost=2001}
          ├─   0.405045s   0ms DEBUG checking edge ImagePost/b -(id)- ID/b
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", edge="id"}
            ├─   0.405062s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.405078s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b with edge ImagePost/b -(id)- ID/b
          ├─   0.405086s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(18)" }])
        ┌─┘
        ├─   0.405100s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", current_cost=2001}
          ├─   0.405120s   0ms DEBUG Exploring edge ImagePost/b -(🔑🧩{id})- ImagePost/b
          ├─   0.405126s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.405132s   0ms DEBUG Exploring edge ImagePost/b -(🔑🧩{id})- ImagePost/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", edge="id"}
            ├─   0.405149s   0ms DEBUG checking requirements {id} for edge 'ImagePost/b -(🔑🧩{id})- ImagePost/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", current_cost=2001}
                  ├─   0.405182s   0ms DEBUG checking edge ImagePost/b -(id)- ID/b
                  └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", edge="id"}
                    ├─   0.405200s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.405217s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b with edge ImagePost/b -(id)- ID/b
                  ├─   0.405226s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(18)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b", current_cost=2001}
                  ├─   0.405256s   0ms DEBUG Exploring edge ImagePost/b -(🔑🧩{id})- ImagePost/b
                  ├─   0.405263s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.405269s   0ms DEBUG Exploring edge ImagePost/b -(🔑🧩{id})- ImagePost/a
                  ├─   0.405276s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.405284s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.405290s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.405306s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(18)" }], [])))
              ┌─┘
              ├─   0.405321s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(18)" }], [])))
            ┌─┘
            ├─   0.405335s   0ms DEBUG Paths for id
            ├─   0.405344s   0ms DEBUG   Path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b -(id)- ID/b is valid
            ├─   0.405350s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.405361s   0ms DEBUG path ImagePost/b -(id)- ID/b is valid
            ├─   0.405367s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(18)" }]))
          ┌─┘
          ├─   0.405381s   0ms DEBUG Advancing path to ImagePost/b -(🔑🧩{id})- ImagePost/a
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(18)" }, root_node="ImagePost/b"}
            └─┐create_root_for_path_sequences{root_node="ImagePost/b", segments_count=1}
              ├─   0.405405s   0ms DEBUG Building root query tree node: ImagePost/b
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.405419s   0ms DEBUG Processing edge: ImagePost/b -(id)- ID/b
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.405439s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b -(🔑🧩{id})- ImagePost/a", current_cost=3003}
            ├─   0.405483s   0ms DEBUG checking edge ImagePost/a -(id)- ID/a
            └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b -(🔑🧩{id})- ImagePost/a", edge="id"}
              ├─   0.405502s   0ms INFO return=Ok(Some([]))
            ┌─┘
            ├─   0.405518s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b -(🔑🧩{id})- ImagePost/a with edge ImagePost/a -(id)- ID/a
            ├─   0.405525s   0ms INFO return=Ok([ { cost: 3004, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(31) --> EdgeIndex(15)" }])
          ┌─┘
          ├─   0.405541s   0ms DEBUG Found 1 direct paths to ImagePost/b -(🔑🧩{id})- ImagePost/a
          ├─   0.405551s   0ms DEBUG Finished finding indirect paths, found total of 1
          ├─   0.405556s   0ms INFO return=Ok([ { cost: 3004, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(31) --> EdgeIndex(15)" }])
        ┌─┘
        ├─   0.405570s   0ms DEBUG Indirect paths found: 1
        ├─   0.405579s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b -(🔮)- ImagePost/b
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.405616s   0ms DEBUG Trying to advance to: id through 1 possible paths
  └─┐explore_path{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b", current_cost=1001}
      ├─   0.405640s   0ms DEBUG checking edge AnotherPost/b -(id)- ID/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b", edge="id"}
        ├─   0.405656s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.405670s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b with edge AnotherPost/b -(id)- ID/b
      ├─   0.405698s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(8)" }])
    ┌─┘
    ├─   0.405720s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b", current_cost=1001}
      ├─   0.405745s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.405763s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.405780s   0ms DEBUG Indirect paths found: 0
    ├─   0.405790s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b
  ┌─┘
┌─┘
└─┐process_field{field_name="createdAt", leaf=true}
  ├─   0.405818s   0ms DEBUG Trying to advance to: createdAt through 1 possible paths
  └─┐explore_path{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "createdAt", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b", current_cost=1001}
      ├─   0.405844s   0ms DEBUG checking edge AnotherPost/b -(createdAt)- String/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b", edge="createdAt"}
        ├─   0.405860s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.405874s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b with edge AnotherPost/b -(createdAt)- String/b
      ├─   0.405882s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(7)" }])
    ┌─┘
    ├─   0.405896s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "createdAt", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b", current_cost=1001}
      ├─   0.405914s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.405919s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.405929s   0ms DEBUG Indirect paths found: 0
    ├─   0.405936s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(anotherFeed)- AnotherPost/b
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(17)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.405980s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.405991s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.406003s   0ms DEBUG Processing edge: Query/b -(anotherFeed)- AnotherPost/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.406014s   0ms DEBUG Processing edge: AnotherPost/b -(🔮)- ImagePost/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.406026s   0ms DEBUG Processing edge: ImagePost/b -(createdAt)- String/b
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.406044s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.406055s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.406066s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.406075s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(27) --> EdgeIndex(18)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.406107s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.406117s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.406128s   0ms DEBUG Processing edge: Query/b -(anotherFeed)- AnotherPost/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.406139s   0ms DEBUG Processing edge: AnotherPost/b -(🔮)- ImagePost/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.406151s   0ms DEBUG Processing edge: ImagePost/b -(id)- ID/b
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.406169s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.406180s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.406190s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.406202s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(8)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.406233s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.406243s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.406254s   0ms DEBUG Processing edge: Query/b -(anotherFeed)- AnotherPost/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.406266s   0ms DEBUG Processing edge: AnotherPost/b -(id)- ID/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.406283s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.406293s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.406303s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(7)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.406334s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.406344s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.406357s   0ms DEBUG Processing edge: Query/b -(anotherFeed)- AnotherPost/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.406368s   0ms DEBUG Processing edge: AnotherPost/b -(createdAt)- String/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.406385s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.406396s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.406405s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=4}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="b", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="anotherFeed", leaf=false, list=true, response_path="", fetch_path=""}
          ├─   0.406515s   0ms DEBUG adding output field 'anotherFeed' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=3, parent_fetch_step_index=1}
            └─┐process_abstract_edge{parent_fetch_step_index=1, type_name="ImagePost", response_path="anotherFeed.@", fetch_path="anotherFeed.@"}
              ├─   0.406548s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '1' to fetch step [ImagePost]
              └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=1}
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="ImagePost", field="createdAt", leaf=true, list=false, response_path="anotherFeed.@", fetch_path="anotherFeed.@"}
                  ├─   0.406578s   0ms DEBUG adding output field 'createdAt' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                  ┌─┘
                ┌─┘
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="ImagePost", field="id", leaf=true, list=false, response_path="anotherFeed.@", fetch_path="anotherFeed.@"}
                  ├─   0.406619s   0ms DEBUG adding output field 'id' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="AnotherPost", field="id", leaf=true, list=false, response_path="anotherFeed.@", fetch_path="anotherFeed.@"}
              ├─   0.406670s   0ms DEBUG adding output field 'id' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="AnotherPost", field="createdAt", leaf=true, list=false, response_path="anotherFeed.@", fetch_path="anotherFeed.@"}
              ├─   0.406706s   0ms DEBUG adding output field 'createdAt' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.406766s   0ms DEBUG Done
├─   0.406773s   0ms DEBUG found roots
├─   0.406777s   0ms DEBUG print graph
├─   0.406782s   0ms DEBUG Nodes:
│ [1] Query/b {} → {anotherFeed{__typename ...on ImagePost{createdAt id} id createdAt}} at $.
│ 
│ Tree:
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐FetchNode::execute{data=Null, representations=[]}
  └─┐execute{subgraph_name="b"}
    └─┐execute{subgraph_name="b"}
      ├─   0.407193s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
      ├─   0.409155s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
    ┌─┘
  ┌─┘
┌─┘
┘
┐entity_satisfies_type_condition{possible_types={"Post": ["ImagePost", "TextPost"], "AnotherPost": ["ImagePost"]}, type_name="ImagePost", type_condition="ImagePost"}
┘
┐entity_satisfies_type_condition{possible_types={"Post": ["ImagePost", "TextPost"], "AnotherPost": ["ImagePost"]}, type_name="ImagePost", type_condition="ImagePost"}
┘
   0.409537s DEBUG execution result: ExecutionResult { data: Some(Object {"anotherFeed": Array [Object {"createdAt": String("i1-createdAt"), "id": String("i1")}, Object {"createdAt": String("i2-createdAt"), "id": String("i2")}]}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Fetch"), "serviceName": String("b"), "operationKind": String("query"), "operation": String("{anotherFeed{__typename ...on ImagePost{createdAt id} id createdAt}}")}}}) }
