generating supergraph file for test...
running gateway...
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.11s
     Running `target/debug/gateway audits/fed-audit-supergraph.graphql`
┐new_supergraph_state{}
└─┐build_map{}
  └─┐build_object_type{name="Account"}
    └─┐build_fields{fields_count=3}
    ┌─┘
  ┌─┘
  └─┐build_object_type{name="Chat"}
    └─┐build_fields{fields_count=3}
    ┌─┘
  ┌─┘
  └─┐build_scalar_type{name="join__FieldSet"}
  ┌─┘
  └─┐build_enum_type{name="join__Graph"}
  ┌─┘
  └─┐build_scalar_type{name="link__Import"}
  ┌─┘
  └─┐build_enum_type{name="link__Purpose"}
  ┌─┘
  └─┐build_interface_type{name="Node"}
    └─┐build_fields{fields_count=1}
    ┌─┘
  ┌─┘
  └─┐build_object_type{name="Query"}
    └─┐build_fields{fields_count=3}
    ┌─┘
  ┌─┘
┌─┘
└─┐decompose_from_supergraph{graph_id="A"}
┌─┘
└─┐decompose_from_supergraph{graph_id="B"}
┌─┘
┘
┐graph_from_supergraph_state{}
└─┐build_graph{}
  ├─   0.007355s   0ms DEBUG Building graph for supergraph with 16 definitions
  └─┐build_root_nodes{}
    ├─   0.007397s   0ms DEBUG added root type for queries: Query
  ┌─┘
  └─┐link_root_edges{}
  ┌─┘
  └─┐build_field_edges{}
    ├─   0.007457s   0ms INFO [x] Creating owned field move edge 'Chat.__typename/A' (type: String)
    ├─   0.007470s   0ms INFO [ ] Field 'Chat.id/A' is external, skipping edge creation
    ├─   0.007477s   0ms INFO [x] Creating field move edge 'Chat.account/A' (type: Account)
    ├─   0.007485s   0ms INFO [x] Creating field move edge 'Chat.account/A' (type: Account)
    ├─   0.007493s   0ms INFO [ ] Field 'Chat.text/A' does is not available in the subgraph, skipping edge creation (type: String)
    ├─   0.007499s   0ms INFO [x] Creating owned field move edge 'Chat.__typename/B' (type: String)
    ├─   0.007508s   0ms INFO [x] Creating field move edge 'Chat.id/B' (type: ID)
    ├─   0.007522s   0ms INFO [x] Creating field move edge 'Chat.id/B' (type: ID)
    ├─   0.007528s   0ms INFO [ ] Field 'Chat.account/B' does is not available in the subgraph, skipping edge creation (type: Account)
    ├─   0.007533s   0ms INFO [x] Creating field move edge 'Chat.text/B' (type: String)
    ├─   0.007539s   0ms INFO [x] Creating field move edge 'Chat.text/B' (type: String)
    ├─   0.007576s   0ms INFO [x] Creating owned field move edge 'Query.__typename/A' (type: String)
    ├─   0.007587s   0ms INFO [ ] Field 'Query.chat/A' does is not available in the subgraph, skipping edge creation (type: Chat)
    ├─   0.007593s   0ms INFO [x] Creating field move edge 'Query.account/A' (type: Account)
    ├─   0.007599s   0ms INFO [x] Creating field move edge 'Query.account/A' (type: Account)
    ├─   0.007606s   0ms INFO [x] Creating field move edge 'Query.node/A' (type: Node)
    ├─   0.007612s   0ms INFO [x] Creating field move edge 'Query.node/A' (type: Node)
    ├─   0.007618s   0ms INFO [x] Creating owned field move edge 'Query.__typename/B' (type: String)
    ├─   0.007625s   0ms INFO [x] Creating field move edge 'Query.chat/B' (type: Chat)
    ├─   0.007630s   0ms INFO [x] Creating field move edge 'Query.chat/B' (type: Chat)
    ├─   0.007636s   0ms INFO [ ] Field 'Query.account/B' does is not available in the subgraph, skipping edge creation (type: Account)
    ├─   0.007641s   0ms INFO [x] Creating field move edge 'Query.node/B' (type: Node)
    ├─   0.007647s   0ms INFO [x] Creating field move edge 'Query.node/B' (type: Node)
    ├─   0.007653s   0ms INFO [x] Creating owned field move edge 'Node.__typename/A' (type: String)
    ├─   0.007660s   0ms INFO [x] Creating field move edge 'Node.id/A' (type: ID)
    ├─   0.007666s   0ms INFO [x] Creating field move edge 'Node.id/A' (type: ID)
    ├─   0.007671s   0ms INFO [x] Creating owned field move edge 'Node.__typename/B' (type: String)
    ├─   0.007678s   0ms INFO [x] Creating field move edge 'Node.id/B' (type: ID)
    ├─   0.007684s   0ms INFO [x] Creating field move edge 'Node.id/B' (type: ID)
    ├─   0.007690s   0ms INFO [x] Creating owned field move edge 'Account.__typename/A' (type: String)
    ├─   0.007696s   0ms INFO [ ] Field 'Account.chats/A' does is not available in the subgraph, skipping edge creation (type: Chat)
    ├─   0.007713s   0ms INFO [x] Creating field move edge 'Account.username/A' (type: String)
    ├─   0.007722s   0ms INFO [x] Creating field move edge 'Account.username/A' (type: String)
    ├─   0.007729s   0ms INFO [x] Creating field move edge 'Account.id/A' (type: ID)
    ├─   0.007735s   0ms INFO [x] Creating field move edge 'Account.id/A' (type: ID)
    ├─   0.007741s   0ms INFO [x] Creating owned field move edge 'Account.__typename/B' (type: String)
    ├─   0.007748s   0ms INFO [x] Creating field move edge 'Account.chats/B' (type: Chat)
    ├─   0.007754s   0ms INFO [x] Creating field move edge 'Account.chats/B' (type: Chat)
    ├─   0.007760s   0ms INFO [ ] Field 'Account.username/B' does is not available in the subgraph, skipping edge creation (type: String)
    ├─   0.007765s   0ms INFO [ ] Field 'Account.id/B' is external, skipping edge creation
  ┌─┘
  └─┐build_interface_implementation_edges{}
    ├─   0.007795s   0ms INFO Building interface implementation edge from 'Chat/A' to 'Node/A'
    ├─   0.007802s   0ms INFO Building interface implementation edge from 'Chat/B' to 'Node/B'
    ├─   0.007808s   0ms INFO Building interface implementation edge from 'Account/A' to 'Node/A'
    ├─   0.007815s   0ms INFO Building interface implementation edge from 'Account/B' to 'Node/B'
  ┌─┘
  └─┐build_entity_reference_edges{}
    ├─   0.007907s   0ms INFO Creating self-referencing entity move edge in 'Chat/A' via key 'id'
    ├─   0.007983s   0ms INFO Creating entity move edge from 'Chat/A' to 'Chat/B' via key 'id'
    ├─   0.008055s   0ms INFO Creating entity move edge from 'Chat/B' to 'Chat/A' via key 'id'
    ├─   0.008094s   0ms INFO Creating self-referencing entity move edge in 'Chat/B' via key 'id'
    ├─   0.008139s   0ms INFO Creating self-referencing entity move edge in 'Account/A' via key 'id'
    ├─   0.008171s   0ms INFO Creating entity move edge from 'Account/A' to 'Account/B' via key 'id'
    ├─   0.008204s   0ms INFO Creating entity move edge from 'Account/B' to 'Account/A' via key 'id'
    ├─   0.008236s   0ms INFO Creating self-referencing entity move edge in 'Account/B' via key 'id'
  ┌─┘
  └─┐build_viewed_field_edges{}
  ┌─┘
┌─┘
┘
   0.067400s INFO Starting server on http://localhost:4000
   0.068436s INFO starting 16 workers
   0.068479s INFO Actix runtime found; starting in Actix runtime
   0.068488s INFO starting service: "actix-web-service-0.0.0.0:4000", workers: 16, listening on: 0.0.0.0:4000
   0.286314s DEBUG original document: query ping {
  __typename
}

   0.286483s DEBUG normalized document: query ping {__typename}

   0.286512s DEBUG executable operation: query ping {__typename}
┐execute{}
┘
   0.286911s DEBUG execution result: ExecutionResult { data: Some(Object {"__typename": String("Query")}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan")}}) }
   0.362223s DEBUG original document: query {
  node(id: "a1") {
    id
  }
}

   0.362382s DEBUG normalized document: query{node(id: "a1"){id}}

   0.362407s DEBUG executable operation: query{node(id: "a1"){id}}
┐walk_operation{}
├─   0.362811s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="node", leaf=false}
  ├─   0.362863s   0ms DEBUG Trying to advance to: node(id: "a1"){id} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.362949s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.362992s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.363028s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.363046s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.363066s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.363102s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.363109s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.363124s   0ms DEBUG Indirect paths found: 0
    ├─   0.363133s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.363169s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.363187s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.363203s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.363213s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.363229s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.363252s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.363258s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.363272s   0ms DEBUG Indirect paths found: 0
    ├─   0.363281s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.363296s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.363321s   0ms DEBUG Trying to advance to: id through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.363347s   0ms DEBUG checking edge Node/a -(id)- ID/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a", edge="id"}
        ├─   0.363362s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.363375s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(id)- ID/a
      ├─   0.363383s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(14)" }])
    ┌─┘
    ├─   0.363396s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.363412s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.363417s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.363428s   0ms DEBUG Indirect paths found: 0
    ├─   0.363434s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.363461s   0ms DEBUG checking edge Node/b -(id)- ID/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b", edge="id"}
        ├─   0.363475s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.363489s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(id)- ID/b
      ├─   0.363498s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(16)" }])
    ┌─┘
    ├─   0.363510s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.363526s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.363531s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.363541s   0ms DEBUG Indirect paths found: 0
    ├─   0.363548s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(14)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.363592s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.363607s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.363619s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.363650s   0ms DEBUG Processing edge: Node/a -(id)- ID/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.363672s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.363683s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.363693s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=1}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="node", arguments="id: \"a1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.363809s   0ms DEBUG adding output field 'node' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Node", field="id", leaf=true, list=false, response_path="node", fetch_path="node"}
              ├─   0.363844s   0ms DEBUG adding output field 'id' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.363905s   0ms DEBUG Done
├─   0.363912s   0ms DEBUG found roots
├─   0.363917s   0ms DEBUG print graph
├─   0.363922s   0ms DEBUG Nodes:
│ [1] Query/a {} → {node(id: "a1"){id}} at $.
│ 
│ Tree:
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐FetchNode::execute{data=Null, representations=[]}
  └─┐execute{subgraph_name="a"}
    └─┐execute{subgraph_name="a"}
      ├─   0.364321s   0ms DEBUG starting new connection: http://localhost:4200/
      ├─   0.364683s   0ms DEBUG connecting to 127.0.0.1:4200
      ├─   0.365100s   0ms DEBUG connected to 127.0.0.1:4200
      ├─   0.370342s   6ms DEBUG pooling idle connection for ("http", localhost:4200)
    ┌─┘
  ┌─┘
┌─┘
┘
   0.370593s DEBUG execution result: ExecutionResult { data: Some(Object {"node": Object {"id": String("a1")}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{node(id: \"a1\"){id}}")}}}) }
   0.379102s DEBUG original document: query {
  account: node(id: "a1") {
    __typename
  }
  chat: node(id: "c1") {
    __typename
  }
}

   0.379239s DEBUG normalized document: query{account: node(id: "a1"){__typename} chat: node(id: "c1"){__typename}}

   0.379270s DEBUG executable operation: query{account: node(id: "a1"){__typename} chat: node(id: "c1"){__typename}}
┐walk_operation{}
├─   0.379705s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="node", leaf=false}
  ├─   0.379750s   0ms DEBUG Trying to advance to: chat: node(id: "c1"){__typename} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.379805s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.379825s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.379849s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.379862s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.379878s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.379904s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.379911s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.379923s   0ms DEBUG Indirect paths found: 0
    ├─   0.379930s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.379959s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.379976s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.380026s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.380038s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.380052s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.380085s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.380091s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.380102s   0ms DEBUG Indirect paths found: 0
    ├─   0.380109s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.380123s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_field{field_name="__typename", leaf=true}
  ├─   0.380144s   0ms DEBUG Trying to advance to: __typename through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.380170s   0ms DEBUG checking edge Node/a -(__typename)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a", edge="__typename"}
        ├─   0.380186s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.380200s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(__typename)- String/a
      ├─   0.380208s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(13)" }])
    ┌─┘
    ├─   0.380221s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.380239s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.380245s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.380256s   0ms DEBUG Indirect paths found: 0
    ├─   0.380263s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.380296s   0ms DEBUG checking edge Node/b -(__typename)- String/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b", edge="__typename"}
        ├─   0.380311s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.380325s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(__typename)- String/b
      ├─   0.380332s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(15)" }])
    ┌─┘
    ├─   0.380345s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.380362s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.380368s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.380379s   0ms DEBUG Indirect paths found: 0
    ├─   0.380385s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
┌─┘
└─┐process_field{field_name="node", leaf=false}
  ├─   0.380412s   0ms DEBUG Trying to advance to: account: node(id: "a1"){__typename} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.380441s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.380456s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.380470s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.380479s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.380492s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.380510s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.380516s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.380542s   0ms DEBUG Indirect paths found: 0
    ├─   0.380554s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.380589s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.380605s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.380620s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.380628s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.380648s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.380680s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.380688s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.380701s   0ms DEBUG Indirect paths found: 0
    ├─   0.380709s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.380721s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_field{field_name="__typename", leaf=true}
  ├─   0.380756s   0ms DEBUG Trying to advance to: __typename through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.380793s   0ms DEBUG checking edge Node/a -(__typename)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a", edge="__typename"}
        ├─   0.380809s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.380826s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(__typename)- String/a
      ├─   0.380836s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(13)" }])
    ┌─┘
    ├─   0.380850s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.380870s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.380875s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.380886s   0ms DEBUG Indirect paths found: 0
    ├─   0.380893s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.380924s   0ms DEBUG checking edge Node/b -(__typename)- String/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b", edge="__typename"}
        ├─   0.380940s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.380953s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(__typename)- String/b
      ├─   0.380960s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(15)" }])
    ┌─┘
    ├─   0.380973s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.380991s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.380997s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.381008s   0ms DEBUG Indirect paths found: 0
    ├─   0.381014s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(13)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.381059s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.381072s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.381084s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.381097s   0ms DEBUG Processing edge: Node/a -(__typename)- String/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.381117s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.381128s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.381139s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(13)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.381172s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.381183s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.381194s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.381206s   0ms DEBUG Processing edge: Node/a -(__typename)- String/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.381224s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.381234s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.381245s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=2}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="node", alias="chat", arguments="id: \"c1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.381362s   0ms DEBUG adding output field 'node' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Node", field="__typename", leaf=true, list=false, response_path="chat", fetch_path="chat"}
              ├─   0.381397s   0ms DEBUG adding output field '__typename' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="node", alias="account", arguments="id: \"a1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.381482s   0ms DEBUG adding output field 'node' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Node", field="__typename", leaf=true, list=false, response_path="account", fetch_path="account"}
              ├─   0.381511s   0ms DEBUG adding output field '__typename' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.381576s   0ms DEBUG Done
├─   0.381583s   0ms DEBUG found roots
├─   0.381588s   0ms DEBUG print graph
├─   0.381593s   0ms DEBUG Nodes:
│ [1] Query/a {} → {chat: node(id: "c1"){__typename} account: node(id: "a1"){__typename}} at $.
│ 
│ Tree:
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐FetchNode::execute{data=Null, representations=[]}
  └─┐execute{subgraph_name="a"}
    └─┐execute{subgraph_name="a"}
      ├─   0.381985s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
      ├─   0.385225s   3ms DEBUG pooling idle connection for ("http", localhost:4200)
    ┌─┘
  ┌─┘
┌─┘
┘
   0.385452s DEBUG execution result: ExecutionResult { data: Some(Object {"account": Object {"__typename": String("Account")}, "chat": Object {"__typename": String("Chat")}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{chat: node(id: \"c1\"){__typename} account: node(id: \"a1\"){__typename}}")}}}) }
   0.388506s DEBUG original document: query {
  account: node(id: "a1") {
    ... on Account {
      id
      username
    }
  }
  chat: node(id: "c1") {
    ... on Chat {
      id
      text
    }
  }
}

   0.388681s DEBUG normalized document: query{account: node(id: "a1"){...on Account{id username}} chat: node(id: "c1"){...on Chat{id text}}}

   0.388719s DEBUG executable operation: query{account: node(id: "a1"){...on Account{id username}} chat: node(id: "c1"){...on Chat{id text}}}
┐walk_operation{}
├─   0.389201s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="node", leaf=false}
  ├─   0.389259s   0ms DEBUG Trying to advance to: chat: node(id: "c1"){...on Chat{id text}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "text", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.389316s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.389336s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.389356s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.389368s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.389384s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "text", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.389410s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.389416s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.389427s   0ms DEBUG Indirect paths found: 0
    ├─   0.389434s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "text", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.389464s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.389478s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.389492s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.389500s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.389513s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "text", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.389560s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.389569s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.389585s   0ms DEBUG Indirect paths found: 0
    ├─   0.389594s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.389609s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_inline_fragment{type_condition="Chat"}
  ├─   0.389637s   0ms DEBUG Processing inline fragment '{id text}' on type 'Chat' through 2 possible paths
  ├─   0.389645s   0ms DEBUG Trying to advance to: ... on Chat, through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=ConcreteType("Chat"), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.389674s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(🔮)- Chat/a
      ├─   0.389682s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(22)" }])
    ┌─┘
    ├─   0.389698s   0ms DEBUG Direct paths found: 1
    ├─   0.389724s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=ConcreteType("Chat"), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.389764s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(🔮)- Chat/b
      ├─   0.389772s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23)" }])
    ┌─┘
    ├─   0.389786s   0ms DEBUG Direct paths found: 1
    ├─   0.389793s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.389820s   0ms DEBUG Trying to advance to: id through 2 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
          ├─   0.389849s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.389861s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
          ├─   0.389882s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", edge="id"}
            ├─   0.389905s   0ms DEBUG checking requirements {id} for edge 'Chat/a -(🔑🧩{id})- Chat/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
                  ├─   0.389954s   0ms INFO return=Ok([])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
                  ├─   0.389984s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
                  ├─   0.390009s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.390023s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
                  ├─   0.390030s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.390039s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.390046s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.390080s   0ms INFO return=Ok(None)
              ┌─┘
              ├─   0.390098s   0ms INFO return=Ok(None)
            ┌─┘
            ├─   0.390112s   0ms INFO return=Ok(None)
          ┌─┘
          ├─   0.390127s   0ms DEBUG Requirements not satisfied, continue look up...
          ├─   0.390136s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
          ├─   0.390142s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.390148s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.390154s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.390166s   0ms DEBUG Indirect paths found: 0
        ├─   0.390177s   0ms WARN failed to advance: root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a
      ┌─┘
      └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
          ├─   0.390220s   0ms DEBUG checking edge Chat/b -(id)- ID/b
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
            ├─   0.390238s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.390253s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b with edge Chat/b -(id)- ID/b
          ├─   0.390263s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }])
        ┌─┘
        ├─   0.390278s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
          ├─   0.390299s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
          ├─   0.390306s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.390312s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
            ├─   0.390329s   0ms DEBUG checking requirements {id} for edge 'Chat/b -(🔑🧩{id})- Chat/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
                  ├─   0.390369s   0ms DEBUG checking edge Chat/b -(id)- ID/b
                  └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
                    ├─   0.390392s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.390450s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b with edge Chat/b -(id)- ID/b
                  ├─   0.390465s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
                  ├─   0.390520s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
                  ├─   0.390531s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.390538s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
                  ├─   0.390545s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.390554s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.390561s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.390588s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.390616s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.390633s   0ms DEBUG Paths for id
            ├─   0.390646s   0ms DEBUG   Path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b -(id)- ID/b is valid
            ├─   0.390677s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.390702s   0ms DEBUG path Chat/b -(id)- ID/b is valid
            ├─   0.390709s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.390732s   0ms DEBUG Advancing path to Chat/b -(🔑🧩{id})- Chat/a
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Chat/b"}
            └─┐create_root_for_path_sequences{root_node="Chat/b", segments_count=1}
              ├─   0.390786s   0ms DEBUG Building root query tree node: Chat/b
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.390805s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.390829s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b -(🔑🧩{id})- Chat/a", current_cost=3003}
            ├─   0.390884s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.390900s   0ms DEBUG No direct paths found
          ├─   0.390910s   0ms DEBUG going deeper
          ├─   0.390919s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
          ├─   0.390925s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.390931s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
          ├─   0.390937s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
          ├─   0.390947s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.390952s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.390965s   0ms DEBUG Indirect paths found: 0
        ├─   0.390974s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b
      ┌─┘
    ┌─┘
    └─┐process_field{field_name="text", leaf=true}
      ├─   0.391004s   0ms DEBUG Trying to advance to: text through 2 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "text", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
          ├─   0.391031s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.391044s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "text", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
          ├─   0.391062s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", edge="id"}
            ├─   0.391080s   0ms DEBUG checking requirements {id} for edge 'Chat/a -(🔑🧩{id})- Chat/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
                  ├─   0.391115s   0ms INFO return=Ok([])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
                  ├─   0.391143s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
                  ├─   0.391150s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.391158s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
                  ├─   0.391164s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.391172s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.391178s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.391194s   0ms INFO return=Ok(None)
              ┌─┘
              ├─   0.391207s   0ms INFO return=Ok(None)
            ┌─┘
            ├─   0.391220s   0ms INFO return=Ok(None)
          ┌─┘
          ├─   0.391232s   0ms DEBUG Requirements not satisfied, continue look up...
          ├─   0.391239s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
          ├─   0.391244s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.391250s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.391255s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.391267s   0ms DEBUG Indirect paths found: 0
        ├─   0.391275s   0ms WARN failed to advance: root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a
      ┌─┘
      └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "text", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
          ├─   0.391309s   0ms DEBUG checking edge Chat/b -(text)- String/b
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="text"}
            ├─   0.391327s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.391342s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b with edge Chat/b -(text)- String/b
          ├─   0.391351s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(6)" }])
        ┌─┘
        ├─   0.391366s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "text", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
          ├─   0.391386s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
          ├─   0.391392s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.391397s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
            ├─   0.391415s   0ms DEBUG checking requirements {id} for edge 'Chat/b -(🔑🧩{id})- Chat/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
                  ├─   0.391448s   0ms DEBUG checking edge Chat/b -(id)- ID/b
                  └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
                    ├─   0.391470s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.391487s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b with edge Chat/b -(id)- ID/b
                  ├─   0.391496s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
                  ├─   0.391526s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
                  ├─   0.391533s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.391540s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
                  ├─   0.391547s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.391555s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.391561s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.391577s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.391594s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.391608s   0ms DEBUG Paths for id
            ├─   0.391617s   0ms DEBUG   Path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b -(id)- ID/b is valid
            ├─   0.391624s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.391635s   0ms DEBUG path Chat/b -(id)- ID/b is valid
            ├─   0.391641s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.391655s   0ms DEBUG Advancing path to Chat/b -(🔑🧩{id})- Chat/a
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Chat/b"}
            └─┐create_root_for_path_sequences{root_node="Chat/b", segments_count=1}
              ├─   0.391680s   0ms DEBUG Building root query tree node: Chat/b
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.391698s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.391719s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "text", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b -(🔑🧩{id})- Chat/a", current_cost=3003}
            ├─   0.391764s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.391777s   0ms DEBUG No direct paths found
          ├─   0.391785s   0ms DEBUG going deeper
          ├─   0.391793s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
          ├─   0.391800s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.391806s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
          ├─   0.391811s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
          ├─   0.391819s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.391825s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.391837s   0ms DEBUG Indirect paths found: 0
        ├─   0.391845s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
└─┐process_field{field_name="node", leaf=false}
  ├─   0.391889s   0ms DEBUG Trying to advance to: account: node(id: "a1"){...on Account{id username}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "username", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.391918s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.391933s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.391947s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.391955s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.391969s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "username", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.391995s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.392002s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.392013s   0ms DEBUG Indirect paths found: 0
    ├─   0.392020s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "username", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.392050s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.392065s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.392078s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.392086s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.392099s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "username", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.392118s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.392124s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.392135s   0ms DEBUG Indirect paths found: 0
    ├─   0.392142s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.392154s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_inline_fragment{type_condition="Account"}
  ├─   0.392172s   0ms DEBUG Processing inline fragment '{id username}' on type 'Account' through 2 possible paths
  ├─   0.392178s   0ms DEBUG Trying to advance to: ... on Account, through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=ConcreteType("Account"), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.392228s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(🔮)- Account/a
      ├─   0.392248s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24)" }])
    ┌─┘
    ├─   0.392270s   0ms DEBUG Direct paths found: 1
    ├─   0.392287s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=ConcreteType("Account"), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.392320s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(🔮)- Account/b
      ├─   0.392327s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(25)" }])
    ┌─┘
    ├─   0.392340s   0ms DEBUG Direct paths found: 1
    ├─   0.392346s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.392371s   0ms DEBUG Trying to advance to: id through 2 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
          ├─   0.392399s   0ms DEBUG checking edge Account/a -(id)- ID/a
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
            ├─   0.392417s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.392433s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a with edge Account/a -(id)- ID/a
          ├─   0.392442s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }])
        ┌─┘
        ├─   0.392456s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
          ├─   0.392477s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
            ├─   0.392519s   0ms DEBUG checking requirements {id} for edge 'Account/a -(🔑🧩{id})- Account/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
                  ├─   0.392557s   0ms DEBUG checking edge Account/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
                    ├─   0.392576s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.392596s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a with edge Account/a -(id)- ID/a
                  ├─   0.392607s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
                  ├─   0.392640s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
                  ├─   0.392649s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.392656s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
                  ├─   0.392663s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.392671s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.392678s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.392694s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }], [])))
              ┌─┘
              ├─   0.392729s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }], [])))
            ┌─┘
            ├─   0.392748s   0ms DEBUG Paths for id
            ├─   0.392759s   0ms DEBUG   Path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a -(id)- ID/a is valid
            ├─   0.392765s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.392777s   0ms DEBUG path Account/a -(id)- ID/a is valid
            ├─   0.392783s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(19)" }]))
          ┌─┘
          ├─   0.392799s   0ms DEBUG Advancing path to Account/a -(🔑🧩{id})- Account/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(19)" }, root_node="Account/a"}
            └─┐create_root_for_path_sequences{root_node="Account/a", segments_count=1}
              ├─   0.392834s   0ms DEBUG Building root query tree node: Account/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.392848s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.392872s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a -(🔑🧩{id})- Account/b", current_cost=3003}
            ├─   0.392919s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.392945s   0ms DEBUG No direct paths found
          ├─   0.392958s   0ms DEBUG going deeper
          ├─   0.392968s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
          ├─   0.392974s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.392981s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
          ├─   0.392987s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
          ├─   0.392993s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
          ├─   0.392999s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.393007s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.393013s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.393027s   0ms DEBUG Indirect paths found: 0
        ├─   0.393038s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a
      ┌─┘
      └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
          ├─   0.393074s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.393086s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
          ├─   0.393121s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
          ├─   0.393130s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.393136s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", edge="id"}
            ├─   0.393160s   0ms DEBUG checking requirements {id} for edge 'Account/b -(🔑🧩{id})- Account/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
                  ├─   0.393194s   0ms INFO return=Ok([])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
                  ├─   0.393232s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
                  ├─   0.393239s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.393246s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
                  ├─   0.393253s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.393261s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.393268s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.393284s   0ms INFO return=Ok(None)
              ┌─┘
              ├─   0.393297s   0ms INFO return=Ok(None)
            ┌─┘
            ├─   0.393311s   0ms INFO return=Ok(None)
          ┌─┘
          ├─   0.393323s   0ms DEBUG Requirements not satisfied, continue look up...
          ├─   0.393329s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.393334s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.393345s   0ms DEBUG Indirect paths found: 0
        ├─   0.393354s   0ms WARN failed to advance: root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b
      ┌─┘
    ┌─┘
    └─┐process_field{field_name="username", leaf=true}
      ├─   0.393382s   0ms DEBUG Trying to advance to: username through 2 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "username", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
          ├─   0.393409s   0ms DEBUG checking edge Account/a -(username)- String/a
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="username"}
            ├─   0.393426s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.393442s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a with edge Account/a -(username)- String/a
          ├─   0.393451s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(18)" }])
        ┌─┘
        ├─   0.393466s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "username", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
          ├─   0.393485s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
            ├─   0.393504s   0ms DEBUG checking requirements {id} for edge 'Account/a -(🔑🧩{id})- Account/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
                  ├─   0.393538s   0ms DEBUG checking edge Account/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
                    ├─   0.393556s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.393574s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a with edge Account/a -(id)- ID/a
                  ├─   0.393583s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
                  ├─   0.393613s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
                  ├─   0.393621s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.393628s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
                  ├─   0.393635s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.393642s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.393649s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.393666s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }], [])))
              ┌─┘
              ├─   0.393682s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }], [])))
            ┌─┘
            ├─   0.393697s   0ms DEBUG Paths for id
            ├─   0.393706s   0ms DEBUG   Path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a -(id)- ID/a is valid
            ├─   0.393712s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.393723s   0ms DEBUG path Account/a -(id)- ID/a is valid
            ├─   0.393729s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(19)" }]))
          ┌─┘
          ├─   0.393744s   0ms DEBUG Advancing path to Account/a -(🔑🧩{id})- Account/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(19)" }, root_node="Account/a"}
            └─┐create_root_for_path_sequences{root_node="Account/a", segments_count=1}
              ├─   0.393769s   0ms DEBUG Building root query tree node: Account/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.393783s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.393804s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "username", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a -(🔑🧩{id})- Account/b", current_cost=3003}
            ├─   0.393849s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.393862s   0ms DEBUG No direct paths found
          ├─   0.393870s   0ms DEBUG going deeper
          ├─   0.393878s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
          ├─   0.393883s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.393890s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
          ├─   0.393896s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
          ├─   0.393902s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
          ├─   0.393907s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.393915s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.393921s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.393934s   0ms DEBUG Indirect paths found: 0
        ├─   0.393943s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a
      ┌─┘
      └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "username", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
          ├─   0.393975s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.393988s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "username", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
          ├─   0.394006s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
          ├─   0.394012s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.394018s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", edge="id"}
            ├─   0.394035s   0ms DEBUG checking requirements {id} for edge 'Account/b -(🔑🧩{id})- Account/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
                  ├─   0.394068s   0ms INFO return=Ok([])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
                  ├─   0.394095s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
                  ├─   0.394102s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.394109s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
                  ├─   0.394116s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.394124s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.394130s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.394146s   0ms INFO return=Ok(None)
              ┌─┘
              ├─   0.394159s   0ms INFO return=Ok(None)
            ┌─┘
            ├─   0.394172s   0ms INFO return=Ok(None)
          ┌─┘
          ├─   0.394184s   0ms DEBUG Requirements not satisfied, continue look up...
          ├─   0.394190s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.394195s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.394207s   0ms DEBUG Indirect paths found: 0
        ├─   0.394215s   0ms WARN failed to advance: root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.394271s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.394284s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.394296s   0ms DEBUG Processing edge: Query/b -(node)- Node/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.394308s   0ms DEBUG Processing edge: Node/b -(🔮)- Chat/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.394320s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.394340s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.394352s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.394363s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.394374s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(6)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.394407s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.394419s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.394430s   0ms DEBUG Processing edge: Query/b -(node)- Node/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.394442s   0ms DEBUG Processing edge: Node/b -(🔮)- Chat/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.394454s   0ms DEBUG Processing edge: Chat/b -(text)- String/b
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.394473s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.394484s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.394495s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.394505s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.394537s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.394548s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.394560s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.394572s   0ms DEBUG Processing edge: Node/a -(🔮)- Account/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.394584s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.394603s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.394614s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.394627s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.394637s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(18)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.394669s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.394680s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.394691s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.394710s   0ms DEBUG Processing edge: Node/a -(🔮)- Account/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.394724s   0ms DEBUG Processing edge: Account/a -(username)- String/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.394743s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.394754s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.394765s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.394775s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=4}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=2}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="b", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="node", alias="chat", arguments="id: \"c1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.394901s   0ms DEBUG adding output field 'node' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_abstract_edge{parent_fetch_step_index=1, type_name="Chat", response_path="chat", fetch_path="chat"}
              ├─   0.394938s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '1' to fetch step [Chat]
              └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=1}
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Chat", field="id", leaf=true, list=false, response_path="chat", fetch_path="chat"}
                  ├─   0.394965s   0ms DEBUG adding output field 'id' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                  ┌─┘
                ┌─┘
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Chat", field="text", leaf=true, list=false, response_path="chat", fetch_path="chat"}
                  ├─   0.395010s   0ms DEBUG adding output field 'text' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=2}
      ┌─┘
      └─┐connect{parent=0, child=2}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
        └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Query", field="node", alias="account", arguments="id: \"a1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.395151s   0ms DEBUG adding output field 'node' to fetch step [2]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
            └─┐process_abstract_edge{parent_fetch_step_index=2, type_name="Account", response_path="account", fetch_path="account"}
              ├─   0.395185s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '2' to fetch step [Account]
              └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=2}
                └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Account", field="id", leaf=true, list=false, response_path="account", fetch_path="account"}
                  ├─   0.395212s   0ms DEBUG adding output field 'id' to fetch step [2]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=2}
                  ┌─┘
                ┌─┘
                └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Account", field="username", leaf=true, list=false, response_path="account", fetch_path="account"}
                  ├─   0.395254s   0ms DEBUG adding output field 'username' to fetch step [2]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=2}
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.395332s   0ms DEBUG Done
├─   0.395340s   0ms DEBUG found roots
├─   0.395346s   0ms DEBUG print graph
├─   0.395351s   0ms DEBUG Nodes:
│ [1] Query/b {} → {chat: node(id: "c1"){__typename ...on Chat{id text}}} at $.
│ [2] Query/a {} → {account: node(id: "a1"){__typename ...on Account{id username}}} at $.
│ 
│ Tree:
│ [2]
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐ParallelNode::execute{data=Null, representations=[]}
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="a"}
      └─┐execute{subgraph_name="a"}
        ├─   0.395853s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="b"}
      └─┐execute{subgraph_name="b"}
        ├─   0.396044s   0ms DEBUG starting new connection: http://localhost:4200/
        ├─   0.396269s   0ms DEBUG connecting to 127.0.0.1:4200
        ├─   0.396697s   0ms DEBUG connected to 127.0.0.1:4200
        ├─   0.399758s   4ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
        ├─   0.404168s   8ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
┘
┐entity_satisfies_type_condition{possible_types={"Node": ["Account", "Chat"]}, type_name="Account", type_condition="Account"}
┘
┐entity_satisfies_type_condition{possible_types={"Node": ["Account", "Chat"]}, type_name="Chat", type_condition="Chat"}
┘
   0.404578s DEBUG execution result: ExecutionResult { data: Some(Object {"account": Object {"id": String("a1"), "username": String("a1-username")}, "chat": Object {"id": String("c1"), "text": String("c1-text")}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Parallel"), "nodes": Array [Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{account: node(id: \"a1\"){__typename ...on Account{id username}}}")}, Object {"kind": String("Fetch"), "serviceName": String("b"), "operationKind": String("query"), "operation": String("{chat: node(id: \"c1\"){__typename ...on Chat{id text}}}")}]}}}) }
   0.407704s DEBUG original document: query {
  account: node(id: "a1") {
    ... on Chat {
      id
    }
  }
  chat: node(id: "c1") {
    ... on Account {
      id
    }
  }
}

   0.407856s DEBUG normalized document: query{account: node(id: "a1"){...on Chat{id}} chat: node(id: "c1"){...on Account{id}}}

   0.407890s DEBUG executable operation: query{account: node(id: "a1"){...on Chat{id}} chat: node(id: "c1"){...on Account{id}}}
┐walk_operation{}
├─   0.408291s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="node", leaf=false}
  ├─   0.408338s   0ms DEBUG Trying to advance to: chat: node(id: "c1"){...on Account{id}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.408408s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.408432s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.408456s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.408472s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.408489s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.408517s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.408523s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.408534s   0ms DEBUG Indirect paths found: 0
    ├─   0.408542s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.408580s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.408595s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.408609s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.408617s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.408630s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.408652s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.408657s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.408668s   0ms DEBUG Indirect paths found: 0
    ├─   0.408675s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.408689s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_inline_fragment{type_condition="Account"}
  ├─   0.408710s   0ms DEBUG Processing inline fragment '{id}' on type 'Account' through 2 possible paths
  ├─   0.408717s   0ms DEBUG Trying to advance to: ... on Account, through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=ConcreteType("Account"), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.408766s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(🔮)- Account/a
      ├─   0.408777s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24)" }])
    ┌─┘
    ├─   0.408795s   0ms DEBUG Direct paths found: 1
    ├─   0.408802s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=ConcreteType("Account"), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.408832s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(🔮)- Account/b
      ├─   0.408838s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(25)" }])
    ┌─┘
    ├─   0.408852s   0ms DEBUG Direct paths found: 1
    ├─   0.408858s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.408882s   0ms DEBUG Trying to advance to: id through 2 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
          ├─   0.408912s   0ms DEBUG checking edge Account/a -(id)- ID/a
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
            ├─   0.408931s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.408947s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a with edge Account/a -(id)- ID/a
          ├─   0.408956s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }])
        ┌─┘
        ├─   0.408971s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
          ├─   0.408995s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
            ├─   0.409016s   0ms DEBUG checking requirements {id} for edge 'Account/a -(🔑🧩{id})- Account/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
                  ├─   0.409058s   0ms DEBUG checking edge Account/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
                    ├─   0.409078s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.409119s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a with edge Account/a -(id)- ID/a
                  ├─   0.409132s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
                  ├─   0.409171s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
                  ├─   0.409180s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.409188s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
                  ├─   0.409196s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.409205s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.409212s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.409230s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }], [])))
              ┌─┘
              ├─   0.409247s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }], [])))
            ┌─┘
            ├─   0.409262s   0ms DEBUG Paths for id
            ├─   0.409272s   0ms DEBUG   Path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a -(id)- ID/a is valid
            ├─   0.409280s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.409298s   0ms DEBUG path Account/a -(id)- ID/a is valid
            ├─   0.409305s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(19)" }]))
          ┌─┘
          ├─   0.409320s   0ms DEBUG Advancing path to Account/a -(🔑🧩{id})- Account/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(19)" }, root_node="Account/a"}
            └─┐create_root_for_path_sequences{root_node="Account/a", segments_count=1}
              ├─   0.409348s   0ms DEBUG Building root query tree node: Account/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.409381s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.409412s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a -(🔑🧩{id})- Account/b", current_cost=3003}
            ├─   0.409466s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.409480s   0ms DEBUG No direct paths found
          ├─   0.409491s   0ms DEBUG going deeper
          ├─   0.409514s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
          ├─   0.409523s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.409530s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
          ├─   0.409536s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
          ├─   0.409543s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
          ├─   0.409548s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.409558s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.409563s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.409580s   0ms DEBUG Indirect paths found: 0
        ├─   0.409591s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a
      ┌─┘
      └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
          ├─   0.409629s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.409641s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
          ├─   0.409659s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
          ├─   0.409665s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.409671s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", edge="id"}
            ├─   0.409690s   0ms DEBUG checking requirements {id} for edge 'Account/b -(🔑🧩{id})- Account/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
                  ├─   0.409740s   0ms INFO return=Ok([])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
                  ├─   0.409784s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
                  ├─   0.409791s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.409798s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
                  ├─   0.409805s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.409814s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.409821s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.409838s   0ms INFO return=Ok(None)
              ┌─┘
              ├─   0.409851s   0ms INFO return=Ok(None)
            ┌─┘
            ├─   0.409865s   0ms INFO return=Ok(None)
          ┌─┘
          ├─   0.409890s   0ms DEBUG Requirements not satisfied, continue look up...
          ├─   0.409898s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.409904s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.409917s   0ms DEBUG Indirect paths found: 0
        ├─   0.409927s   0ms WARN failed to advance: root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
└─┐process_field{field_name="node", leaf=false}
  ├─   0.409974s   0ms DEBUG Trying to advance to: account: node(id: "a1"){...on Chat{id}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.410020s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.410044s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.410061s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.410070s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.410090s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.410136s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.410145s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.410160s   0ms DEBUG Indirect paths found: 0
    ├─   0.410169s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.410202s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.410221s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.410235s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.410244s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.410265s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.410285s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.410291s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.410302s   0ms DEBUG Indirect paths found: 0
    ├─   0.410308s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.410320s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_inline_fragment{type_condition="Chat"}
  ├─   0.410340s   0ms DEBUG Processing inline fragment '{id}' on type 'Chat' through 2 possible paths
  ├─   0.410346s   0ms DEBUG Trying to advance to: ... on Chat, through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=ConcreteType("Chat"), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.410370s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(🔮)- Chat/a
      ├─   0.410377s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(22)" }])
    ┌─┘
    ├─   0.410391s   0ms DEBUG Direct paths found: 1
    ├─   0.410398s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=ConcreteType("Chat"), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.410427s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(🔮)- Chat/b
      ├─   0.410433s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23)" }])
    ┌─┘
    ├─   0.410446s   0ms DEBUG Direct paths found: 1
    ├─   0.410452s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.410475s   0ms DEBUG Trying to advance to: id through 2 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
          ├─   0.410501s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.410513s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
          ├─   0.410532s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", edge="id"}
            ├─   0.410550s   0ms DEBUG checking requirements {id} for edge 'Chat/a -(🔑🧩{id})- Chat/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
                  ├─   0.410586s   0ms INFO return=Ok([])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
                  ├─   0.410614s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
                  ├─   0.410622s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.410630s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
                  ├─   0.410637s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.410645s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.410651s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.410667s   0ms INFO return=Ok(None)
              ┌─┘
              ├─   0.410680s   0ms INFO return=Ok(None)
            ┌─┘
            ├─   0.410702s   0ms INFO return=Ok(None)
          ┌─┘
          ├─   0.410715s   0ms DEBUG Requirements not satisfied, continue look up...
          ├─   0.410722s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
          ├─   0.410727s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.410733s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.410738s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.410750s   0ms DEBUG Indirect paths found: 0
        ├─   0.410759s   0ms WARN failed to advance: root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a
      ┌─┘
      └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
          ├─   0.410793s   0ms DEBUG checking edge Chat/b -(id)- ID/b
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
            ├─   0.410811s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.410826s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b with edge Chat/b -(id)- ID/b
          ├─   0.410835s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }])
        ┌─┘
        ├─   0.410852s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
          ├─   0.410872s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
          ├─   0.410878s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.410884s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
            ├─   0.410901s   0ms DEBUG checking requirements {id} for edge 'Chat/b -(🔑🧩{id})- Chat/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
                  ├─   0.410934s   0ms DEBUG checking edge Chat/b -(id)- ID/b
                  └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
                    ├─   0.410952s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.410970s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b with edge Chat/b -(id)- ID/b
                  ├─   0.410979s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
                  ├─   0.411010s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
                  ├─   0.411018s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.411024s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
                  ├─   0.411031s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.411039s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.411046s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.411061s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.411077s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.411092s   0ms DEBUG Paths for id
            ├─   0.411101s   0ms DEBUG   Path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b -(id)- ID/b is valid
            ├─   0.411107s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.411120s   0ms DEBUG path Chat/b -(id)- ID/b is valid
            ├─   0.411126s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.411140s   0ms DEBUG Advancing path to Chat/b -(🔑🧩{id})- Chat/a
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Chat/b"}
            └─┐create_root_for_path_sequences{root_node="Chat/b", segments_count=1}
              ├─   0.411166s   0ms DEBUG Building root query tree node: Chat/b
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.411181s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.411202s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b -(🔑🧩{id})- Chat/a", current_cost=3003}
            ├─   0.411247s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.411273s   0ms DEBUG No direct paths found
          ├─   0.411293s   0ms DEBUG going deeper
          ├─   0.411302s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
          ├─   0.411309s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.411315s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
          ├─   0.411320s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
          ├─   0.411330s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.411335s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.411351s   0ms DEBUG Indirect paths found: 0
        ├─   0.411361s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.411420s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.411433s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.411444s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.411457s   0ms DEBUG Processing edge: Node/a -(🔮)- Account/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.411469s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.411488s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.411500s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.411511s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.411521s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.411554s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.411565s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.411576s   0ms DEBUG Processing edge: Query/b -(node)- Node/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.411605s   0ms DEBUG Processing edge: Node/b -(🔮)- Chat/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.411624s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.411645s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.411656s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.411667s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.411677s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=2}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=2}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="node", alias="chat", arguments="id: \"c1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.411792s   0ms DEBUG adding output field 'node' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_abstract_edge{parent_fetch_step_index=1, type_name="Account", response_path="chat", fetch_path="chat"}
              ├─   0.411830s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '1' to fetch step [Account]
              └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Account", field="id", leaf=true, list=false, response_path="chat", fetch_path="chat"}
                  ├─   0.411857s   0ms DEBUG adding output field 'id' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
    └─┐process_subgraph_entrypoint_edge{subgraph="b", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=2}
      ┌─┘
      └─┐connect{parent=0, child=2}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
        └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Query", field="node", alias="account", arguments="id: \"a1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.411975s   0ms DEBUG adding output field 'node' to fetch step [2]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
            └─┐process_abstract_edge{parent_fetch_step_index=2, type_name="Chat", response_path="account", fetch_path="account"}
              ├─   0.411999s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '2' to fetch step [Chat]
              └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
                └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Chat", field="id", leaf=true, list=false, response_path="account", fetch_path="account"}
                  ├─   0.412025s   0ms DEBUG adding output field 'id' to fetch step [2]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=2}
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.412103s   0ms DEBUG Done
├─   0.412111s   0ms DEBUG found roots
├─   0.412116s   0ms DEBUG print graph
├─   0.412120s   0ms DEBUG Nodes:
│ [1] Query/a {} → {chat: node(id: "c1"){__typename ...on Account{id}}} at $.
│ [2] Query/b {} → {account: node(id: "a1"){__typename ...on Chat{id}}} at $.
│ 
│ Tree:
│ [2]
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐ParallelNode::execute{data=Null, representations=[]}
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="b"}
      └─┐execute{subgraph_name="b"}
        ├─   0.412506s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="a"}
      └─┐execute{subgraph_name="a"}
        ├─   0.412707s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
        ├─   0.414864s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
        ├─   0.415937s   3ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
┘
┐entity_satisfies_type_condition{possible_types={"Node": ["Account", "Chat"]}, type_name="Account", type_condition="Chat"}
┘
┐entity_satisfies_type_condition{possible_types={"Node": ["Account", "Chat"]}, type_name="Chat", type_condition="Account"}
┘
   0.416195s DEBUG execution result: ExecutionResult { data: Some(Object {"account": Object {}, "chat": Object {}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Parallel"), "nodes": Array [Object {"kind": String("Fetch"), "serviceName": String("b"), "operationKind": String("query"), "operation": String("{account: node(id: \"a1\"){__typename ...on Chat{id}}}")}, Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{chat: node(id: \"c1\"){__typename ...on Account{id}}}")}]}}}) }
   0.419052s DEBUG original document: query {
  account: node(id: "a1") {
    __typename
    ... on Chat {
      id
    }
  }
  chat: node(id: "c1") {
    __typename
    ... on Account {
      id
    }
  }
}

   0.419214s DEBUG normalized document: query{account: node(id: "a1"){__typename ...on Chat{id}} chat: node(id: "c1"){__typename ...on Account{id}}}

   0.419250s DEBUG executable operation: query{account: node(id: "a1"){__typename ...on Chat{id}} chat: node(id: "c1"){__typename ...on Account{id}}}
┐walk_operation{}
├─   0.419688s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="node", leaf=false}
  ├─   0.419733s   0ms DEBUG Trying to advance to: chat: node(id: "c1"){__typename ...on Account{id}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.419785s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.419804s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.419825s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.419836s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.419852s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.419879s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.419885s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.419897s   0ms DEBUG Indirect paths found: 0
    ├─   0.419904s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.419935s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.419950s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.419963s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.419971s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.419984s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.420005s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.420010s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.420021s   0ms DEBUG Indirect paths found: 0
    ├─   0.420028s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.420041s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_inline_fragment{type_condition="Account"}
  ├─   0.420061s   0ms DEBUG Processing inline fragment '{id}' on type 'Account' through 2 possible paths
  ├─   0.420068s   0ms DEBUG Trying to advance to: ... on Account, through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=ConcreteType("Account"), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.420093s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(🔮)- Account/a
      ├─   0.420101s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24)" }])
    ┌─┘
    ├─   0.420115s   0ms DEBUG Direct paths found: 1
    ├─   0.420121s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=ConcreteType("Account"), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.420152s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(🔮)- Account/b
      ├─   0.420158s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(25)" }])
    ┌─┘
    ├─   0.420171s   0ms DEBUG Direct paths found: 1
    ├─   0.420177s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.420200s   0ms DEBUG Trying to advance to: id through 2 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
          ├─   0.420229s   0ms DEBUG checking edge Account/a -(id)- ID/a
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
            ├─   0.420247s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.420263s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a with edge Account/a -(id)- ID/a
          ├─   0.420271s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }])
        ┌─┘
        ├─   0.420285s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
          ├─   0.420309s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
            ├─   0.420359s   0ms DEBUG checking requirements {id} for edge 'Account/a -(🔑🧩{id})- Account/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
                  ├─   0.420406s   0ms DEBUG checking edge Account/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
                    ├─   0.420426s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.420446s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a with edge Account/a -(id)- ID/a
                  ├─   0.420470s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
                  ├─   0.420517s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
                  ├─   0.420538s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.420551s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
                  ├─   0.420558s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.420567s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.420573s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.420594s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }], [])))
              ┌─┘
              ├─   0.420629s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }], [])))
            ┌─┘
            ├─   0.420657s   0ms DEBUG Paths for id
            ├─   0.420672s   0ms DEBUG   Path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a -(id)- ID/a is valid
            ├─   0.420679s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.420695s   0ms DEBUG path Account/a -(id)- ID/a is valid
            ├─   0.420712s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(19)" }]))
          ┌─┘
          ├─   0.420737s   0ms DEBUG Advancing path to Account/a -(🔑🧩{id})- Account/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(19)" }, root_node="Account/a"}
            └─┐create_root_for_path_sequences{root_node="Account/a", segments_count=1}
              ├─   0.420774s   0ms DEBUG Building root query tree node: Account/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.420789s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.420811s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a -(🔑🧩{id})- Account/b", current_cost=3003}
            ├─   0.420873s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.420893s   0ms DEBUG No direct paths found
          ├─   0.420904s   0ms DEBUG going deeper
          ├─   0.420913s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
          ├─   0.420920s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.420927s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
          ├─   0.420933s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
          ├─   0.420939s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
          ├─   0.420945s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.420954s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.420961s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.420974s   0ms DEBUG Indirect paths found: 0
        ├─   0.420985s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a
      ┌─┘
      └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
          ├─   0.421022s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.421034s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
          ├─   0.421053s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
          ├─   0.421059s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.421064s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", edge="id"}
            ├─   0.421082s   0ms DEBUG checking requirements {id} for edge 'Account/b -(🔑🧩{id})- Account/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
                  ├─   0.421118s   0ms INFO return=Ok([])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
                  ├─   0.421147s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
                  ├─   0.421154s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.421161s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
                  ├─   0.421168s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.421176s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.421182s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.421200s   0ms INFO return=Ok(None)
              ┌─┘
              ├─   0.421213s   0ms INFO return=Ok(None)
            ┌─┘
            ├─   0.421226s   0ms INFO return=Ok(None)
          ┌─┘
          ├─   0.421238s   0ms DEBUG Requirements not satisfied, continue look up...
          ├─   0.421244s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.421250s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.421261s   0ms DEBUG Indirect paths found: 0
        ├─   0.421269s   0ms WARN failed to advance: root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
└─┐process_field{field_name="__typename", leaf=true}
  ├─   0.421311s   0ms DEBUG Trying to advance to: __typename through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.421337s   0ms DEBUG checking edge Node/a -(__typename)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a", edge="__typename"}
        ├─   0.421353s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.421367s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(__typename)- String/a
      ├─   0.421374s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(13)" }])
    ┌─┘
    ├─   0.421388s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.421406s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.421411s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.421422s   0ms DEBUG Indirect paths found: 0
    ├─   0.421429s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.421457s   0ms DEBUG checking edge Node/b -(__typename)- String/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b", edge="__typename"}
        ├─   0.421472s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.421485s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(__typename)- String/b
      ├─   0.421492s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(15)" }])
    ┌─┘
    ├─   0.421505s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.421523s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.421528s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.421539s   0ms DEBUG Indirect paths found: 0
    ├─   0.421545s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
┌─┘
└─┐process_field{field_name="node", leaf=false}
  ├─   0.421570s   0ms DEBUG Trying to advance to: account: node(id: "a1"){__typename ...on Chat{id}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.421598s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.421613s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.421627s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.421635s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.421648s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.421666s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.421672s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.421683s   0ms DEBUG Indirect paths found: 0
    ├─   0.421689s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.421717s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.421748s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.421771s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.421780s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.421795s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.421818s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.421824s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.421835s   0ms DEBUG Indirect paths found: 0
    ├─   0.421842s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.421853s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_inline_fragment{type_condition="Chat"}
  ├─   0.421872s   0ms DEBUG Processing inline fragment '{id}' on type 'Chat' through 2 possible paths
  ├─   0.421878s   0ms DEBUG Trying to advance to: ... on Chat, through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=ConcreteType("Chat"), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.421904s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(🔮)- Chat/a
      ├─   0.421911s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(22)" }])
    ┌─┘
    ├─   0.421943s   0ms DEBUG Direct paths found: 1
    ├─   0.421954s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=ConcreteType("Chat"), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.421987s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(🔮)- Chat/b
      ├─   0.421995s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23)" }])
    ┌─┘
    ├─   0.422008s   0ms DEBUG Direct paths found: 1
    ├─   0.422015s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.422039s   0ms DEBUG Trying to advance to: id through 2 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
          ├─   0.422065s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.422077s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
          ├─   0.422096s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", edge="id"}
            ├─   0.422137s   0ms DEBUG checking requirements {id} for edge 'Chat/a -(🔑🧩{id})- Chat/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
                  ├─   0.422180s   0ms INFO return=Ok([])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
                  ├─   0.422212s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
                  ├─   0.422220s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.422228s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
                  ├─   0.422234s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.422243s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.422249s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.422266s   0ms INFO return=Ok(None)
              ┌─┘
              ├─   0.422279s   0ms INFO return=Ok(None)
            ┌─┘
            ├─   0.422292s   0ms INFO return=Ok(None)
          ┌─┘
          ├─   0.422304s   0ms DEBUG Requirements not satisfied, continue look up...
          ├─   0.422311s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
          ├─   0.422316s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.422322s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.422330s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.422341s   0ms DEBUG Indirect paths found: 0
        ├─   0.422350s   0ms WARN failed to advance: root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a
      ┌─┘
      └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
          ├─   0.422386s   0ms DEBUG checking edge Chat/b -(id)- ID/b
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
            ├─   0.422403s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.422418s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b with edge Chat/b -(id)- ID/b
          ├─   0.422427s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }])
        ┌─┘
        ├─   0.422442s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
          ├─   0.422463s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
          ├─   0.422469s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.422475s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
            ├─   0.422492s   0ms DEBUG checking requirements {id} for edge 'Chat/b -(🔑🧩{id})- Chat/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
                  ├─   0.422525s   0ms DEBUG checking edge Chat/b -(id)- ID/b
                  └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
                    ├─   0.422543s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.422561s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b with edge Chat/b -(id)- ID/b
                  ├─   0.422570s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
                  ├─   0.422600s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
                  ├─   0.422608s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.422614s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
                  ├─   0.422621s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.422641s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.422663s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.422686s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.422705s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.422720s   0ms DEBUG Paths for id
            ├─   0.422730s   0ms DEBUG   Path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b -(id)- ID/b is valid
            ├─   0.422739s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.422751s   0ms DEBUG path Chat/b -(id)- ID/b is valid
            ├─   0.422758s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.422774s   0ms DEBUG Advancing path to Chat/b -(🔑🧩{id})- Chat/a
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Chat/b"}
            └─┐create_root_for_path_sequences{root_node="Chat/b", segments_count=1}
              ├─   0.422802s   0ms DEBUG Building root query tree node: Chat/b
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.422817s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.422839s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b -(🔑🧩{id})- Chat/a", current_cost=3003}
            ├─   0.422886s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.422899s   0ms DEBUG No direct paths found
          ├─   0.422907s   0ms DEBUG going deeper
          ├─   0.422916s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
          ├─   0.422923s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.422929s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
          ├─   0.422934s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
          ├─   0.422943s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.422949s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.422961s   0ms DEBUG Indirect paths found: 0
        ├─   0.422972s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
└─┐process_field{field_name="__typename", leaf=true}
  ├─   0.423011s   0ms DEBUG Trying to advance to: __typename through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.423052s   0ms DEBUG checking edge Node/a -(__typename)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a", edge="__typename"}
        ├─   0.423076s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.423093s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(__typename)- String/a
      ├─   0.423102s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(13)" }])
    ┌─┘
    ├─   0.423115s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.423135s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.423142s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.423153s   0ms DEBUG Indirect paths found: 0
    ├─   0.423160s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.423187s   0ms DEBUG checking edge Node/b -(__typename)- String/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b", edge="__typename"}
        ├─   0.423202s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.423216s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(__typename)- String/b
      ├─   0.423223s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(15)" }])
    ┌─┘
    ├─   0.423235s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.423253s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.423258s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.423269s   0ms DEBUG Indirect paths found: 0
    ├─   0.423275s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.423317s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.423331s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.423342s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.423355s   0ms DEBUG Processing edge: Node/a -(🔮)- Account/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.423367s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.423386s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.423398s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.423408s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.423418s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(13)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.423451s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.423462s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.423473s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.423485s   0ms DEBUG Processing edge: Node/a -(__typename)- String/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.423503s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.423513s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.423524s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.423556s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.423566s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.423578s   0ms DEBUG Processing edge: Query/b -(node)- Node/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.423590s   0ms DEBUG Processing edge: Node/b -(🔮)- Chat/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.423602s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.423620s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.423631s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.423642s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.423652s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(13)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.423683s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.423694s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.423705s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.423717s   0ms DEBUG Processing edge: Node/a -(__typename)- String/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.423735s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.423745s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.423755s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=4}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=2}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="node", alias="chat", arguments="id: \"c1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.423888s   0ms DEBUG adding output field 'node' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=1}
            └─┐process_abstract_edge{parent_fetch_step_index=1, type_name="Account", response_path="chat", fetch_path="chat"}
              ├─   0.423924s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '1' to fetch step [Account]
              └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Account", field="id", leaf=true, list=false, response_path="chat", fetch_path="chat"}
                  ├─   0.423951s   0ms DEBUG adding output field 'id' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Node", field="__typename", leaf=true, list=false, response_path="chat", fetch_path="chat"}
              ├─   0.424006s   0ms DEBUG adding output field '__typename' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="node", alias="account", arguments="id: \"a1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.424057s   0ms DEBUG adding output field 'node' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Node", field="__typename", leaf=true, list=false, response_path="account", fetch_path="account"}
              ├─   0.424081s   0ms DEBUG adding output field '__typename' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
    └─┐process_subgraph_entrypoint_edge{subgraph="b", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=2}
      ┌─┘
      └─┐connect{parent=0, child=2}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
        └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Query", field="node", alias="account", arguments="id: \"a1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.424179s   0ms DEBUG adding output field 'node' to fetch step [2]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
            └─┐process_abstract_edge{parent_fetch_step_index=2, type_name="Chat", response_path="account", fetch_path="account"}
              ├─   0.424203s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '2' to fetch step [Chat]
              └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
                └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Chat", field="id", leaf=true, list=false, response_path="account", fetch_path="account"}
                  ├─   0.424234s   0ms DEBUG adding output field 'id' to fetch step [2]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=2}
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.424310s   0ms DEBUG Done
├─   0.424319s   0ms DEBUG found roots
├─   0.424324s   0ms DEBUG print graph
├─   0.424328s   0ms DEBUG Nodes:
│ [1] Query/a {} → {chat: node(id: "c1"){__typename ...on Account{id}} account: node(id: "a1"){__typename}} at $.
│ [2] Query/b {} → {account: node(id: "a1"){__typename ...on Chat{id}}} at $.
│ 
│ Tree:
│ [2]
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐ParallelNode::execute{data=Null, representations=[]}
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="b"}
      └─┐execute{subgraph_name="b"}
        ├─   0.424712s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="a"}
      └─┐execute{subgraph_name="a"}
        ├─   0.424907s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
        ├─   0.426743s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
        ├─   0.427671s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
┘
┐entity_satisfies_type_condition{possible_types={"Node": ["Account", "Chat"]}, type_name="Account", type_condition="Chat"}
┘
┐entity_satisfies_type_condition{possible_types={"Node": ["Account", "Chat"]}, type_name="Chat", type_condition="Account"}
┘
   0.427910s DEBUG execution result: ExecutionResult { data: Some(Object {"account": Object {"__typename": String("Account")}, "chat": Object {"__typename": String("Chat")}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Parallel"), "nodes": Array [Object {"kind": String("Fetch"), "serviceName": String("b"), "operationKind": String("query"), "operation": String("{account: node(id: \"a1\"){__typename ...on Chat{id}}}")}, Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{chat: node(id: \"c1\"){__typename ...on Account{id}} account: node(id: \"a1\"){__typename}}")}]}}}) }
   0.430592s DEBUG original document: query {
  account: node(id: "a1") {
    id
    ... on Chat {
      id
    }
  }
  chat: node(id: "c1") {
    __typename
    ... on Account {
      id
    }
  }
}

   0.430737s DEBUG normalized document: query{account: node(id: "a1"){id ...on Chat{id}} chat: node(id: "c1"){__typename ...on Account{id}}}

   0.430767s DEBUG executable operation: query{account: node(id: "a1"){id ...on Chat{id}} chat: node(id: "c1"){__typename ...on Account{id}}}
┐walk_operation{}
├─   0.431141s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="node", leaf=false}
  ├─   0.431195s   0ms DEBUG Trying to advance to: chat: node(id: "c1"){__typename ...on Account{id}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.431254s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.431275s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.431297s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.431318s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.431334s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.431361s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.431377s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.431388s   0ms DEBUG Indirect paths found: 0
    ├─   0.431395s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.431425s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.431439s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.431453s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.431461s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.431474s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("chat"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.431494s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.431500s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.431511s   0ms DEBUG Indirect paths found: 0
    ├─   0.431517s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.431531s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_inline_fragment{type_condition="Account"}
  ├─   0.431568s   0ms DEBUG Processing inline fragment '{id}' on type 'Account' through 2 possible paths
  ├─   0.431579s   0ms DEBUG Trying to advance to: ... on Account, through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=ConcreteType("Account"), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.431628s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(🔮)- Account/a
      ├─   0.431637s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24)" }])
    ┌─┘
    ├─   0.431655s   0ms DEBUG Direct paths found: 1
    ├─   0.431662s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=ConcreteType("Account"), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.431692s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(🔮)- Account/b
      ├─   0.431699s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(25)" }])
    ┌─┘
    ├─   0.431712s   0ms DEBUG Direct paths found: 1
    ├─   0.431718s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.431741s   0ms DEBUG Trying to advance to: id through 2 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
          ├─   0.431772s   0ms DEBUG checking edge Account/a -(id)- ID/a
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
            ├─   0.431790s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.431807s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a with edge Account/a -(id)- ID/a
          ├─   0.431816s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }])
        ┌─┘
        ├─   0.431831s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
          ├─   0.431868s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
            ├─   0.431910s   0ms DEBUG checking requirements {id} for edge 'Account/a -(🔑🧩{id})- Account/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
                  ├─   0.431957s   0ms DEBUG checking edge Account/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", edge="id"}
                    ├─   0.431978s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.431998s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a with edge Account/a -(id)- ID/a
                  ├─   0.432009s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a", current_cost=2001}
                  ├─   0.432059s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
                  ├─   0.432072s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.432081s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
                  ├─   0.432088s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.432096s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.432103s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.432123s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }], [])))
              ┌─┘
              ├─   0.432143s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }], [])))
            ┌─┘
            ├─   0.432158s   0ms DEBUG Paths for id
            ├─   0.432169s   0ms DEBUG   Path root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a -(id)- ID/a is valid
            ├─   0.432177s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.432192s   0ms DEBUG path Account/a -(id)- ID/a is valid
            ├─   0.432212s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(19)" }]))
          ┌─┘
          ├─   0.432236s   0ms DEBUG Advancing path to Account/a -(🔑🧩{id})- Account/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(19)" }, root_node="Account/a"}
            └─┐create_root_for_path_sequences{root_node="Account/a", segments_count=1}
              ├─   0.432267s   0ms DEBUG Building root query tree node: Account/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.432283s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.432305s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a -(🔑🧩{id})- Account/b", current_cost=3003}
            ├─   0.432355s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.432369s   0ms DEBUG No direct paths found
          ├─   0.432379s   0ms DEBUG going deeper
          ├─   0.432387s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
          ├─   0.432393s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.432400s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
          ├─   0.432406s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
          ├─   0.432412s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
          ├─   0.432418s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.432427s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.432432s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.432445s   0ms DEBUG Indirect paths found: 0
        ├─   0.432454s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Account/a
      ┌─┘
      └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
          ├─   0.432487s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.432499s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
          ├─   0.432517s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
          ├─   0.432523s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.432529s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", edge="id"}
            ├─   0.432547s   0ms DEBUG checking requirements {id} for edge 'Account/b -(🔑🧩{id})- Account/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
                  ├─   0.432580s   0ms INFO return=Ok([])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b", current_cost=2001}
                  ├─   0.432607s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
                  ├─   0.432614s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.432625s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
                  ├─   0.432632s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.432639s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.432646s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.432665s   0ms INFO return=Ok(None)
              ┌─┘
              ├─   0.432678s   0ms INFO return=Ok(None)
            ┌─┘
            ├─   0.432691s   0ms INFO return=Ok(None)
          ┌─┘
          ├─   0.432703s   0ms DEBUG Requirements not satisfied, continue look up...
          ├─   0.432710s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.432715s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.432726s   0ms DEBUG Indirect paths found: 0
        ├─   0.432735s   0ms WARN failed to advance: root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Account/b
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
└─┐process_field{field_name="__typename", leaf=true}
  ├─   0.432796s   0ms DEBUG Trying to advance to: __typename through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.432827s   0ms DEBUG checking edge Node/a -(__typename)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a", edge="__typename"}
        ├─   0.432843s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.432858s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(__typename)- String/a
      ├─   0.432880s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(13)" }])
    ┌─┘
    ├─   0.432902s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.432927s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.432933s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.432944s   0ms DEBUG Indirect paths found: 0
    ├─   0.432951s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.433001s   0ms DEBUG checking edge Node/b -(__typename)- String/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b", edge="__typename"}
        ├─   0.433020s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.433037s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(__typename)- String/b
      ├─   0.433045s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(15)" }])
    ┌─┘
    ├─   0.433067s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.433086s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.433092s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.433103s   0ms DEBUG Indirect paths found: 0
    ├─   0.433110s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
┌─┘
└─┐process_field{field_name="node", leaf=false}
  ├─   0.433136s   0ms DEBUG Trying to advance to: account: node(id: "a1"){id ...on Chat{id}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.433165s   0ms DEBUG checking edge Query/a -(node)- Node/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="node"}
        ├─   0.433179s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.433193s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(node)- Node/a
      ├─   0.433201s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(9)" }])
    ┌─┘
    ├─   0.433233s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.433272s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.433278s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.433290s   0ms DEBUG Indirect paths found: 0
    ├─   0.433298s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.433327s   0ms DEBUG checking edge Query/b -(node)- Node/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="node"}
        ├─   0.433343s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.433356s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(node)- Node/b
      ├─   0.433365s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.433379s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "node", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: Some("account"), arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.433398s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.433403s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.433414s   0ms DEBUG Indirect paths found: 0
    ├─   0.433420s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.433432s   0ms DEBUG Found 2 paths
┌─┘
└─┐process_inline_fragment{type_condition="Chat"}
  ├─   0.433450s   0ms DEBUG Processing inline fragment '{id}' on type 'Chat' through 2 possible paths
  ├─   0.433457s   0ms DEBUG Trying to advance to: ... on Chat, through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=ConcreteType("Chat"), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.433481s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(🔮)- Chat/a
      ├─   0.433503s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(22)" }])
    ┌─┘
    ├─   0.433525s   0ms DEBUG Direct paths found: 1
    ├─   0.433533s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=ConcreteType("Chat"), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.433566s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(🔮)- Chat/b
      ├─   0.433584s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23)" }])
    ┌─┘
    ├─   0.433605s   0ms DEBUG Direct paths found: 1
    ├─   0.433614s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.433640s   0ms DEBUG Trying to advance to: id through 2 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
          ├─   0.433668s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.433681s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
          ├─   0.433700s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", edge="id"}
            ├─   0.433719s   0ms DEBUG checking requirements {id} for edge 'Chat/a -(🔑🧩{id})- Chat/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
                  ├─   0.433753s   0ms INFO return=Ok([])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a", current_cost=2001}
                  ├─   0.433780s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
                  ├─   0.433788s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.433796s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
                  ├─   0.433802s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.433810s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.433817s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.433833s   0ms INFO return=Ok(None)
              ┌─┘
              ├─   0.433846s   0ms INFO return=Ok(None)
            ┌─┘
            ├─   0.433859s   0ms INFO return=Ok(None)
          ┌─┘
          ├─   0.433871s   0ms DEBUG Requirements not satisfied, continue look up...
          ├─   0.433878s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
          ├─   0.433883s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.433889s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.433896s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.433907s   0ms DEBUG Indirect paths found: 0
        ├─   0.433916s   0ms WARN failed to advance: root(Query) -(a)- Query/a -(node)- Node/a -(🔮)- Chat/a
      ┌─┘
      └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
          ├─   0.433950s   0ms DEBUG checking edge Chat/b -(id)- ID/b
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
            ├─   0.433967s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.433982s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b with edge Chat/b -(id)- ID/b
          ├─   0.433991s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }])
        ┌─┘
        ├─   0.434006s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
          ├─   0.434026s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
          ├─   0.434032s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.434038s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
          └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
            ├─   0.434055s   0ms DEBUG checking requirements {id} for edge 'Chat/b -(🔑🧩{id})- Chat/a'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
                  ├─   0.434087s   0ms DEBUG checking edge Chat/b -(id)- ID/b
                  └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", edge="id"}
                    ├─   0.434105s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.434123s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b with edge Chat/b -(id)- ID/b
                  ├─   0.434132s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b", current_cost=2001}
                  ├─   0.434162s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
                  ├─   0.434170s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.434177s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
                  ├─   0.434183s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
                  ├─   0.434191s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.434198s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.434229s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.434252s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.434266s   0ms DEBUG Paths for id
            ├─   0.434277s   0ms DEBUG   Path root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b -(id)- ID/b is valid
            ├─   0.434283s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.434295s   0ms DEBUG path Chat/b -(id)- ID/b is valid
            ├─   0.434301s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.434317s   0ms DEBUG Advancing path to Chat/b -(🔑🧩{id})- Chat/a
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Chat/b"}
            └─┐create_root_for_path_sequences{root_node="Chat/b", segments_count=1}
              ├─   0.434345s   0ms DEBUG Building root query tree node: Chat/b
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.434361s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.434392s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b -(🔑🧩{id})- Chat/a", current_cost=3003}
            ├─   0.434446s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.434460s   0ms DEBUG No direct paths found
          ├─   0.434468s   0ms DEBUG going deeper
          ├─   0.434476s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
          ├─   0.434483s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.434489s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
          ├─   0.434494s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
          ├─   0.434503s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.434509s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.434521s   0ms DEBUG Indirect paths found: 0
        ├─   0.434529s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b -(🔮)- Chat/b
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.434567s   0ms DEBUG Trying to advance to: id through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(node)- Node/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.434591s   0ms DEBUG checking edge Node/a -(id)- ID/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(node)- Node/a", edge="id"}
        ├─   0.434623s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.434646s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(node)- Node/a with edge Node/a -(id)- ID/a
      ├─   0.434655s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(14)" }])
    ┌─┘
    ├─   0.434670s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(node)- Node/a", current_cost=1001}
      ├─   0.434693s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.434698s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.434710s   0ms DEBUG Indirect paths found: 0
    ├─   0.434717s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(node)- Node/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b -(node)- Node/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.434745s   0ms DEBUG checking edge Node/b -(id)- ID/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(node)- Node/b", edge="id"}
        ├─   0.434760s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.434774s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(node)- Node/b with edge Node/b -(id)- ID/b
      ├─   0.434781s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(16)" }])
    ┌─┘
    ├─   0.434795s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(node)- Node/b", current_cost=1001}
      ├─   0.434813s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.434818s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.434829s   0ms DEBUG Indirect paths found: 0
    ├─   0.434852s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(node)- Node/b
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(24) --> EdgeIndex(19)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.434930s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.434948s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.434961s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.434974s   0ms DEBUG Processing edge: Node/a -(🔮)- Account/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.434986s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.435008s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.435033s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.435045s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.435055s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(13)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.435095s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.435107s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.435119s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.435131s   0ms DEBUG Processing edge: Node/a -(__typename)- String/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.435149s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.435160s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.435170s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(1) --> EdgeIndex(12) --> EdgeIndex(23) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.435202s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.435213s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.435224s   0ms DEBUG Processing edge: Query/b -(node)- Node/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.435237s   0ms DEBUG Processing edge: Node/b -(🔮)- Chat/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.435249s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.435268s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.435279s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.435289s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.435300s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(9) --> EdgeIndex(14)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.435332s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.435343s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.435354s   0ms DEBUG Processing edge: Query/a -(node)- Node/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.435366s   0ms DEBUG Processing edge: Node/a -(id)- ID/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.435384s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.435396s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.435406s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=4}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=2}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="node", alias="chat", arguments="id: \"c1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.435551s   0ms DEBUG adding output field 'node' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=1}
            └─┐process_abstract_edge{parent_fetch_step_index=1, type_name="Account", response_path="chat", fetch_path="chat"}
              ├─   0.435586s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '1' to fetch step [Account]
              └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Account", field="id", leaf=true, list=false, response_path="chat", fetch_path="chat"}
                  ├─   0.435626s   0ms DEBUG adding output field 'id' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Node", field="__typename", leaf=true, list=false, response_path="chat", fetch_path="chat"}
              ├─   0.435728s   0ms DEBUG adding output field '__typename' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="node", alias="account", arguments="id: \"a1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.435815s   0ms DEBUG adding output field 'node' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Node", field="id", leaf=true, list=false, response_path="account", fetch_path="account"}
              ├─   0.435859s   0ms DEBUG adding output field 'id' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
    └─┐process_subgraph_entrypoint_edge{subgraph="b", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=2}
      ┌─┘
      └─┐connect{parent=0, child=2}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
        └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Query", field="node", alias="account", arguments="id: \"a1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.435973s   0ms DEBUG adding output field 'node' to fetch step [2]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
            └─┐process_abstract_edge{parent_fetch_step_index=2, type_name="Chat", response_path="account", fetch_path="account"}
              ├─   0.436012s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '2' to fetch step [Chat]
              └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
                └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Chat", field="id", leaf=true, list=false, response_path="account", fetch_path="account"}
                  ├─   0.436050s   0ms DEBUG adding output field 'id' to fetch step [2]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=2}
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.436132s   0ms DEBUG Done
├─   0.436140s   0ms DEBUG found roots
├─   0.436156s   0ms DEBUG print graph
├─   0.436163s   0ms DEBUG Nodes:
│ [1] Query/a {} → {chat: node(id: "c1"){__typename ...on Account{id}} account: node(id: "a1"){id}} at $.
│ [2] Query/b {} → {account: node(id: "a1"){__typename ...on Chat{id}}} at $.
│ 
│ Tree:
│ [2]
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐ParallelNode::execute{data=Null, representations=[]}
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="b"}
      └─┐execute{subgraph_name="b"}
        ├─   0.436608s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="a"}
      └─┐execute{subgraph_name="a"}
        ├─   0.436783s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
        ├─   0.438290s   1ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
        ├─   0.439362s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
┘
┐entity_satisfies_type_condition{possible_types={"Node": ["Account", "Chat"]}, type_name="Account", type_condition="Chat"}
┘
┐entity_satisfies_type_condition{possible_types={"Node": ["Account", "Chat"]}, type_name="Chat", type_condition="Account"}
┘
   0.439592s DEBUG execution result: ExecutionResult { data: Some(Object {"account": Object {"id": String("a1")}, "chat": Object {"__typename": String("Chat")}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Parallel"), "nodes": Array [Object {"kind": String("Fetch"), "serviceName": String("b"), "operationKind": String("query"), "operation": String("{account: node(id: \"a1\"){__typename ...on Chat{id}}}")}, Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{chat: node(id: \"c1\"){__typename ...on Account{id}} account: node(id: \"a1\"){id}}")}]}}}) }
   0.442802s DEBUG original document: query {
  chat(id: "c1") {
    id
  }
}

   0.442895s DEBUG normalized document: query{chat(id: "c1"){id}}

   0.442907s DEBUG executable operation: query{chat(id: "c1"){id}}
┐walk_operation{}
├─   0.443203s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="chat", leaf=false}
  ├─   0.443257s   0ms DEBUG Trying to advance to: chat(id: "c1"){id} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.443310s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.443329s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.443353s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.443361s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.443373s   0ms DEBUG Indirect paths found: 0
    ├─   0.443380s   0ms WARN failed to advance: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.443410s   0ms DEBUG checking edge Query/b -(chat)- Chat/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="chat"}
        ├─   0.443427s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.443442s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(chat)- Chat/b
      ├─   0.443452s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(11)" }])
    ┌─┘
    ├─   0.443466s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.443487s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.443492s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.443503s   0ms DEBUG Indirect paths found: 0
    ├─   0.443510s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.443523s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.443542s   0ms DEBUG Trying to advance to: id through 1 possible paths
  └─┐explore_path{path="root(Query) -(b)- Query/b -(chat)- Chat/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
      ├─   0.443567s   0ms DEBUG checking edge Chat/b -(id)- ID/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="id"}
        ├─   0.443583s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.443596s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(chat)- Chat/b with edge Chat/b -(id)- ID/b
      ├─   0.443604s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }])
    ┌─┘
    ├─   0.443617s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
      ├─   0.443635s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
      ├─   0.443641s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.443647s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="id"}
        ├─   0.443665s   0ms DEBUG checking requirements {id} for edge 'Chat/b -(🔑🧩{id})- Chat/a'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
              ├─   0.443700s   0ms DEBUG checking edge Chat/b -(id)- ID/b
              └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="id"}
                ├─   0.443718s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.443735s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(chat)- Chat/b with edge Chat/b -(id)- ID/b
              ├─   0.443743s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
              ├─   0.443770s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
              ├─   0.443778s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.443784s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
              ├─   0.443791s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
              ├─   0.443799s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.443805s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.443821s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }], [])))
          ┌─┘
          ├─   0.443842s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }], [])))
        ┌─┘
        ├─   0.443856s   0ms DEBUG Paths for id
        ├─   0.443864s   0ms DEBUG   Path root(Query) -(b)- Query/b -(chat)- Chat/b -(id)- ID/b is valid
        ├─   0.443871s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.443885s   0ms DEBUG path Chat/b -(id)- ID/b is valid
        ├─   0.443891s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
      ┌─┘
      ├─   0.443905s   0ms DEBUG Advancing path to Chat/b -(🔑🧩{id})- Chat/a
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Chat/b"}
        └─┐create_root_for_path_sequences{root_node="Chat/b", segments_count=1}
          ├─   0.443930s   0ms DEBUG Building root query tree node: Chat/b
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.443944s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.443966s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a", current_cost=2003}
        ├─   0.444008s   0ms INFO return=Ok([])
      ┌─┘
      ├─   0.444021s   0ms DEBUG No direct paths found
      ├─   0.444030s   0ms DEBUG going deeper
      ├─   0.444037s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
      ├─   0.444043s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.444049s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
      ├─   0.444054s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
      ├─   0.444062s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.444068s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.444079s   0ms DEBUG Indirect paths found: 0
    ├─   0.444086s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(chat)- Chat/b
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.444128s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.444139s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.444150s   0ms DEBUG Processing edge: Query/b -(chat)- Chat/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.444163s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.444181s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.444192s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.444204s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=1}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="b", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="chat", arguments="id: \"c1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.444311s   0ms DEBUG adding output field 'chat' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Chat", field="id", leaf=true, list=false, response_path="chat", fetch_path="chat"}
              ├─   0.444378s   0ms DEBUG adding output field 'id' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.444462s   0ms DEBUG Done
├─   0.444469s   0ms DEBUG found roots
├─   0.444474s   0ms DEBUG print graph
├─   0.444479s   0ms DEBUG Nodes:
│ [1] Query/b {} → {chat(id: "c1"){id}} at $.
│ 
│ Tree:
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐FetchNode::execute{data=Null, representations=[]}
  └─┐execute{subgraph_name="b"}
    └─┐execute{subgraph_name="b"}
      ├─   0.444858s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
      ├─   0.446776s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
    ┌─┘
  ┌─┘
┌─┘
┘
   0.446954s DEBUG execution result: ExecutionResult { data: Some(Object {"chat": Object {"id": String("c1")}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Fetch"), "serviceName": String("b"), "operationKind": String("query"), "operation": String("{chat(id: \"c1\"){id}}")}}}) }
   0.449489s DEBUG original document: query {
  account(id: "a1") {
    id
  }
}

   0.449582s DEBUG normalized document: query{account(id: "a1"){id}}

   0.449594s DEBUG executable operation: query{account(id: "a1"){id}}
┐walk_operation{}
├─   0.449880s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="account", leaf=false}
  ├─   0.449923s   0ms DEBUG Trying to advance to: account(id: "a1"){id} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.449986s   0ms DEBUG checking edge Query/a -(account)- Account/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="account"}
        ├─   0.450007s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.450028s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(account)- Account/a
      ├─   0.450040s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(8)" }])
    ┌─┘
    ├─   0.450055s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.450080s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.450086s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.450098s   0ms DEBUG Indirect paths found: 0
    ├─   0.450105s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.450133s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.450144s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.450176s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.450185s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.450199s   0ms DEBUG Indirect paths found: 0
    ├─   0.450208s   0ms WARN failed to advance: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.450222s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.450244s   0ms DEBUG Trying to advance to: id through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(account)- Account/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
      ├─   0.450271s   0ms DEBUG checking edge Account/a -(id)- ID/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="id"}
        ├─   0.450287s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.450303s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(account)- Account/a with edge Account/a -(id)- ID/a
      ├─   0.450311s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }])
    ┌─┘
    ├─   0.450325s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
      ├─   0.450344s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="id"}
        ├─   0.450362s   0ms DEBUG checking requirements {id} for edge 'Account/a -(🔑🧩{id})- Account/b'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
              ├─   0.450396s   0ms DEBUG checking edge Account/a -(id)- ID/a
              └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="id"}
                ├─   0.450414s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.450430s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(account)- Account/a with edge Account/a -(id)- ID/a
              ├─   0.450438s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
              ├─   0.450466s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
              ├─   0.450474s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
              ├─   0.450482s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
              ├─   0.450488s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.450496s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.450517s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.450540s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }], [])))
          ┌─┘
          ├─   0.450558s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }], [])))
        ┌─┘
        ├─   0.450571s   0ms DEBUG Paths for id
        ├─   0.450581s   0ms DEBUG   Path root(Query) -(a)- Query/a -(account)- Account/a -(id)- ID/a is valid
        ├─   0.450588s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.450602s   0ms DEBUG path Account/a -(id)- ID/a is valid
        ├─   0.450609s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(19)" }]))
      ┌─┘
      ├─   0.450623s   0ms DEBUG Advancing path to Account/a -(🔑🧩{id})- Account/b
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(19)" }, root_node="Account/a"}
        └─┐create_root_for_path_sequences{root_node="Account/a", segments_count=1}
          ├─   0.450670s   0ms DEBUG Building root query tree node: Account/a
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.450687s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.450709s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b", current_cost=2003}
        ├─   0.450756s   0ms INFO return=Ok([])
      ┌─┘
      ├─   0.450768s   0ms DEBUG No direct paths found
      ├─   0.450777s   0ms DEBUG going deeper
      ├─   0.450785s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
      ├─   0.450790s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.450796s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
      ├─   0.450802s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
      ├─   0.450808s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
      ├─   0.450813s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.450821s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.450841s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.450859s   0ms DEBUG Indirect paths found: 0
    ├─   0.450869s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(account)- Account/a
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.450916s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.450928s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.450941s   0ms DEBUG Processing edge: Query/a -(account)- Account/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.450953s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.450971s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.450984s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.450994s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=1}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="account", arguments="id: \"a1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.451129s   0ms DEBUG adding output field 'account' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Account", field="id", leaf=true, list=false, response_path="account", fetch_path="account"}
              ├─   0.451162s   0ms DEBUG adding output field 'id' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.451246s   0ms DEBUG Done
├─   0.451255s   0ms DEBUG found roots
├─   0.451260s   0ms DEBUG print graph
├─   0.451264s   0ms DEBUG Nodes:
│ [1] Query/a {} → {account(id: "a1"){id}} at $.
│ 
│ Tree:
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐FetchNode::execute{data=Null, representations=[]}
  └─┐execute{subgraph_name="a"}
    └─┐execute{subgraph_name="a"}
      ├─   0.451618s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
      ├─   0.453525s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
    ┌─┘
  ┌─┘
┌─┘
┘
   0.453719s DEBUG execution result: ExecutionResult { data: Some(Object {"account": Object {"id": String("a1")}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{account(id: \"a1\"){id}}")}}}) }
   0.456394s DEBUG original document: query {
  chat(id: "c1") {
    id
    text
    account {
      id
    }
  }
}

   0.456481s DEBUG normalized document: query{chat(id: "c1"){id text account{id}}}

   0.456493s DEBUG executable operation: query{chat(id: "c1"){id text account{id}}}
┐walk_operation{}
├─   0.456806s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="chat", leaf=false}
  ├─   0.456844s   0ms DEBUG Trying to advance to: chat(id: "c1"){id text account{id}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "text", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.456892s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.456909s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "text", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.456954s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.456965s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.456981s   0ms DEBUG Indirect paths found: 0
    ├─   0.456991s   0ms WARN failed to advance: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "text", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.457027s   0ms DEBUG checking edge Query/b -(chat)- Chat/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b", edge="chat"}
        ├─   0.457045s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.457059s   0ms DEBUG Advancing path root(Query) -(b)- Query/b with edge Query/b -(chat)- Chat/b
      ├─   0.457069s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(1) --> EdgeIndex(11)" }])
    ┌─┘
    ├─   0.457084s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "chat", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "text", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("c1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.457105s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.457110s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.457121s   0ms DEBUG Indirect paths found: 0
    ├─   0.457128s   0ms DEBUG advanced: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.457141s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="account", leaf=false}
  ├─   0.457162s   0ms DEBUG Trying to advance to: account{id} through 1 possible paths
  └─┐explore_path{path="root(Query) -(b)- Query/b -(chat)- Chat/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
      ├─   0.457186s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.457198s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
      ├─   0.457215s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
      ├─   0.457221s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.457227s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="id"}
        ├─   0.457262s   0ms DEBUG checking requirements {id} for edge 'Chat/b -(🔑🧩{id})- Chat/a'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
              ├─   0.457322s   0ms DEBUG checking edge Chat/b -(id)- ID/b
              └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="id"}
                ├─   0.457359s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.457393s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(chat)- Chat/b with edge Chat/b -(id)- ID/b
              ├─   0.457406s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
              ├─   0.457449s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
              ├─   0.457461s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.457468s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
              ├─   0.457474s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
              ├─   0.457482s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.457501s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.457523s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }], [])))
          ┌─┘
          ├─   0.457541s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }], [])))
        ┌─┘
        ├─   0.457554s   0ms DEBUG Paths for id
        ├─   0.457565s   0ms DEBUG   Path root(Query) -(b)- Query/b -(chat)- Chat/b -(id)- ID/b is valid
        ├─   0.457571s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.457586s   0ms DEBUG path Chat/b -(id)- ID/b is valid
        ├─   0.457601s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
      ┌─┘
      ├─   0.457616s   0ms DEBUG Advancing path to Chat/b -(🔑🧩{id})- Chat/a
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Chat/b"}
        └─┐create_root_for_path_sequences{root_node="Chat/b", segments_count=1}
          ├─   0.457644s   0ms DEBUG Building root query tree node: Chat/b
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.457658s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.457678s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a", current_cost=2003}
        ├─   0.457742s   0ms DEBUG checking edge Chat/a -(account)- Account/a
        └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a", edge="account"}
          ├─   0.457779s   0ms INFO return=Ok(Some([]))
        ┌─┘
        ├─   0.457804s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a with edge Chat/a -(account)- Account/a
        ├─   0.457814s   0ms INFO return=Ok([ { cost: 2004, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(28) --> EdgeIndex(3)" }])
      ┌─┘
      ├─   0.457834s   0ms DEBUG Found 1 direct paths to Chat/b -(🔑🧩{id})- Chat/a
      ├─   0.457845s   0ms DEBUG Finished finding indirect paths, found total of 1
      ├─   0.457851s   0ms INFO return=Ok([ { cost: 2004, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(28) --> EdgeIndex(3)" }])
    ┌─┘
    ├─   0.457865s   0ms DEBUG Indirect paths found: 1
    ├─   0.457873s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(chat)- Chat/b
  ┌─┘
  ├─   0.457884s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.457920s   0ms DEBUG Trying to advance to: id through 1 possible paths
  └─┐explore_path{path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a", current_cost=2004}
      ├─   0.457959s   0ms DEBUG checking edge Account/a -(id)- ID/a
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a", edge="id"}
        ├─   0.457995s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.458015s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a with edge Account/a -(id)- ID/a
      ├─   0.458024s   0ms INFO return=Ok([ { cost: 2005, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(28) --> EdgeIndex(3) --> EdgeIndex(19)" }])
    ┌─┘
    ├─   0.458056s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a", current_cost=2004}
      ├─   0.458098s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a", edge="id"}
        ├─   0.458144s   0ms DEBUG checking requirements {id} for edge 'Account/a -(🔑🧩{id})- Account/b'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a", current_cost=2004}
              ├─   0.458184s   0ms DEBUG checking edge Account/a -(id)- ID/a
              └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a", edge="id"}
                ├─   0.458207s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.458227s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a with edge Account/a -(id)- ID/a
              ├─   0.458237s   0ms INFO return=Ok([ { cost: 2005, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(28) --> EdgeIndex(3) --> EdgeIndex(19)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a", current_cost=2004}
              ├─   0.458269s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
              ├─   0.458276s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
              ├─   0.458283s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
              ├─   0.458290s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.458297s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.458303s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.458318s   0ms INFO return=Ok(Some(([ { cost: 2005, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(28) --> EdgeIndex(3) --> EdgeIndex(19)" }], [])))
          ┌─┘
          ├─   0.458335s   0ms INFO return=Ok(Some(([ { cost: 2005, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(28) --> EdgeIndex(3) --> EdgeIndex(19)" }], [])))
        ┌─┘
        ├─   0.458348s   0ms DEBUG Paths for id
        ├─   0.458358s   0ms DEBUG   Path root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a -(id)- ID/a is valid
        ├─   0.458364s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.458376s   0ms DEBUG path Account/a -(id)- ID/a is valid
        ├─   0.458382s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(19)" }]))
      ┌─┘
      ├─   0.458396s   0ms DEBUG Advancing path to Account/a -(🔑🧩{id})- Account/b
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(19)" }, root_node="Account/a"}
        └─┐create_root_for_path_sequences{root_node="Account/a", segments_count=1}
          ├─   0.458420s   0ms DEBUG Building root query tree node: Account/a
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.458434s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.458454s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a -(🔑🧩{id})- Account/b", current_cost=3006}
        ├─   0.458516s   0ms INFO return=Ok([])
      ┌─┘
      ├─   0.458535s   0ms DEBUG No direct paths found
      ├─   0.458546s   0ms DEBUG going deeper
      ├─   0.458555s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
      ├─   0.458560s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.458566s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
      ├─   0.458572s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
      ├─   0.458578s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
      ├─   0.458583s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.458592s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.458597s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.458608s   0ms DEBUG Indirect paths found: 0
    ├─   0.458619s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a -(account)- Account/a
  ┌─┘
┌─┘
└─┐process_field{field_name="text", leaf=true}
  ├─   0.458648s   0ms DEBUG Trying to advance to: text through 1 possible paths
  └─┐explore_path{path="root(Query) -(b)- Query/b -(chat)- Chat/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "text", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
      ├─   0.458695s   0ms DEBUG checking edge Chat/b -(text)- String/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="text"}
        ├─   0.458713s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.458730s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(chat)- Chat/b with edge Chat/b -(text)- String/b
      ├─   0.458738s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(6)" }])
    ┌─┘
    ├─   0.458752s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "text", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
      ├─   0.458772s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
      ├─   0.458778s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.458783s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="id"}
        ├─   0.458799s   0ms DEBUG checking requirements {id} for edge 'Chat/b -(🔑🧩{id})- Chat/a'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
              ├─   0.458830s   0ms DEBUG checking edge Chat/b -(id)- ID/b
              └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="id"}
                ├─   0.458847s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.458863s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(chat)- Chat/b with edge Chat/b -(id)- ID/b
              ├─   0.458871s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
              ├─   0.458899s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
              ├─   0.458905s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.458912s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
              ├─   0.458918s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
              ├─   0.458926s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.458932s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.458947s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }], [])))
          ┌─┘
          ├─   0.458962s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }], [])))
        ┌─┘
        ├─   0.458975s   0ms DEBUG Paths for id
        ├─   0.458983s   0ms DEBUG   Path root(Query) -(b)- Query/b -(chat)- Chat/b -(id)- ID/b is valid
        ├─   0.458989s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.458999s   0ms DEBUG path Chat/b -(id)- ID/b is valid
        ├─   0.459005s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
      ┌─┘
      ├─   0.459019s   0ms DEBUG Advancing path to Chat/b -(🔑🧩{id})- Chat/a
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Chat/b"}
        └─┐create_root_for_path_sequences{root_node="Chat/b", segments_count=1}
          ├─   0.459042s   0ms DEBUG Building root query tree node: Chat/b
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.459055s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.459077s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "text", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a", current_cost=2003}
        ├─   0.459120s   0ms INFO return=Ok([])
      ┌─┘
      ├─   0.459133s   0ms DEBUG No direct paths found
      ├─   0.459140s   0ms DEBUG going deeper
      ├─   0.459148s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
      ├─   0.459154s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.459160s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
      ├─   0.459165s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
      ├─   0.459173s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.459178s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.459189s   0ms DEBUG Indirect paths found: 0
    ├─   0.459197s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(chat)- Chat/b
  ┌─┘
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.459222s   0ms DEBUG Trying to advance to: id through 1 possible paths
  └─┐explore_path{path="root(Query) -(b)- Query/b -(chat)- Chat/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
      ├─   0.459246s   0ms DEBUG checking edge Chat/b -(id)- ID/b
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="id"}
        ├─   0.459261s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.459275s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(chat)- Chat/b with edge Chat/b -(id)- ID/b
      ├─   0.459282s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }])
    ┌─┘
    ├─   0.459295s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
      ├─   0.459313s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
      ├─   0.459319s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.459324s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
      └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="id"}
        ├─   0.459340s   0ms DEBUG checking requirements {id} for edge 'Chat/b -(🔑🧩{id})- Chat/a'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
              ├─   0.459370s   0ms DEBUG checking edge Chat/b -(id)- ID/b
              └─┐can_satisfy_edge{path="root(Query) -(b)- Query/b -(chat)- Chat/b", edge="id"}
                ├─   0.459386s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.459432s   0ms DEBUG Advancing path root(Query) -(b)- Query/b -(chat)- Chat/b with edge Chat/b -(id)- ID/b
              ├─   0.459446s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b", current_cost=1001}
              ├─   0.459498s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
              ├─   0.459508s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.459515s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
              ├─   0.459521s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
              ├─   0.459530s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.459536s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.459554s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }], [])))
          ┌─┘
          ├─   0.459571s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }], [])))
        ┌─┘
        ├─   0.459585s   0ms DEBUG Paths for id
        ├─   0.459593s   0ms DEBUG   Path root(Query) -(b)- Query/b -(chat)- Chat/b -(id)- ID/b is valid
        ├─   0.459599s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.459610s   0ms DEBUG path Chat/b -(id)- ID/b is valid
        ├─   0.459615s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
      ┌─┘
      ├─   0.459629s   0ms DEBUG Advancing path to Chat/b -(🔑🧩{id})- Chat/a
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Chat/b"}
        └─┐create_root_for_path_sequences{root_node="Chat/b", segments_count=1}
          ├─   0.459654s   0ms DEBUG Building root query tree node: Chat/b
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.459667s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.459687s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b -(chat)- Chat/b -(🔑🧩{id})- Chat/a", current_cost=2003}
        ├─   0.459729s   0ms INFO return=Ok([])
      ┌─┘
      ├─   0.459741s   0ms DEBUG No direct paths found
      ├─   0.459748s   0ms DEBUG going deeper
      ├─   0.459756s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
      ├─   0.459761s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.459767s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
      ├─   0.459772s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
      ├─   0.459780s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.459785s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.459796s   0ms DEBUG Indirect paths found: 0
    ├─   0.459804s   0ms DEBUG advanced: root(Query) -(b)- Query/b -(chat)- Chat/b
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2005, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(28) --> EdgeIndex(3) --> EdgeIndex(19)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=5}
  ├─   0.459845s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=5}
    ├─   0.459859s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=5}
      ├─   0.459871s   0ms DEBUG Processing edge: Query/b -(chat)- Chat/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=5}
        ├─   0.459883s   0ms DEBUG Processing edge: Chat/b -(🔑🧩{id})- Chat/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=5}
          ├─   0.459896s   0ms DEBUG Processing edge: Chat/a -(account)- Account/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=5}
            ├─   0.459910s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
            └─┐from_path_segment_sequences{current_index=5, total_segments=5}
            ┌─┘
            ├─   0.459929s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
          ├─   0.459960s   0ms DEBUG Adding subsequent step as child
        ┌─┘
        ├─   0.459973s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.459983s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.459994s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(6)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.460033s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.460045s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.460079s   0ms DEBUG Processing edge: Query/b -(chat)- Chat/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.460096s   0ms DEBUG Processing edge: Chat/b -(text)- String/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.460117s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.460128s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.460152s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(1) --> EdgeIndex(11) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.460208s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.460222s   0ms DEBUG Processing edge: root(Query) -(b)- Query/b
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.460233s   0ms DEBUG Processing edge: Query/b -(chat)- Chat/b
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.460246s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.460266s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.460277s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.460287s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=3}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="b", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="chat", arguments="id: \"c1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.460433s   0ms DEBUG adding output field 'chat' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=3, parent_fetch_step_index=1}
            └─┐process_entity_move_edge{edge="Chat/b -(🔑🧩{id})- Chat/a", parent_fetch_step_index=1}
              ├─   0.460480s   0ms DEBUG created a new fetch step [2] subgraph(a) type(Chat) requirement() key({id}) in children of 1
              ├─   0.460499s   0ms DEBUG adding input requirement '{id}' to fetch step [2]
              ├─   0.460510s   0ms DEBUG adding __typename field to output for type 'Chat'
              ├─   0.460519s   0ms DEBUG connecting fetch step to parent [1] -> [2]
              └─┐connect{parent=1, child=2}
              ┌─┘
              └─┐process_requirements_for_fetch_steps{count=1}
                └─┐process_noop_edge{}
                  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1, requiring_fetch_step_index=2}
                    └─┐process_plain_field_edge{parent_fetch_step_index=1, requiring_fetch_step_index=2, type_name="Chat", field="id", leaf=true, list=false, response_path="chat", fetch_path="chat"}
                      ├─   0.460603s   0ms DEBUG connecting parent fetch step [1] to requiring fetch step [2]
                      └─┐connect{parent=1, child=2}
                      ┌─┘
                      ├─   0.460631s   0ms DEBUG adding output field 'id' to fetch step [1]
                      └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1, requiring_fetch_step_index=2}
                      ┌─┘
                    ┌─┘
                  ┌─┘
                ┌─┘
                └─┐connect{parent=1, child=2}
                ┌─┘
              ┌─┘
              └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
                └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Chat", field="account", leaf=false, list=false, response_path="chat", fetch_path=""}
                  ├─   0.460737s   0ms DEBUG adding output field 'account' to fetch step [2]
                  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
                    └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Account", field="id", leaf=true, list=false, response_path="chat.account", fetch_path="account"}
                      ├─   0.460766s   0ms DEBUG adding output field 'id' to fetch step [2]
                      └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=2}
                      ┌─┘
                    ┌─┘
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Chat", field="text", leaf=true, list=false, response_path="chat", fetch_path="chat"}
              ├─   0.460835s   0ms DEBUG adding output field 'text' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Chat", field="id", leaf=true, list=false, response_path="chat", fetch_path="chat"}
              ├─   0.460871s   0ms DEBUG adding output field 'id' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.460931s   0ms DEBUG Done
├─   0.460938s   0ms DEBUG found roots
├─   0.460943s   0ms DEBUG print graph
├─   0.460947s   0ms DEBUG Nodes:
│ [1] Query/b {} → {chat(id: "c1"){__typename id text}} at $.
│ [2] Chat/a {__typename id} → {account{id}} at $.chat
│ 
│ Tree:
│ [1]
│   [2]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐SequenceNode::execute{data=Null, representations=[]}
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="b"}
      └─┐execute{subgraph_name="b"}
        ├─   0.461315s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
        ├─   0.463329s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
  └─┐FlattenNode::execute{data=Object {"chat": Object {"__typename": String("Chat"), "id": String("c1"), "text": String("c1-text")}}, representations=[]}
    └─┐FetchNode::execute{data=Null, representations=[Object {"__typename": String("Chat"), "id": String("c1"), "text": String("c1-text")}]}
      └─┐project_requires{requires_selections=[SelectionItem::Fragment { type_name: "Chat", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }], entity=Object {"__typename": String("Chat"), "id": String("c1"), "text": String("c1-text")}}
        └─┐entity_satisfies_type_condition{possible_types={"Node": ["Account", "Chat"]}, type_name="Chat", type_condition="Chat"}
        ┌─┘
        └─┐project_requires{requires_selections=[SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }], entity=Object {"__typename": String("Chat"), "id": String("c1"), "text": String("c1-text")}}
          └─┐project_requires{requires_selections=[], entity=String("Chat")}
          ┌─┘
          └─┐project_requires{requires_selections=[], entity=String("c1")}
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐execute{subgraph_name="a"}
        └─┐execute{subgraph_name="a"}
          ├─   0.463774s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
          ├─   0.465739s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
┘
   0.466104s DEBUG execution result: ExecutionResult { data: Some(Object {"chat": Object {"id": String("c1"), "text": String("c1-text"), "account": Object {"id": String("a1")}}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Sequence"), "nodes": Array [Object {"kind": String("Fetch"), "serviceName": String("b"), "operationKind": String("query"), "operation": String("{chat(id: \"c1\"){__typename id text}}")}, Object {"kind": String("Flatten"), "path": Array [String("chat")], "node": Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("query($representations:[_Any!]!){_entities(representations: $representations){...on Chat{account{id}}}}"), "requires": Array [Object {"kind": String("InlineFragment"), "typeCondition": String("Chat"), "selections": Array [Object {"kind": String("Field"), "name": String("__typename")}, Object {"kind": String("Field"), "name": String("id")}]}]}}]}}}) }
   0.468981s DEBUG original document: query {
  account(id: "a1") {
    id
    username
    chats {
      id
    }
  }
}

   0.469109s DEBUG normalized document: query{account(id: "a1"){id username chats{id}}}

   0.469137s DEBUG executable operation: query{account(id: "a1"){id username chats{id}}}
┐walk_operation{}
├─   0.469477s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="account", leaf=false}
  ├─   0.469530s   0ms DEBUG Trying to advance to: account(id: "a1"){id username chats{id}} through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "username", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "chats", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.469588s   0ms DEBUG checking edge Query/a -(account)- Account/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="account"}
        ├─   0.469608s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.469630s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(account)- Account/a
      ├─   0.469642s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(8)" }])
    ┌─┘
    ├─   0.469658s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "username", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "chats", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.469684s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.469690s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.469701s   0ms DEBUG Indirect paths found: 0
    ├─   0.469709s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  └─┐explore_path{path="root(Query) -(b)- Query/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "username", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "chats", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.469739s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.469750s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "account", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "username", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "chats", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: Some(ArgumentsMap { arguments_map: {"id": String("a1")} }), skip_if: None, include_if: None }), path="root(Query) -(b)- Query/b", current_cost=1000}
      ├─   0.469766s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.469771s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.469782s   0ms DEBUG Indirect paths found: 0
    ├─   0.469788s   0ms WARN failed to advance: root(Query) -(b)- Query/b
  ┌─┘
  ├─   0.469801s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="chats", leaf=false}
  ├─   0.469821s   0ms DEBUG Trying to advance to: chats{id} through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(account)- Account/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "chats", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
      ├─   0.469848s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.469859s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "chats", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
      ├─   0.469876s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="id"}
        ├─   0.469895s   0ms DEBUG checking requirements {id} for edge 'Account/a -(🔑🧩{id})- Account/b'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
              ├─   0.469929s   0ms DEBUG checking edge Account/a -(id)- ID/a
              └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="id"}
                ├─   0.469947s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.469964s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(account)- Account/a with edge Account/a -(id)- ID/a
              ├─   0.469972s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
              ├─   0.470001s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
              ├─   0.470009s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
              ├─   0.470017s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
              ├─   0.470023s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.470030s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.470036s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.470052s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }], [])))
          ┌─┘
          ├─   0.470068s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }], [])))
        ┌─┘
        ├─   0.470082s   0ms DEBUG Paths for id
        ├─   0.470111s   0ms DEBUG   Path root(Query) -(a)- Query/a -(account)- Account/a -(id)- ID/a is valid
        ├─   0.470118s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.470134s   0ms DEBUG path Account/a -(id)- ID/a is valid
        ├─   0.470140s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(19)" }]))
      ┌─┘
      ├─   0.470159s   0ms DEBUG Advancing path to Account/a -(🔑🧩{id})- Account/b
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(19)" }, root_node="Account/a"}
        └─┐create_root_for_path_sequences{root_node="Account/a", segments_count=1}
          ├─   0.470187s   0ms DEBUG Building root query tree node: Account/a
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.470202s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.470222s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "chats", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b", current_cost=2003}
        ├─   0.470274s   0ms DEBUG checking edge Account/b -(chats)- Chat/b
        └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b", edge="chats"}
          ├─   0.470293s   0ms INFO return=Ok(Some([]))
        ┌─┘
        ├─   0.470308s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b with edge Account/b -(chats)- Chat/b
        ├─   0.470317s   0ms INFO return=Ok([ { cost: 2004, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(31) --> EdgeIndex(21)" }])
      ┌─┘
      ├─   0.470332s   0ms DEBUG Found 1 direct paths to Account/a -(🔑🧩{id})- Account/b
      ├─   0.470340s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
      ├─   0.470345s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.470353s   0ms DEBUG Finished finding indirect paths, found total of 1
      ├─   0.470358s   0ms INFO return=Ok([ { cost: 2004, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(31) --> EdgeIndex(21)" }])
    ┌─┘
    ├─   0.470371s   0ms DEBUG Indirect paths found: 1
    ├─   0.470379s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(account)- Account/a
  ┌─┘
  ├─   0.470390s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.470409s   0ms DEBUG Trying to advance to: id through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b", current_cost=2004}
      ├─   0.470446s   0ms DEBUG checking edge Chat/b -(id)- ID/b
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b", edge="id"}
        ├─   0.470490s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.470509s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b with edge Chat/b -(id)- ID/b
      ├─   0.470533s   0ms INFO return=Ok([ { cost: 2005, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(31) --> EdgeIndex(21) --> EdgeIndex(5)" }])
    ┌─┘
    ├─   0.470557s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b", current_cost=2004}
      ├─   0.470600s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
      ├─   0.470613s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.470618s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b", edge="id"}
        ├─   0.470638s   0ms DEBUG checking requirements {id} for edge 'Chat/b -(🔑🧩{id})- Chat/a'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b", current_cost=2004}
              ├─   0.470717s   0ms DEBUG checking edge Chat/b -(id)- ID/b
              └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b", edge="id"}
                ├─   0.470745s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.470765s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b with edge Chat/b -(id)- ID/b
              ├─   0.470775s   0ms INFO return=Ok([ { cost: 2005, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(31) --> EdgeIndex(21) --> EdgeIndex(5)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b", current_cost=2004}
              ├─   0.470808s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/b
              ├─   0.470815s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.470822s   0ms DEBUG Exploring edge Chat/b -(🔑🧩{id})- Chat/a
              ├─   0.470828s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
              ├─   0.470836s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.470843s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.470858s   0ms INFO return=Ok(Some(([ { cost: 2005, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(31) --> EdgeIndex(21) --> EdgeIndex(5)" }], [])))
          ┌─┘
          ├─   0.470874s   0ms INFO return=Ok(Some(([ { cost: 2005, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(31) --> EdgeIndex(21) --> EdgeIndex(5)" }], [])))
        ┌─┘
        ├─   0.470887s   0ms DEBUG Paths for id
        ├─   0.470897s   0ms DEBUG   Path root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b -(id)- ID/b is valid
        ├─   0.470903s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.470914s   0ms DEBUG path Chat/b -(id)- ID/b is valid
        ├─   0.470920s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
      ┌─┘
      ├─   0.470933s   0ms DEBUG Advancing path to Chat/b -(🔑🧩{id})- Chat/a
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Chat/b"}
        └─┐create_root_for_path_sequences{root_node="Chat/b", segments_count=1}
          ├─   0.470957s   0ms DEBUG Building root query tree node: Chat/b
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.470970s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.470991s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b -(🔑🧩{id})- Chat/a", current_cost=3006}
        ├─   0.471034s   0ms INFO return=Ok([])
      ┌─┘
      ├─   0.471046s   0ms DEBUG No direct paths found
      ├─   0.471055s   0ms DEBUG going deeper
      ├─   0.471063s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/b
      ├─   0.471068s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.471074s   0ms DEBUG Exploring edge Chat/a -(🔑🧩{id})- Chat/a
      ├─   0.471079s   0ms DEBUG Ignoring, graph is excluded and already visited (current: a, visited: {"a"})
      ├─   0.471088s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.471093s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.471104s   0ms DEBUG Indirect paths found: 0
    ├─   0.471113s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b -(chats)- Chat/b
  ┌─┘
┌─┘
└─┐process_field{field_name="username", leaf=true}
  ├─   0.471140s   0ms DEBUG Trying to advance to: username through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(account)- Account/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "username", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
      ├─   0.471165s   0ms DEBUG checking edge Account/a -(username)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="username"}
        ├─   0.471180s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.471194s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(account)- Account/a with edge Account/a -(username)- String/a
      ├─   0.471202s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(18)" }])
    ┌─┘
    ├─   0.471215s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "username", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
      ├─   0.471233s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="id"}
        ├─   0.471249s   0ms DEBUG checking requirements {id} for edge 'Account/a -(🔑🧩{id})- Account/b'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
              ├─   0.471279s   0ms DEBUG checking edge Account/a -(id)- ID/a
              └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="id"}
                ├─   0.471295s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.471312s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(account)- Account/a with edge Account/a -(id)- ID/a
              ├─   0.471338s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
              ├─   0.471381s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
              ├─   0.471389s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
              ├─   0.471396s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
              ├─   0.471403s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.471410s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.471416s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.471431s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }], [])))
          ┌─┘
          ├─   0.471448s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }], [])))
        ┌─┘
        ├─   0.471461s   0ms DEBUG Paths for id
        ├─   0.471485s   0ms DEBUG   Path root(Query) -(a)- Query/a -(account)- Account/a -(id)- ID/a is valid
        ├─   0.471494s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.471505s   0ms DEBUG path Account/a -(id)- ID/a is valid
        ├─   0.471520s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(19)" }]))
      ┌─┘
      ├─   0.471543s   0ms DEBUG Advancing path to Account/a -(🔑🧩{id})- Account/b
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(19)" }, root_node="Account/a"}
        └─┐create_root_for_path_sequences{root_node="Account/a", segments_count=1}
          ├─   0.471579s   0ms DEBUG Building root query tree node: Account/a
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.471593s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.471614s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "username", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b", current_cost=2003}
        ├─   0.471672s   0ms INFO return=Ok([])
      ┌─┘
      ├─   0.471690s   0ms DEBUG No direct paths found
      ├─   0.471699s   0ms DEBUG going deeper
      ├─   0.471708s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
      ├─   0.471714s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.471720s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
      ├─   0.471725s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
      ├─   0.471732s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
      ├─   0.471738s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.471746s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.471751s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.471762s   0ms DEBUG Indirect paths found: 0
    ├─   0.471772s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(account)- Account/a
  ┌─┘
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.471800s   0ms DEBUG Trying to advance to: id through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(account)- Account/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
      ├─   0.471824s   0ms DEBUG checking edge Account/a -(id)- ID/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="id"}
        ├─   0.471840s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.471854s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(account)- Account/a with edge Account/a -(id)- ID/a
      ├─   0.471861s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }])
    ┌─┘
    ├─   0.471875s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
      ├─   0.471893s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="id"}
        ├─   0.471909s   0ms DEBUG checking requirements {id} for edge 'Account/a -(🔑🧩{id})- Account/b'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
              ├─   0.471939s   0ms DEBUG checking edge Account/a -(id)- ID/a
              └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(account)- Account/a", edge="id"}
                ├─   0.471956s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.471972s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(account)- Account/a with edge Account/a -(id)- ID/a
              ├─   0.471980s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a", current_cost=1001}
              ├─   0.472007s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/b
              ├─   0.472014s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
              ├─   0.472021s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
              ├─   0.472027s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.472034s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.472040s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.472054s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }], [])))
          ┌─┘
          ├─   0.472090s   0ms INFO return=Ok(Some(([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }], [])))
        ┌─┘
        ├─   0.472107s   0ms DEBUG Paths for id
        ├─   0.472117s   0ms DEBUG   Path root(Query) -(a)- Query/a -(account)- Account/a -(id)- ID/a is valid
        ├─   0.472123s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.472134s   0ms DEBUG path Account/a -(id)- ID/a is valid
        ├─   0.472140s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(19)" }]))
      ┌─┘
      ├─   0.472154s   0ms DEBUG Advancing path to Account/a -(🔑🧩{id})- Account/b
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(19)" }, root_node="Account/a"}
        └─┐create_root_for_path_sequences{root_node="Account/a", segments_count=1}
          ├─   0.472180s   0ms DEBUG Building root query tree node: Account/a
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.472193s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.472213s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(account)- Account/a -(🔑🧩{id})- Account/b", current_cost=2003}
        ├─   0.472257s   0ms INFO return=Ok([])
      ┌─┘
      ├─   0.472269s   0ms DEBUG No direct paths found
      ├─   0.472276s   0ms DEBUG going deeper
      ├─   0.472299s   0ms DEBUG Exploring edge Account/a -(🔑🧩{id})- Account/a
      ├─   0.472308s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.472314s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/b
      ├─   0.472320s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
      ├─   0.472326s   0ms DEBUG Exploring edge Account/b -(🔑🧩{id})- Account/a
      ├─   0.472331s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.472338s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.472343s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.472359s   0ms DEBUG Indirect paths found: 0
    ├─   0.472368s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(account)- Account/a
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2005, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(31) --> EdgeIndex(21) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=5}
  ├─   0.472413s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=5}
    ├─   0.472425s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=5}
      ├─   0.472436s   0ms DEBUG Processing edge: Query/a -(account)- Account/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=5}
        ├─   0.472449s   0ms DEBUG Processing edge: Account/a -(🔑🧩{id})- Account/b
        └─┐from_path_segment_sequences{current_index=3, total_segments=5}
          ├─   0.472461s   0ms DEBUG Processing edge: Account/b -(chats)- Chat/b
          └─┐from_path_segment_sequences{current_index=4, total_segments=5}
            ├─   0.472474s   0ms DEBUG Processing edge: Chat/b -(id)- ID/b
            └─┐from_path_segment_sequences{current_index=5, total_segments=5}
            ┌─┘
            ├─   0.472493s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
          ├─   0.472505s   0ms DEBUG Adding subsequent step as child
        ┌─┘
        ├─   0.472516s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.472527s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.472537s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(18)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.472590s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.472604s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.472616s   0ms DEBUG Processing edge: Query/a -(account)- Account/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.472642s   0ms DEBUG Processing edge: Account/a -(username)- String/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.472664s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.472675s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.472685s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(8) --> EdgeIndex(19)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.472724s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.472735s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.472746s   0ms DEBUG Processing edge: Query/a -(account)- Account/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.472760s   0ms DEBUG Processing edge: Account/a -(id)- ID/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.472777s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.472788s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.472798s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=3}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="account", arguments="id: \"a1\"", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.472938s   0ms DEBUG adding output field 'account' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=3, parent_fetch_step_index=1}
            └─┐process_entity_move_edge{edge="Account/a -(🔑🧩{id})- Account/b", parent_fetch_step_index=1}
              ├─   0.472997s   0ms DEBUG created a new fetch step [2] subgraph(b) type(Account) requirement() key({id}) in children of 1
              ├─   0.473006s   0ms DEBUG adding input requirement '{id}' to fetch step [2]
              ├─   0.473013s   0ms DEBUG adding __typename field to output for type 'Account'
              ├─   0.473021s   0ms DEBUG connecting fetch step to parent [1] -> [2]
              └─┐connect{parent=1, child=2}
              ┌─┘
              └─┐process_requirements_for_fetch_steps{count=1}
                └─┐process_noop_edge{}
                  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1, requiring_fetch_step_index=2}
                    └─┐process_plain_field_edge{parent_fetch_step_index=1, requiring_fetch_step_index=2, type_name="Account", field="id", leaf=true, list=false, response_path="account", fetch_path="account"}
                      ├─   0.473085s   0ms DEBUG connecting parent fetch step [1] to requiring fetch step [2]
                      └─┐connect{parent=1, child=2}
                      ┌─┘
                      ├─   0.473110s   0ms DEBUG adding output field 'id' to fetch step [1]
                      └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1, requiring_fetch_step_index=2}
                      ┌─┘
                    ┌─┘
                  ┌─┘
                ┌─┘
                └─┐connect{parent=1, child=2}
                ┌─┘
              ┌─┘
              └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
                └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Account", field="chats", leaf=false, list=true, response_path="account", fetch_path=""}
                  ├─   0.473197s   0ms DEBUG adding output field 'chats' to fetch step [2]
                  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
                    └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Chat", field="id", leaf=true, list=false, response_path="account.chats.@", fetch_path="chats.@"}
                      ├─   0.473237s   0ms DEBUG adding output field 'id' to fetch step [2]
                      └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=2}
                      ┌─┘
                    ┌─┘
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Account", field="username", leaf=true, list=false, response_path="account", fetch_path="account"}
              ├─   0.473326s   0ms DEBUG adding output field 'username' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Account", field="id", leaf=true, list=false, response_path="account", fetch_path="account"}
              ├─   0.473364s   0ms DEBUG adding output field 'id' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.473425s   0ms DEBUG Done
├─   0.473432s   0ms DEBUG found roots
├─   0.473437s   0ms DEBUG print graph
├─   0.473441s   0ms DEBUG Nodes:
│ [1] Query/a {} → {account(id: "a1"){__typename id username}} at $.
│ [2] Account/b {__typename id} → {chats{id}} at $.account
│ 
│ Tree:
│ [1]
│   [2]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐SequenceNode::execute{data=Null, representations=[]}
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="a"}
      └─┐execute{subgraph_name="a"}
        ├─   0.473809s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
        ├─   0.475677s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
  └─┐FlattenNode::execute{data=Object {"account": Object {"__typename": String("Account"), "id": String("a1"), "username": String("a1-username")}}, representations=[]}
    └─┐FetchNode::execute{data=Null, representations=[Object {"__typename": String("Account"), "id": String("a1"), "username": String("a1-username")}]}
      └─┐project_requires{requires_selections=[SelectionItem::Fragment { type_name: "Account", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }], entity=Object {"__typename": String("Account"), "id": String("a1"), "username": String("a1-username")}}
        └─┐entity_satisfies_type_condition{possible_types={"Node": ["Account", "Chat"]}, type_name="Account", type_condition="Account"}
        ┌─┘
        └─┐project_requires{requires_selections=[SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }], entity=Object {"__typename": String("Account"), "id": String("a1"), "username": String("a1-username")}}
          └─┐project_requires{requires_selections=[], entity=String("Account")}
          ┌─┘
          └─┐project_requires{requires_selections=[], entity=String("a1")}
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐execute{subgraph_name="b"}
        └─┐execute{subgraph_name="b"}
          ├─   0.476106s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
          ├─   0.478127s   2ms DEBUG pooling idle connection for ("http", localhost:4200)
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
┘
   0.478373s DEBUG execution result: ExecutionResult { data: Some(Object {"account": Object {"id": String("a1"), "username": String("a1-username"), "chats": Array [Object {"id": String("c1")}]}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Sequence"), "nodes": Array [Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{account(id: \"a1\"){__typename id username}}")}, Object {"kind": String("Flatten"), "path": Array [String("account")], "node": Object {"kind": String("Fetch"), "serviceName": String("b"), "operationKind": String("query"), "operation": String("query($representations:[_Any!]!){_entities(representations: $representations){...on Account{chats{id}}}}"), "requires": Array [Object {"kind": String("InlineFragment"), "typeCondition": String("Account"), "selections": Array [Object {"kind": String("Field"), "name": String("__typename")}, Object {"kind": String("Field"), "name": String("id")}]}]}}]}}}) }
