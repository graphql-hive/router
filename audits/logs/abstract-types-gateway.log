generating supergraph file for test...
running gateway...
   Compiling query-planner v0.0.1 (/home/ardatan/Guild/query-planner-rs/lib/query-planner)
   Compiling query-plan-executor v0.0.1 (/home/ardatan/Guild/query-planner-rs/lib/query-plan-executor)
   Compiling gateway v0.0.1 (/home/ardatan/Guild/query-planner-rs/bin/gateway)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 12.84s
     Running `target/debug/gateway audits/fed-audit-supergraph.graphql`
┐new_supergraph_state{}
└─┐build_map{}
  └─┐build_object_type{name="Book"}
    └─┐build_fields{fields_count=3}
    ┌─┘
  ┌─┘
  └─┐build_scalar_type{name="join__FieldSet"}
  ┌─┘
  └─┐build_enum_type{name="join__Graph"}
  ┌─┘
  └─┐build_scalar_type{name="link__Import"}
  ┌─┘
  └─┐build_enum_type{name="link__Purpose"}
  ┌─┘
  └─┐build_interface_type{name="Product"}
    └─┐build_fields{fields_count=1}
    ┌─┘
  ┌─┘
  └─┐build_object_type{name="Query"}
    └─┐build_fields{fields_count=1}
    ┌─┘
  ┌─┘
┌─┘
└─┐decompose_from_supergraph{graph_id="B"}
┌─┘
└─┐decompose_from_supergraph{graph_id="A"}
┌─┘
┘
┐graph_from_supergraph_state{}
└─┐build_graph{}
  ├─   0.006170s   0ms DEBUG Building graph for supergraph with 15 definitions
  └─┐build_root_nodes{}
    ├─   0.006236s   0ms DEBUG added root type for queries: Query
  ┌─┘
  └─┐link_root_edges{}
  ┌─┘
  └─┐build_field_edges{}
    ├─   0.006290s   0ms INFO [x] Creating owned field move edge 'Product.__typename/A' (type: String)
    ├─   0.006305s   0ms INFO [x] Creating field move edge 'Product.samePriceProduct/A' (type: Product)
    ├─   0.006312s   0ms INFO [x] Creating field move edge 'Product.samePriceProduct/A' (type: Product)
    ├─   0.006319s   0ms INFO [x] Creating owned field move edge 'Book.__typename/A' (type: String)
    ├─   0.006328s   0ms INFO [ ] Field 'Book.price/A' is external, skipping edge creation
    ├─   0.006333s   0ms INFO [x] Creating field move edge 'Book.samePriceProduct/A' (type: Book)
    ├─   0.006349s   0ms INFO [x] Creating field move edge 'Book.samePriceProduct/A' (type: Book)
    ├─   0.006359s   0ms INFO [x] Creating field move edge 'Book.id/A' (type: ID)
    ├─   0.006365s   0ms INFO [x] Creating field move edge 'Book.id/A' (type: ID)
    ├─   0.006371s   0ms INFO [x] Creating owned field move edge 'Book.__typename/B' (type: String)
    ├─   0.006381s   0ms INFO [x] Creating field move edge 'Book.price/B' (type: Float)
    ├─   0.006387s   0ms INFO [x] Creating field move edge 'Book.price/B' (type: Float)
    ├─   0.006393s   0ms INFO [ ] Field 'Book.samePriceProduct/B' does is not available in the subgraph, skipping edge creation (type: Book)
    ├─   0.006398s   0ms INFO [x] Creating field move edge 'Book.id/B' (type: ID)
    ├─   0.006404s   0ms INFO [x] Creating field move edge 'Book.id/B' (type: ID)
    ├─   0.006410s   0ms INFO [x] Creating owned field move edge 'Query.__typename/A' (type: String)
    ├─   0.006416s   0ms INFO [x] Creating field move edge 'Query.product/A' (type: Product)
    ├─   0.006421s   0ms INFO [x] Creating field move edge 'Query.product/A' (type: Product)
    ├─   0.006427s   0ms INFO [x] Creating owned field move edge 'Query.__typename/B' (type: String)
    ├─   0.006433s   0ms INFO [ ] Field 'Query.product/B' does is not available in the subgraph, skipping edge creation (type: Product)
  ┌─┘
  └─┐build_interface_implementation_edges{}
    ├─   0.006459s   0ms INFO Building interface implementation edge from 'Book/A' to 'Product/A'
  ┌─┘
  └─┐build_entity_reference_edges{}
    ├─   0.006550s   0ms INFO Creating self-referencing entity move edge in 'Book/A' via key 'id'
    ├─   0.006630s   0ms INFO Creating entity move edge from 'Book/A' to 'Book/B' via key 'id'
    ├─   0.006697s   0ms INFO Creating entity move edge from 'Book/B' to 'Book/A' via key 'id'
    ├─   0.006736s   0ms INFO Creating self-referencing entity move edge in 'Book/B' via key 'id'
  ┌─┘
  └─┐build_viewed_field_edges{}
    ├─   0.006806s   0ms INFO Creating viewed (#1) link for provided field 'Book.samePriceProduct/"A"' (type: Book)
    └─┐handle_viewed_selection_set{graph_id="A", view_id=1, parent_type_name="Book"}
      ├─   0.006832s   0ms INFO Upserting graph viewed node for 'Float.A'
      ├─   0.006839s   0ms INFO Creating viewed (#1) field edge for 'Book.price' (type: Float)
    ┌─┘
  ┌─┘
┌─┘
┘
   0.065170s INFO Starting server on http://localhost:4000
   0.066217s INFO starting 16 workers
   0.066264s INFO Actix runtime found; starting in Actix runtime
   0.066273s INFO starting service: "actix-web-service-0.0.0.0:4000", workers: 16, listening on: 0.0.0.0:4000
   0.271305s DEBUG original document: query ping {
  __typename
}

   0.271420s DEBUG normalized document: query ping {__typename}

   0.271440s DEBUG executable operation: query ping {__typename}
┐execute{}
┘
   0.271843s DEBUG execution result: ExecutionResult { data: Some(Object {"__typename": String("Query")}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan")}}) }
   0.361542s DEBUG original document: query {
  product {
    samePriceProduct {
      ... on Product {
        samePriceProduct {
          __typename
        }
      }
    }
  }
}

   0.361685s DEBUG normalized document: query{product{samePriceProduct{samePriceProduct{__typename}}}}

   0.361709s DEBUG executable operation: query{product{samePriceProduct{samePriceProduct{__typename}}}}
┐walk_operation{}
├─   0.362078s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="product", leaf=false}
  ├─   0.362126s   0ms DEBUG Trying to advance to: product{samePriceProduct{samePriceProduct{__typename}}} through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "product", selections: SelectionSet { items: [SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.362185s   0ms DEBUG checking edge Query/a -(product)- Product/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="product"}
        ├─   0.362229s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.362255s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(product)- Product/a
      ├─   0.362266s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(10)" }])
    ┌─┘
    ├─   0.362283s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "product", selections: SelectionSet { items: [SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.362316s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.362322s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.362334s   0ms DEBUG Indirect paths found: 0
    ├─   0.362341s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  ├─   0.362356s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="samePriceProduct", leaf=false}
  ├─   0.362376s   0ms DEBUG Trying to advance to: samePriceProduct{samePriceProduct{__typename}} through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a", current_cost=1001}
      ├─   0.362403s   0ms DEBUG checking edge Product/a -(samePriceProduct)- Product/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a", edge="samePriceProduct"}
        ├─   0.362418s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.362432s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a with edge Product/a -(samePriceProduct)- Product/a
      ├─   0.362439s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2)" }])
    ┌─┘
    ├─   0.362453s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a", current_cost=1001}
      ├─   0.362470s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.362476s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.362487s   0ms DEBUG Indirect paths found: 0
    ├─   0.362493s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a
  ┌─┘
  ├─   0.362504s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="samePriceProduct", leaf=false}
  ├─   0.362522s   0ms DEBUG Trying to advance to: samePriceProduct{__typename} through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a", current_cost=1002}
      ├─   0.362546s   0ms DEBUG checking edge Product/a -(samePriceProduct)- Product/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a", edge="samePriceProduct"}
        ├─   0.362561s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.362578s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a with edge Product/a -(samePriceProduct)- Product/a
      ├─   0.362587s   0ms INFO return=Ok([ { cost: 1003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2)" }])
    ┌─┘
    ├─   0.362600s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a", current_cost=1002}
      ├─   0.362619s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.362624s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.362634s   0ms DEBUG Indirect paths found: 0
    ├─   0.362642s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a
  ┌─┘
  ├─   0.362652s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="__typename", leaf=true}
  ├─   0.362670s   0ms DEBUG Trying to advance to: __typename through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a", current_cost=1003}
      ├─   0.362698s   0ms DEBUG checking edge Product/a -(__typename)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a", edge="__typename"}
        ├─   0.362714s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.362728s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a with edge Product/a -(__typename)- String/a
      ├─   0.362735s   0ms INFO return=Ok([ { cost: 1004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(1)" }])
    ┌─┘
    ├─   0.362750s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a", current_cost=1003}
      ├─   0.362768s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.362788s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.362806s   0ms DEBUG Indirect paths found: 0
    ├─   0.362819s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(1)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=5}
  ├─   0.362881s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=5}
    ├─   0.362896s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=5}
      ├─   0.362908s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=5}
        ├─   0.362919s   0ms DEBUG Processing edge: Product/a -(samePriceProduct)- Product/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=5}
          ├─   0.362948s   0ms DEBUG Processing edge: Product/a -(samePriceProduct)- Product/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=5}
            ├─   0.362963s   0ms DEBUG Processing edge: Product/a -(__typename)- String/a
            └─┐from_path_segment_sequences{current_index=5, total_segments=5}
            ┌─┘
            ├─   0.362986s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
          ├─   0.362999s   0ms DEBUG Adding subsequent step as child
        ┌─┘
        ├─   0.363010s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.363020s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.363030s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=1}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="product", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.363163s   0ms DEBUG adding output field 'product' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Product", field="samePriceProduct", leaf=false, list=false, response_path="product", fetch_path="product"}
              ├─   0.363201s   0ms DEBUG adding output field 'samePriceProduct' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Product", field="samePriceProduct", leaf=false, list=false, response_path="product.samePriceProduct", fetch_path="product.samePriceProduct"}
                  ├─   0.363232s   0ms DEBUG adding output field 'samePriceProduct' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
                    └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Product", field="__typename", leaf=true, list=false, response_path="product.samePriceProduct.samePriceProduct", fetch_path="product.samePriceProduct.samePriceProduct"}
                      ├─   0.363262s   0ms DEBUG adding output field '__typename' to fetch step [1]
                      └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                      ┌─┘
                    ┌─┘
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.363360s   0ms DEBUG Done
├─   0.363368s   0ms DEBUG found roots
├─   0.363373s   0ms DEBUG print graph
├─   0.363378s   0ms DEBUG Nodes:
│ [1] Query/a {} → {product{samePriceProduct{samePriceProduct{__typename}}}} at $.
│ 
│ Tree:
│ [1]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐FetchNode::execute{data=Null, representations=[]}
  └─┐execute{subgraph_name="a"}
    └─┐execute{subgraph_name="a"}
      ├─   0.363800s   0ms DEBUG starting new connection: http://localhost:4200/
      ├─   0.364144s   0ms DEBUG connecting to 127.0.0.1:4200
      ├─   0.364511s   0ms DEBUG connected to 127.0.0.1:4200
      ├─   0.380491s  16ms DEBUG pooling idle connection for ("http", localhost:4200)
    ┌─┘
  ┌─┘
┌─┘
┘
   0.380778s DEBUG execution result: ExecutionResult { data: Some(Object {"product": Object {"samePriceProduct": Object {"samePriceProduct": Object {"__typename": String("Book")}}}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{product{samePriceProduct{samePriceProduct{__typename}}}}")}}}) }
   0.387612s DEBUG original document: query {
  product {
    __typename
    samePriceProduct {
      __typename
      ... on Book {
        id
      }
      samePriceProduct {
        __typename
        ... on Book {
          id
        }
      }
    }
    ... on Book {
      __typename
      id
      price
      samePriceProduct {
        id
        price
      }
    }
  }
}

   0.387752s DEBUG normalized document: query{product{__typename samePriceProduct{__typename ...on Book{id} samePriceProduct{__typename ...on Book{id}}} ...on Book{__typename id price samePriceProduct{id price}}}}

   0.387766s DEBUG executable operation: query{product{__typename samePriceProduct{__typename ...on Book{id} samePriceProduct{__typename ...on Book{id}}} ...on Book{__typename id price samePriceProduct{id price}}}}
┐walk_operation{}
├─   0.388286s   0ms DEBUG operation is of type Query
└─┐process_field{field_name="product", leaf=false}
  ├─   0.388332s   0ms DEBUG Trying to advance to: product{__typename samePriceProduct{__typename ...on Book{id} samePriceProduct{__typename ...on Book{id}}} ...on Book{__typename id price samePriceProduct{id price}}} through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "product", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }, SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] } }] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "price", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "price", selections: SelectionSet { items: [] } }] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.388390s   0ms DEBUG checking edge Query/a -(product)- Product/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a", edge="product"}
        ├─   0.388409s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.388432s   0ms DEBUG Advancing path root(Query) -(a)- Query/a with edge Query/a -(product)- Product/a
      ├─   0.388442s   0ms INFO return=Ok([ { cost: 1001, egdes: "EdgeIndex(0) --> EdgeIndex(10)" }])
    ┌─┘
    ├─   0.388457s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "product", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }, SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] } }] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "price", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "price", selections: SelectionSet { items: [] } }] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a", current_cost=1000}
      ├─   0.388488s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.388494s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.388505s   0ms DEBUG Indirect paths found: 0
    ├─   0.388512s   0ms DEBUG advanced: root(Query) -(a)- Query/a
  ┌─┘
  ├─   0.388525s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_inline_fragment{type_condition="Book"}
  ├─   0.388549s   0ms DEBUG Processing inline fragment '{__typename id price samePriceProduct{id price}}' on type 'Book' through 1 possible paths
  ├─   0.388556s   0ms DEBUG Trying to advance to: ... on Book, through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a"}
    └─┐find_direct_paths{target=ConcreteType("Book"), path="root(Query) -(a)- Query/a -(product)- Product/a", current_cost=1001}
      ├─   0.388582s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a with edge Product/a -(🔮)- Book/a
      ├─   0.388590s   0ms INFO return=Ok([ { cost: 2001, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.388604s   0ms DEBUG Direct paths found: 1
    ├─   0.388611s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="__typename", leaf=true}
      ├─   0.388635s   0ms DEBUG Trying to advance to: __typename through 1 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
          ├─   0.388663s   0ms DEBUG checking edge Book/a -(__typename)- String/a
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="__typename"}
            ├─   0.388680s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.388700s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a with edge Book/a -(__typename)- String/a
          ├─   0.388708s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(3)" }])
        ┌─┘
        ├─   0.388737s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
          ├─   0.388769s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="id"}
            ├─   0.388790s   0ms DEBUG checking requirements {id} for edge 'Book/a -(🔑🧩{id})- Book/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
                  ├─   0.388828s   0ms DEBUG checking edge Book/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="id"}
                    ├─   0.388847s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.388864s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a with edge Book/a -(id)- ID/a
                  ├─   0.388874s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
                  ├─   0.388904s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
                  ├─   0.388912s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.388920s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
                  ├─   0.388927s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.388935s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.388941s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.388958s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.388975s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.388989s   0ms DEBUG Paths for id
            ├─   0.388998s   0ms DEBUG   Path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(id)- ID/a is valid
            ├─   0.389005s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.389037s   0ms DEBUG path Book/a -(id)- ID/a is valid
            ├─   0.389054s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.389073s   0ms DEBUG Advancing path to Book/a -(🔑🧩{id})- Book/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Book/a"}
            └─┐create_root_for_path_sequences{root_node="Book/a", segments_count=1}
              ├─   0.389111s   0ms DEBUG Building root query tree node: Book/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.389127s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.389151s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", current_cost=3003}
            ├─   0.389197s   0ms DEBUG checking edge Book/b -(__typename)- String/b
            └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", edge="__typename"}
              ├─   0.389216s   0ms INFO return=Ok(Some([]))
            ┌─┘
            ├─   0.389231s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b with edge Book/b -(__typename)- String/b
            ├─   0.389239s   0ms INFO return=Ok([ { cost: 3004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(6)" }])
          ┌─┘
          ├─   0.389255s   0ms DEBUG Found 1 direct paths to Book/a -(🔑🧩{id})- Book/b
          ├─   0.389266s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
          ├─   0.389272s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.389280s   0ms DEBUG Finished finding indirect paths, found total of 1
          ├─   0.389285s   0ms INFO return=Ok([ { cost: 3004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(6)" }])
        ┌─┘
        ├─   0.389300s   0ms DEBUG Indirect paths found: 1
        ├─   0.389311s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a
      ┌─┘
    ┌─┘
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.389339s   0ms DEBUG Trying to advance to: id through 1 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
          ├─   0.389364s   0ms DEBUG checking edge Book/a -(id)- ID/a
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="id"}
            ├─   0.389381s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.389395s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a with edge Book/a -(id)- ID/a
          ├─   0.389403s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }])
        ┌─┘
        ├─   0.389416s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
          ├─   0.389435s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="id"}
            ├─   0.389452s   0ms DEBUG checking requirements {id} for edge 'Book/a -(🔑🧩{id})- Book/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
                  ├─   0.389484s   0ms DEBUG checking edge Book/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="id"}
                    ├─   0.389501s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.389517s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a with edge Book/a -(id)- ID/a
                  ├─   0.389526s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
                  ├─   0.389554s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
                  ├─   0.389562s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.389569s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
                  ├─   0.389575s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.389582s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.389588s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.389603s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.389619s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.389632s   0ms DEBUG Paths for id
            ├─   0.389640s   0ms DEBUG   Path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(id)- ID/a is valid
            ├─   0.389646s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.389657s   0ms DEBUG path Book/a -(id)- ID/a is valid
            ├─   0.389664s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.389678s   0ms DEBUG Advancing path to Book/a -(🔑🧩{id})- Book/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Book/a"}
            └─┐create_root_for_path_sequences{root_node="Book/a", segments_count=1}
              ├─   0.389702s   0ms DEBUG Building root query tree node: Book/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.389715s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.389735s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", current_cost=3003}
            ├─   0.389781s   0ms DEBUG checking edge Book/b -(id)- ID/b
            └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", edge="id"}
              ├─   0.389799s   0ms INFO return=Ok(Some([]))
            ┌─┘
            ├─   0.389814s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b with edge Book/b -(id)- ID/b
            ├─   0.389822s   0ms INFO return=Ok([ { cost: 3004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(8)" }])
          ┌─┘
          ├─   0.389837s   0ms DEBUG Found 1 direct paths to Book/a -(🔑🧩{id})- Book/b
          ├─   0.389844s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
          ├─   0.389850s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.389857s   0ms DEBUG Finished finding indirect paths, found total of 1
          ├─   0.389862s   0ms INFO return=Ok([ { cost: 3004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(8)" }])
        ┌─┘
        ├─   0.389875s   0ms DEBUG Indirect paths found: 1
        ├─   0.389883s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a
      ┌─┘
    ┌─┘
    └─┐process_field{field_name="price", leaf=true}
      ├─   0.389909s   0ms DEBUG Trying to advance to: price through 1 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "price", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
          ├─   0.389961s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.389976s   0ms DEBUG Direct paths found: 0
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "price", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
          ├─   0.389995s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="id"}
            ├─   0.390013s   0ms DEBUG checking requirements {id} for edge 'Book/a -(🔑🧩{id})- Book/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
                  ├─   0.390045s   0ms DEBUG checking edge Book/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="id"}
                    ├─   0.390075s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.390100s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a with edge Book/a -(id)- ID/a
                  ├─   0.390111s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
                  ├─   0.390144s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
                  ├─   0.390151s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.390159s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
                  ├─   0.390165s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.390172s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.390178s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.390194s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.390218s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.390232s   0ms DEBUG Paths for id
            ├─   0.390240s   0ms DEBUG   Path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(id)- ID/a is valid
            ├─   0.390246s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.390257s   0ms DEBUG path Book/a -(id)- ID/a is valid
            ├─   0.390263s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.390276s   0ms DEBUG Advancing path to Book/a -(🔑🧩{id})- Book/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Book/a"}
            └─┐create_root_for_path_sequences{root_node="Book/a", segments_count=1}
              ├─   0.390301s   0ms DEBUG Building root query tree node: Book/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.390315s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.390335s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "price", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", current_cost=3003}
            ├─   0.390393s   0ms DEBUG checking edge Book/b -(price)- Float/b
            └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", edge="price"}
              ├─   0.390420s   0ms INFO return=Ok(Some([]))
            ┌─┘
            ├─   0.390439s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b with edge Book/b -(price)- Float/b
            ├─   0.390447s   0ms INFO return=Ok([ { cost: 3004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(7)" }])
          ┌─┘
          ├─   0.390463s   0ms DEBUG Found 1 direct paths to Book/a -(🔑🧩{id})- Book/b
          ├─   0.390471s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
          ├─   0.390477s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.390484s   0ms DEBUG Finished finding indirect paths, found total of 1
          ├─   0.390489s   0ms INFO return=Ok([ { cost: 3004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(7)" }])
        ┌─┘
        ├─   0.390503s   0ms DEBUG Indirect paths found: 1
        ├─   0.390511s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a
      ┌─┘
    ┌─┘
    └─┐process_field{field_name="samePriceProduct", leaf=false}
      ├─   0.390537s   0ms DEBUG Trying to advance to: samePriceProduct{id price} through 1 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "price", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
          ├─   0.390565s   0ms DEBUG checking edge Book/a -(samePriceProduct)- Book/a/1
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="samePriceProduct"}
            ├─   0.390581s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.390595s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a with edge Book/a -(samePriceProduct)- Book/a/1
          ├─   0.390603s   0ms DEBUG checking edge Book/a -(samePriceProduct)- Book/a
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="samePriceProduct"}
            ├─   0.390619s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.390632s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a with edge Book/a -(samePriceProduct)- Book/a
          ├─   0.390640s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(17)" },  { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4)" }])
        ┌─┘
        ├─   0.390655s   0ms DEBUG Direct paths found: 2
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "price", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
          ├─   0.390675s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="id"}
            ├─   0.390692s   0ms DEBUG checking requirements {id} for edge 'Book/a -(🔑🧩{id})- Book/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
                  ├─   0.390724s   0ms DEBUG checking edge Book/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", edge="id"}
                    ├─   0.390741s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.390757s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a with edge Book/a -(id)- ID/a
                  ├─   0.390766s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a", current_cost=2001}
                  ├─   0.390800s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
                  ├─   0.390807s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.390814s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
                  ├─   0.390820s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.390827s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.390833s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.390848s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.390868s   0ms INFO return=Ok(Some(([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.390882s   0ms DEBUG Paths for id
            ├─   0.390890s   0ms DEBUG   Path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(id)- ID/a is valid
            ├─   0.390896s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.390907s   0ms DEBUG path Book/a -(id)- ID/a is valid
            ├─   0.390913s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.390927s   0ms DEBUG Advancing path to Book/a -(🔑🧩{id})- Book/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Book/a"}
            └─┐create_root_for_path_sequences{root_node="Book/a", segments_count=1}
              ├─   0.390951s   0ms DEBUG Building root query tree node: Book/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.390965s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.390986s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "price", selections: SelectionSet { items: [] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", current_cost=3003}
            ├─   0.391029s   0ms INFO return=Ok([])
          ┌─┘
          ├─   0.391043s   0ms DEBUG No direct paths found
          ├─   0.391053s   0ms DEBUG going deeper
          ├─   0.391061s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
          ├─   0.391066s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.391073s   0ms DEBUG Exploring edge Book/b -(🔑🧩{id})- Book/b
          ├─   0.391078s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
          ├─   0.391084s   0ms DEBUG Exploring edge Book/b -(🔑🧩{id})- Book/a
          ├─   0.391090s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.391097s   0ms DEBUG Finished finding indirect paths, found total of 0
          ├─   0.391103s   0ms INFO return=Ok([])
        ┌─┘
        ├─   0.391114s   0ms DEBUG Indirect paths found: 0
        ├─   0.391122s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a
      ┌─┘
      ├─   0.391135s   0ms DEBUG Found 2 paths
    ┌─┘
  ┌─┘
┌─┘
└─┐process_field{field_name="price", leaf=true}
  ├─   0.391165s   0ms DEBUG Trying to advance to: price through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a/1"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "price", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a/1", current_cost=2002}
      ├─   0.391211s   0ms DEBUG checking edge Book/a/1 -(price)- Float/a/1
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a/1", edge="price"}
        ├─   0.391232s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.391249s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a/1 with edge Book/a/1 -(price)- Float/a/1
      ├─   0.391257s   0ms INFO return=Ok([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(17) --> EdgeIndex(18)" }])
    ┌─┘
    ├─   0.391271s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "price", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a/1", current_cost=2002}
      ├─   0.391292s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.391297s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.391308s   0ms DEBUG Indirect paths found: 0
    ├─   0.391315s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a/1
  ┌─┘
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "price", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", current_cost=2002}
      ├─   0.391345s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.391355s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "price", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", current_cost=2002}
      ├─   0.391372s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", edge="id"}
        ├─   0.391388s   0ms DEBUG checking requirements {id} for edge 'Book/a -(🔑🧩{id})- Book/b'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", current_cost=2002}
              ├─   0.391419s   0ms DEBUG checking edge Book/a -(id)- ID/a
              └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", edge="id"}
                ├─   0.391436s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.391452s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a with edge Book/a -(id)- ID/a
              ├─   0.391460s   0ms INFO return=Ok([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(5)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", current_cost=2002}
              ├─   0.391488s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
              ├─   0.391495s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
              ├─   0.391502s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
              ├─   0.391508s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.391515s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.391520s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.391534s   0ms INFO return=Ok(Some(([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(5)" }], [])))
          ┌─┘
          ├─   0.391549s   0ms INFO return=Ok(Some(([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(5)" }], [])))
        ┌─┘
        ├─   0.391563s   0ms DEBUG Paths for id
        ├─   0.391571s   0ms DEBUG   Path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a -(id)- ID/a is valid
        ├─   0.391576s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.391587s   0ms DEBUG path Book/a -(id)- ID/a is valid
        ├─   0.391593s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
      ┌─┘
      ├─   0.391606s   0ms DEBUG Advancing path to Book/a -(🔑🧩{id})- Book/b
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Book/a"}
        └─┐create_root_for_path_sequences{root_node="Book/a", segments_count=1}
          ├─   0.391628s   0ms DEBUG Building root query tree node: Book/a
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.391641s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.391660s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "price", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a -(🔑🧩{id})- Book/b", current_cost=3004}
        ├─   0.391700s   0ms DEBUG checking edge Book/b -(price)- Float/b
        └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a -(🔑🧩{id})- Book/b", edge="price"}
          ├─   0.391745s   0ms INFO return=Ok(Some([]))
        ┌─┘
        ├─   0.391770s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a -(🔑🧩{id})- Book/b with edge Book/b -(price)- Float/b
        ├─   0.391779s   0ms INFO return=Ok([ { cost: 3005, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(14) --> EdgeIndex(7)" }])
      ┌─┘
      ├─   0.391795s   0ms DEBUG Found 1 direct paths to Book/a -(🔑🧩{id})- Book/b
      ├─   0.391803s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
      ├─   0.391808s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.391816s   0ms DEBUG Finished finding indirect paths, found total of 1
      ├─   0.391821s   0ms INFO return=Ok([ { cost: 3005, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(14) --> EdgeIndex(7)" }])
    ┌─┘
    ├─   0.391834s   0ms DEBUG Indirect paths found: 1
    ├─   0.391843s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a
  ┌─┘
┌─┘
└─┐process_field{field_name="id", leaf=true}
  ├─   0.391870s   0ms DEBUG Trying to advance to: id through 2 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a/1"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a/1", current_cost=2002}
      ├─   0.391896s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.391907s   0ms DEBUG Direct paths found: 0
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a/1", current_cost=2002}
      ├─   0.391929s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.391934s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.391944s   0ms DEBUG Indirect paths found: 0
    ├─   0.391954s   0ms WARN failed to advance: root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a/1
  ┌─┘
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", current_cost=2002}
      ├─   0.391988s   0ms DEBUG checking edge Book/a -(id)- ID/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", edge="id"}
        ├─   0.392004s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.392018s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a with edge Book/a -(id)- ID/a
      ├─   0.392026s   0ms INFO return=Ok([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(5)" }])
    ┌─┘
    ├─   0.392039s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", current_cost=2002}
      ├─   0.392057s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", edge="id"}
        ├─   0.392074s   0ms DEBUG checking requirements {id} for edge 'Book/a -(🔑🧩{id})- Book/b'
        └─┐validate_field_requirement{}
          └─┐validate_field_requirement{}
            └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", current_cost=2002}
              ├─   0.392104s   0ms DEBUG checking edge Book/a -(id)- ID/a
              └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", edge="id"}
                ├─   0.392121s   0ms INFO return=Ok(Some([]))
              ┌─┘
              ├─   0.392137s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a with edge Book/a -(id)- ID/a
              ├─   0.392145s   0ms INFO return=Ok([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(5)" }])
            ┌─┘
            └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a", current_cost=2002}
              ├─   0.392174s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
              ├─   0.392181s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
              ├─   0.392188s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
              ├─   0.392193s   0ms DEBUG Ignoring. We would go back to the same graph
              ├─   0.392200s   0ms DEBUG Finished finding indirect paths, found total of 0
              ├─   0.392206s   0ms INFO return=Ok([])
            ┌─┘
            ├─   0.392220s   0ms INFO return=Ok(Some(([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(5)" }], [])))
          ┌─┘
          ├─   0.392235s   0ms INFO return=Ok(Some(([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(5)" }], [])))
        ┌─┘
        ├─   0.392249s   0ms DEBUG Paths for id
        ├─   0.392257s   0ms DEBUG   Path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a -(id)- ID/a is valid
        ├─   0.392262s   0ms DEBUG Found 1 best paths for this leaf requirement
        ├─   0.392273s   0ms DEBUG path Book/a -(id)- ID/a is valid
        ├─   0.392278s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
      ┌─┘
      ├─   0.392291s   0ms DEBUG Advancing path to Book/a -(🔑🧩{id})- Book/b
      └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Book/a"}
        └─┐create_root_for_path_sequences{root_node="Book/a", segments_count=1}
          ├─   0.392314s   0ms DEBUG Building root query tree node: Book/a
          └─┐from_path_segment_sequences{current_index=0, total_segments=1}
            ├─   0.392328s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
            └─┐from_path_segment_sequences{current_index=1, total_segments=1}
            ┌─┘
            ├─   0.392347s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a -(🔑🧩{id})- Book/b", current_cost=3004}
        ├─   0.392387s   0ms DEBUG checking edge Book/b -(id)- ID/b
        └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a -(🔑🧩{id})- Book/b", edge="id"}
          ├─   0.392434s   0ms INFO return=Ok(Some([]))
        ┌─┘
        ├─   0.392459s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a -(🔑🧩{id})- Book/b with edge Book/b -(id)- ID/b
        ├─   0.392469s   0ms INFO return=Ok([ { cost: 3005, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(14) --> EdgeIndex(8)" }])
      ┌─┘
      ├─   0.392484s   0ms DEBUG Found 1 direct paths to Book/a -(🔑🧩{id})- Book/b
      ├─   0.392493s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
      ├─   0.392498s   0ms DEBUG Ignoring. We would go back to the same graph
      ├─   0.392505s   0ms DEBUG Finished finding indirect paths, found total of 1
      ├─   0.392510s   0ms INFO return=Ok([ { cost: 3005, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(14) --> EdgeIndex(8)" }])
    ┌─┘
    ├─   0.392524s   0ms DEBUG Indirect paths found: 1
    ├─   0.392532s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(🔮)- Book/a -(samePriceProduct)- Book/a
  ┌─┘
┌─┘
└─┐process_field{field_name="samePriceProduct", leaf=false}
  ├─   0.392560s   0ms DEBUG Trying to advance to: samePriceProduct{__typename ...on Book{id} samePriceProduct{__typename ...on Book{id}}} through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }, SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a", current_cost=1001}
      ├─   0.392588s   0ms DEBUG checking edge Product/a -(samePriceProduct)- Product/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a", edge="samePriceProduct"}
        ├─   0.392603s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.392616s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a with edge Product/a -(samePriceProduct)- Product/a
      ├─   0.392623s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2)" }])
    ┌─┘
    ├─   0.392636s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }, SelectionItem::Field { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a", current_cost=1001}
      ├─   0.392655s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.392661s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.392671s   0ms DEBUG Indirect paths found: 0
    ├─   0.392678s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a
  ┌─┘
  ├─   0.392689s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_field{field_name="samePriceProduct", leaf=false}
  ├─   0.392706s   0ms DEBUG Trying to advance to: samePriceProduct{__typename ...on Book{id}} through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a", current_cost=1002}
      ├─   0.392731s   0ms DEBUG checking edge Product/a -(samePriceProduct)- Product/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a", edge="samePriceProduct"}
        ├─   0.392746s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.392760s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a with edge Product/a -(samePriceProduct)- Product/a
      ├─   0.392768s   0ms INFO return=Ok([ { cost: 1003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2)" }])
    ┌─┘
    ├─   0.392781s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "samePriceProduct", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a", current_cost=1002}
      ├─   0.392800s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.392805s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.392815s   0ms DEBUG Indirect paths found: 0
    ├─   0.392822s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a
  ┌─┘
  ├─   0.392833s   0ms DEBUG Found 1 paths
┌─┘
└─┐process_inline_fragment{type_condition="Book"}
  ├─   0.392851s   0ms DEBUG Processing inline fragment '{id}' on type 'Book' through 1 possible paths
  ├─   0.392857s   0ms DEBUG Trying to advance to: ... on Book, through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a"}
    └─┐find_direct_paths{target=ConcreteType("Book"), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a", current_cost=1003}
      ├─   0.392883s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a with edge Product/a -(🔮)- Book/a
      ├─   0.392890s   0ms INFO return=Ok([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.392904s   0ms DEBUG Direct paths found: 1
    ├─   0.392911s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.392933s   0ms DEBUG Trying to advance to: id through 1 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", current_cost=2003}
          ├─   0.392978s   0ms DEBUG checking edge Book/a -(id)- ID/a
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", edge="id"}
            ├─   0.393009s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.393027s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a with edge Book/a -(id)- ID/a
          ├─   0.393049s   0ms INFO return=Ok([ { cost: 2004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(5)" }])
        ┌─┘
        ├─   0.393064s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", current_cost=2003}
          ├─   0.393097s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", edge="id"}
            ├─   0.393115s   0ms DEBUG checking requirements {id} for edge 'Book/a -(🔑🧩{id})- Book/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", current_cost=2003}
                  ├─   0.393152s   0ms DEBUG checking edge Book/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", edge="id"}
                    ├─   0.393171s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.393190s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a with edge Book/a -(id)- ID/a
                  ├─   0.393198s   0ms INFO return=Ok([ { cost: 2004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", current_cost=2003}
                  ├─   0.393231s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
                  ├─   0.393239s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.393246s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
                  ├─   0.393252s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.393260s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.393267s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.393282s   0ms INFO return=Ok(Some(([ { cost: 2004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.393299s   0ms INFO return=Ok(Some(([ { cost: 2004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.393314s   0ms DEBUG Paths for id
            ├─   0.393327s   0ms DEBUG   Path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a -(id)- ID/a is valid
            ├─   0.393334s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.393346s   0ms DEBUG path Book/a -(id)- ID/a is valid
            ├─   0.393352s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.393395s   0ms DEBUG Advancing path to Book/a -(🔑🧩{id})- Book/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Book/a"}
            └─┐create_root_for_path_sequences{root_node="Book/a", segments_count=1}
              ├─   0.393428s   0ms DEBUG Building root query tree node: Book/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.393443s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.393464s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", current_cost=3005}
            ├─   0.393511s   0ms DEBUG checking edge Book/b -(id)- ID/b
            └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", edge="id"}
              ├─   0.393533s   0ms INFO return=Ok(Some([]))
            ┌─┘
            ├─   0.393551s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b with edge Book/b -(id)- ID/b
            ├─   0.393559s   0ms INFO return=Ok([ { cost: 3006, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(8)" }])
          ┌─┘
          ├─   0.393594s   0ms DEBUG Found 1 direct paths to Book/a -(🔑🧩{id})- Book/b
          ├─   0.393606s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
          ├─   0.393611s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.393619s   0ms DEBUG Finished finding indirect paths, found total of 1
          ├─   0.393626s   0ms INFO return=Ok([ { cost: 3006, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(8)" }])
        ┌─┘
        ├─   0.393650s   0ms DEBUG Indirect paths found: 1
        ├─   0.393660s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
└─┐process_field{field_name="__typename", leaf=true}
  ├─   0.393700s   0ms DEBUG Trying to advance to: __typename through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a", current_cost=1003}
      ├─   0.393727s   0ms DEBUG checking edge Product/a -(__typename)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a", edge="__typename"}
        ├─   0.393743s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.393758s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a with edge Product/a -(__typename)- String/a
      ├─   0.393772s   0ms INFO return=Ok([ { cost: 1004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(1)" }])
    ┌─┘
    ├─   0.393785s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a", current_cost=1003}
      ├─   0.393804s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.393809s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.393820s   0ms DEBUG Indirect paths found: 0
    ├─   0.393827s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(samePriceProduct)- Product/a
  ┌─┘
┌─┘
└─┐process_inline_fragment{type_condition="Book"}
  ├─   0.393851s   0ms DEBUG Processing inline fragment '{id}' on type 'Book' through 1 possible paths
  ├─   0.393856s   0ms DEBUG Trying to advance to: ... on Book, through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a"}
    └─┐find_direct_paths{target=ConcreteType("Book"), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a", current_cost=1002}
      ├─   0.393881s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a with edge Product/a -(🔮)- Book/a
      ├─   0.393889s   0ms INFO return=Ok([ { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(12)" }])
    ┌─┘
    ├─   0.393903s   0ms DEBUG Direct paths found: 1
    ├─   0.393909s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a
  ┌─┘
  └─┐process_selection_set{}
    └─┐process_field{field_name="id", leaf=true}
      ├─   0.393932s   0ms DEBUG Trying to advance to: id through 1 possible paths
      └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a"}
        └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", current_cost=2002}
          ├─   0.393958s   0ms DEBUG checking edge Book/a -(id)- ID/a
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", edge="id"}
            ├─   0.393975s   0ms INFO return=Ok(Some([]))
          ┌─┘
          ├─   0.393990s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a with edge Book/a -(id)- ID/a
          ├─   0.393997s   0ms INFO return=Ok([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(5)" }])
        ┌─┘
        ├─   0.394011s   0ms DEBUG Direct paths found: 1
        └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", current_cost=2002}
          ├─   0.394030s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
          └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", edge="id"}
            ├─   0.394047s   0ms DEBUG checking requirements {id} for edge 'Book/a -(🔑🧩{id})- Book/b'
            └─┐validate_field_requirement{}
              └─┐validate_field_requirement{}
                └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", current_cost=2002}
                  ├─   0.394080s   0ms DEBUG checking edge Book/a -(id)- ID/a
                  └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", edge="id"}
                    ├─   0.394098s   0ms INFO return=Ok(Some([]))
                  ┌─┘
                  ├─   0.394115s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a with edge Book/a -(id)- ID/a
                  ├─   0.394124s   0ms INFO return=Ok([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(5)" }])
                ┌─┘
                └─┐find_indirect_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a", current_cost=2002}
                  ├─   0.394154s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/b
                  ├─   0.394161s   0ms DEBUG Ignoring, graph is excluded and already visited (current: b, visited: {"b"})
                  ├─   0.394168s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
                  ├─   0.394175s   0ms DEBUG Ignoring. We would go back to the same graph
                  ├─   0.394182s   0ms DEBUG Finished finding indirect paths, found total of 0
                  ├─   0.394188s   0ms INFO return=Ok([])
                ┌─┘
                ├─   0.394204s   0ms INFO return=Ok(Some(([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
              ┌─┘
              ├─   0.394220s   0ms INFO return=Ok(Some(([ { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(5)" }], [])))
            ┌─┘
            ├─   0.394234s   0ms DEBUG Paths for id
            ├─   0.394243s   0ms DEBUG   Path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a -(id)- ID/a is valid
            ├─   0.394249s   0ms DEBUG Found 1 best paths for this leaf requirement
            ├─   0.394260s   0ms DEBUG path Book/a -(id)- ID/a is valid
            ├─   0.394266s   0ms INFO return=Ok(Some([ { cost: 1, egdes: "EdgeIndex(5)" }]))
          ┌─┘
          ├─   0.394280s   0ms DEBUG Advancing path to Book/a -(🔑🧩{id})- Book/b
          └─┐from_path{path= { cost: 1, egdes: "EdgeIndex(5)" }, root_node="Book/a"}
            └─┐create_root_for_path_sequences{root_node="Book/a", segments_count=1}
              ├─   0.394305s   0ms DEBUG Building root query tree node: Book/a
              └─┐from_path_segment_sequences{current_index=0, total_segments=1}
                ├─   0.394319s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
                └─┐from_path_segment_sequences{current_index=1, total_segments=1}
                ┌─┘
                ├─   0.394339s   0ms DEBUG No subsequent steps (leaf or end of path)
              ┌─┘
            ┌─┘
          ┌─┘
          └─┐find_direct_paths{target=Field(FieldSelection { name: "id", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", current_cost=3004}
            ├─   0.394382s   0ms DEBUG checking edge Book/b -(id)- ID/b
            └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b", edge="id"}
              ├─   0.394401s   0ms INFO return=Ok(Some([]))
            ┌─┘
            ├─   0.394417s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a -(🔑🧩{id})- Book/b with edge Book/b -(id)- ID/b
            ├─   0.394425s   0ms INFO return=Ok([ { cost: 3005, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(8)" }])
          ┌─┘
          ├─   0.394440s   0ms DEBUG Found 1 direct paths to Book/a -(🔑🧩{id})- Book/b
          ├─   0.394448s   0ms DEBUG Exploring edge Book/a -(🔑🧩{id})- Book/a
          ├─   0.394454s   0ms DEBUG Ignoring. We would go back to the same graph
          ├─   0.394461s   0ms DEBUG Finished finding indirect paths, found total of 1
          ├─   0.394467s   0ms INFO return=Ok([ { cost: 3005, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(8)" }])
        ┌─┘
        ├─   0.394481s   0ms DEBUG Indirect paths found: 1
        ├─   0.394490s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a -(🔮)- Book/a
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
└─┐process_field{field_name="__typename", leaf=true}
  ├─   0.394526s   0ms DEBUG Trying to advance to: __typename through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a", current_cost=1002}
      ├─   0.394550s   0ms DEBUG checking edge Product/a -(__typename)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a", edge="__typename"}
        ├─   0.394565s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.394579s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a with edge Product/a -(__typename)- String/a
      ├─   0.394586s   0ms INFO return=Ok([ { cost: 1003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(1)" }])
    ┌─┘
    ├─   0.394599s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a", current_cost=1002}
      ├─   0.394617s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.394622s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.394633s   0ms DEBUG Indirect paths found: 0
    ├─   0.394640s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a -(samePriceProduct)- Product/a
  ┌─┘
┌─┘
└─┐process_field{field_name="__typename", leaf=true}
  ├─   0.394663s   0ms DEBUG Trying to advance to: __typename through 1 possible paths
  └─┐explore_path{path="root(Query) -(a)- Query/a -(product)- Product/a"}
    └─┐find_direct_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a", current_cost=1001}
      ├─   0.394685s   0ms DEBUG checking edge Product/a -(__typename)- String/a
      └─┐can_satisfy_edge{path="root(Query) -(a)- Query/a -(product)- Product/a", edge="__typename"}
        ├─   0.394700s   0ms INFO return=Ok(Some([]))
      ┌─┘
      ├─   0.394713s   0ms DEBUG Advancing path root(Query) -(a)- Query/a -(product)- Product/a with edge Product/a -(__typename)- String/a
      ├─   0.394720s   0ms INFO return=Ok([ { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(1)" }])
    ┌─┘
    ├─   0.394732s   0ms DEBUG Direct paths found: 1
    └─┐find_indirect_paths{target=Field(FieldSelection { name: "__typename", selections: SelectionSet { items: [] }, alias: None, arguments: None, skip_if: None, include_if: None }), path="root(Query) -(a)- Query/a -(product)- Product/a", current_cost=1001}
      ├─   0.394749s   0ms DEBUG Finished finding indirect paths, found total of 0
      ├─   0.394754s   0ms INFO return=Ok([])
    ┌─┘
    ├─   0.394765s   0ms DEBUG Indirect paths found: 0
    ├─   0.394771s   0ms DEBUG advanced: root(Query) -(a)- Query/a -(product)- Product/a
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(3)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.394809s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.394820s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.394831s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.394850s   0ms DEBUG Processing edge: Product/a -(🔮)- Book/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.394862s   0ms DEBUG Processing edge: Book/a -(__typename)- String/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.394881s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.394892s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.394902s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.394912s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.394945s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.394955s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.394966s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.394977s   0ms DEBUG Processing edge: Product/a -(🔮)- Book/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.394989s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.395007s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.395018s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.395034s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.395044s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 3004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(14) --> EdgeIndex(7)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=5}
  ├─   0.395078s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=5}
    ├─   0.395089s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=5}
      ├─   0.395100s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=5}
        ├─   0.395112s   0ms DEBUG Processing edge: Product/a -(🔮)- Book/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=5}
          ├─   0.395124s   0ms DEBUG Processing edge: Book/a -(🔑🧩{id})- Book/b
          └─┐from_path_segment_sequences{current_index=4, total_segments=5}
            ├─   0.395136s   0ms DEBUG Processing edge: Book/b -(price)- Float/b
            └─┐from_path_segment_sequences{current_index=5, total_segments=5}
            ┌─┘
            ├─   0.395156s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
          ├─   0.395167s   0ms DEBUG Adding subsequent step as child
        ┌─┘
        ├─   0.395178s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.395196s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.395205s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(17) --> EdgeIndex(18)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=5}
  ├─   0.395237s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=5}
    ├─   0.395248s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=5}
      ├─   0.395259s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=5}
        ├─   0.395270s   0ms DEBUG Processing edge: Product/a -(🔮)- Book/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=5}
          ├─   0.395282s   0ms DEBUG Processing edge: Book/a -(samePriceProduct)- Book/a/1
          └─┐from_path_segment_sequences{current_index=4, total_segments=5}
            ├─   0.395298s   0ms DEBUG Processing edge: Book/a/1 -(price)- Float/a/1
            └─┐from_path_segment_sequences{current_index=5, total_segments=5}
            ┌─┘
            ├─   0.395317s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
          ├─   0.395329s   0ms DEBUG Adding subsequent step as child
        ┌─┘
        ├─   0.395339s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.395349s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.395359s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(12) --> EdgeIndex(4) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=5}
  ├─   0.395391s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=5}
    ├─   0.395402s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=5}
      ├─   0.395413s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=5}
        ├─   0.395424s   0ms DEBUG Processing edge: Product/a -(🔮)- Book/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=5}
          ├─   0.395436s   0ms DEBUG Processing edge: Book/a -(samePriceProduct)- Book/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=5}
            ├─   0.395448s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
            └─┐from_path_segment_sequences{current_index=5, total_segments=5}
            ┌─┘
            ├─   0.395467s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
          ├─   0.395478s   0ms DEBUG Adding subsequent step as child
        ┌─┘
        ├─   0.395489s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.395499s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.395508s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=6}
  ├─   0.395562s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=6}
    ├─   0.395591s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=6}
      ├─   0.395604s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=6}
        ├─   0.395630s   0ms DEBUG Processing edge: Product/a -(samePriceProduct)- Product/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=6}
          ├─   0.395644s   0ms DEBUG Processing edge: Product/a -(samePriceProduct)- Product/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=6}
            ├─   0.395656s   0ms DEBUG Processing edge: Product/a -(🔮)- Book/a
            └─┐from_path_segment_sequences{current_index=5, total_segments=6}
              ├─   0.395669s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
              └─┐from_path_segment_sequences{current_index=6, total_segments=6}
              ┌─┘
              ├─   0.395692s   0ms DEBUG No subsequent steps (leaf or end of path)
            ┌─┘
            ├─   0.395704s   0ms DEBUG Adding subsequent step as child
          ┌─┘
          ├─   0.395715s   0ms DEBUG Adding subsequent step as child
        ┌─┘
        ├─   0.395726s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.395736s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.395746s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1004, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(2) --> EdgeIndex(1)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=5}
  ├─   0.395807s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=5}
    ├─   0.395820s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=5}
      ├─   0.395832s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=5}
        ├─   0.395843s   0ms DEBUG Processing edge: Product/a -(samePriceProduct)- Product/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=5}
          ├─   0.395855s   0ms DEBUG Processing edge: Product/a -(samePriceProduct)- Product/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=5}
            ├─   0.395867s   0ms DEBUG Processing edge: Product/a -(__typename)- String/a
            └─┐from_path_segment_sequences{current_index=5, total_segments=5}
            ┌─┘
            ├─   0.395886s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
          ├─   0.395898s   0ms DEBUG Adding subsequent step as child
        ┌─┘
        ├─   0.395909s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.395919s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.395929s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 2003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(12) --> EdgeIndex(5)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=5}
  ├─   0.395976s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=5}
    ├─   0.395993s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=5}
      ├─   0.396005s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=5}
        ├─   0.396016s   0ms DEBUG Processing edge: Product/a -(samePriceProduct)- Product/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=5}
          ├─   0.396028s   0ms DEBUG Processing edge: Product/a -(🔮)- Book/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=5}
            ├─   0.396040s   0ms DEBUG Processing edge: Book/a -(id)- ID/a
            └─┐from_path_segment_sequences{current_index=5, total_segments=5}
            ┌─┘
            ├─   0.396061s   0ms DEBUG No subsequent steps (leaf or end of path)
          ┌─┘
          ├─   0.396073s   0ms DEBUG Adding subsequent step as child
        ┌─┘
        ├─   0.396084s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.396094s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.396104s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1003, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(2) --> EdgeIndex(1)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=4}
  ├─   0.396139s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=4}
    ├─   0.396150s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=4}
      ├─   0.396161s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=4}
        ├─   0.396172s   0ms DEBUG Processing edge: Product/a -(samePriceProduct)- Product/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=4}
          ├─   0.396184s   0ms DEBUG Processing edge: Product/a -(__typename)- String/a
          └─┐from_path_segment_sequences{current_index=4, total_segments=4}
          ┌─┘
          ├─   0.396201s   0ms DEBUG No subsequent steps (leaf or end of path)
        ┌─┘
        ├─   0.396212s   0ms DEBUG Adding subsequent step as child
      ┌─┘
      ├─   0.396223s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.396232s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐from_path{path= { cost: 1002, egdes: "EdgeIndex(0) --> EdgeIndex(10) --> EdgeIndex(1)" }, root_node="root(Query)"}
└─┐create_root_for_path_sequences{root_node="root(Query)", segments_count=3}
  ├─   0.396263s   0ms DEBUG Building root query tree node: root(Query)
  └─┐from_path_segment_sequences{current_index=0, total_segments=3}
    ├─   0.396274s   0ms DEBUG Processing edge: root(Query) -(a)- Query/a
    └─┐from_path_segment_sequences{current_index=1, total_segments=3}
      ├─   0.396285s   0ms DEBUG Processing edge: Query/a -(product)- Product/a
      └─┐from_path_segment_sequences{current_index=2, total_segments=3}
        ├─   0.396296s   0ms DEBUG Processing edge: Product/a -(__typename)- String/a
        └─┐from_path_segment_sequences{current_index=3, total_segments=3}
        ┌─┘
        ├─   0.396313s   0ms DEBUG No subsequent steps (leaf or end of path)
      ┌─┘
      ├─   0.396324s   0ms DEBUG Adding subsequent step as child
    ┌─┘
    ├─   0.396334s   0ms DEBUG Adding subsequent step as child
  ┌─┘
┌─┘
┘
┐merge_trees{tree_count=10}
┘
┐build_fetch_graph_from_query_tree{requirements_count=0, children_count=1}
└─┐process_noop_edge{}
  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=0}
    └─┐process_subgraph_entrypoint_edge{subgraph="a", type_name="Query", parent_fetch_step_index=0}
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐connect{parent=0, child=1}
      ┌─┘
      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Query", field="product", leaf=false, list=false, response_path="", fetch_path=""}
          ├─   0.396453s   0ms DEBUG adding output field 'product' to fetch step [1]
          └─┐process_children_for_fetch_steps{count=3, parent_fetch_step_index=1}
            └─┐process_abstract_edge{parent_fetch_step_index=1, type_name="Book", response_path="product", fetch_path="product"}
              ├─   0.396485s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '1' to fetch step [Book]
              └─┐process_children_for_fetch_steps{count=5, parent_fetch_step_index=1}
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Book", field="__typename", leaf=true, list=false, response_path="product", fetch_path="product"}
                  ├─   0.396511s   0ms DEBUG adding output field '__typename' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                  ┌─┘
                ┌─┘
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Book", field="id", leaf=true, list=false, response_path="product", fetch_path="product"}
                  ├─   0.396553s   0ms DEBUG adding output field 'id' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                  ┌─┘
                ┌─┘
                └─┐process_entity_move_edge{edge="Book/a -(🔑🧩{id})- Book/b", parent_fetch_step_index=1}
                  ├─   0.396600s   0ms DEBUG created a new fetch step [2] subgraph(b) type(Book) requirement() key({id}) in children of 1
                  ├─   0.396609s   0ms DEBUG adding input requirement '{id}' to fetch step [2]
                  ├─   0.396617s   0ms DEBUG adding __typename field to output for type 'Book'
                  ├─   0.396625s   0ms DEBUG connecting fetch step to parent [1] -> [2]
                  └─┐connect{parent=1, child=2}
                  ┌─┘
                  └─┐process_requirements_for_fetch_steps{count=1}
                    └─┐process_noop_edge{}
                      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1, requiring_fetch_step_index=2}
                        └─┐process_plain_field_edge{parent_fetch_step_index=1, requiring_fetch_step_index=2, type_name="Book", field="id", leaf=true, list=false, response_path="product", fetch_path="product"}
                          ├─   0.396684s   0ms DEBUG connecting parent fetch step [1] to requiring fetch step [2]
                          └─┐connect{parent=1, child=2}
                          ┌─┘
                          ├─   0.396709s   0ms DEBUG adding output field 'id' to fetch step [1]
                          └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1, requiring_fetch_step_index=2}
                          ┌─┘
                        ┌─┘
                      ┌─┘
                    ┌─┘
                    └─┐connect{parent=1, child=2}
                    ┌─┘
                  ┌─┘
                  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=2}
                    └─┐process_plain_field_edge{parent_fetch_step_index=2, type_name="Book", field="price", leaf=true, list=false, response_path="product", fetch_path=""}
                      ├─   0.396801s   0ms DEBUG adding output field 'price' to fetch step [2]
                      └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=2}
                      ┌─┘
                    ┌─┘
                  ┌─┘
                ┌─┘
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Book", field="samePriceProduct", leaf=false, list=false, response_path="product", fetch_path="product"}
                  ├─   0.396856s   0ms DEBUG adding output field 'samePriceProduct' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
                    └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Book", field="price", leaf=false, list=false, response_path="product.samePriceProduct", fetch_path="product.samePriceProduct"}
                      ├─   0.396883s   0ms DEBUG adding output field 'price' to fetch step [1]
                      └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                      ┌─┘
                    ┌─┘
                  ┌─┘
                ┌─┘
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Book", field="samePriceProduct", leaf=false, list=false, response_path="product", fetch_path="product"}
                  ├─   0.396937s   0ms DEBUG adding output field 'samePriceProduct' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
                    └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Book", field="id", leaf=true, list=false, response_path="product.samePriceProduct", fetch_path="product.samePriceProduct"}
                      ├─   0.396963s   0ms DEBUG adding output field 'id' to fetch step [1]
                      └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                      ┌─┘
                    ┌─┘
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Product", field="samePriceProduct", leaf=false, list=false, response_path="product", fetch_path="product"}
              ├─   0.397029s   0ms DEBUG adding output field 'samePriceProduct' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=3, parent_fetch_step_index=1}
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Product", field="samePriceProduct", leaf=false, list=false, response_path="product.samePriceProduct", fetch_path="product.samePriceProduct"}
                  ├─   0.397053s   0ms DEBUG adding output field 'samePriceProduct' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=2, parent_fetch_step_index=1}
                    └─┐process_abstract_edge{parent_fetch_step_index=1, type_name="Book", response_path="product.samePriceProduct.samePriceProduct", fetch_path="product.samePriceProduct.samePriceProduct"}
                      ├─   0.397078s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '1' to fetch step [Book]
                      └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
                        └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Book", field="id", leaf=true, list=false, response_path="product.samePriceProduct.samePriceProduct", fetch_path="product.samePriceProduct.samePriceProduct"}
                          ├─   0.397105s   0ms DEBUG adding output field 'id' to fetch step [1]
                          └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                          ┌─┘
                        ┌─┘
                      ┌─┘
                    ┌─┘
                    └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Product", field="__typename", leaf=true, list=false, response_path="product.samePriceProduct.samePriceProduct", fetch_path="product.samePriceProduct.samePriceProduct"}
                      ├─   0.397168s   0ms DEBUG adding output field '__typename' to fetch step [1]
                      └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                      ┌─┘
                    ┌─┘
                  ┌─┘
                ┌─┘
                └─┐process_abstract_edge{parent_fetch_step_index=1, type_name="Book", response_path="product.samePriceProduct", fetch_path="product.samePriceProduct"}
                  ├─   0.397222s   0ms DEBUG adding output field '__typename' and starting an inline fragment for type '1' to fetch step [Book]
                  └─┐process_children_for_fetch_steps{count=1, parent_fetch_step_index=1}
                    └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Book", field="id", leaf=true, list=false, response_path="product.samePriceProduct", fetch_path="product.samePriceProduct"}
                      ├─   0.397248s   0ms DEBUG adding output field 'id' to fetch step [1]
                      └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                      ┌─┘
                    ┌─┘
                  ┌─┘
                ┌─┘
                └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Product", field="__typename", leaf=true, list=false, response_path="product.samePriceProduct", fetch_path="product.samePriceProduct"}
                  ├─   0.397302s   0ms DEBUG adding output field '__typename' to fetch step [1]
                  └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
                  ┌─┘
                ┌─┘
              ┌─┘
            ┌─┘
            └─┐process_plain_field_edge{parent_fetch_step_index=1, type_name="Product", field="__typename", leaf=true, list=false, response_path="product", fetch_path="product"}
              ├─   0.397356s   0ms DEBUG adding output field '__typename' to fetch step [1]
              └─┐process_children_for_fetch_steps{count=0, parent_fetch_step_index=1}
              ┌─┘
            ┌─┘
          ┌─┘
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
├─   0.397417s   1ms DEBUG Done
├─   0.397425s   1ms DEBUG found roots
├─   0.397430s   1ms DEBUG print graph
├─   0.397434s   1ms DEBUG Nodes:
│ [1] Query/a {} → {product{__typename ...on Book{__typename id samePriceProduct{price id}} samePriceProduct{samePriceProduct{__typename ...on Book{id}} __typename ...on Book{id}}}} at $.
│ [2] Book/b {__typename id} → {price} at $.product
│ 
│ Tree:
│ [1]
│   [2]
│ 
└─┐optimize{}
  └─┐merge_passthrough_child{}
  ┌─┘
  └─┐merge_children_with_parents{}
  ┌─┘
  └─┐merge_siblings{}
  ┌─┘
  └─┐deduplicate_and_prune_fetch_steps{}
  ┌─┘
  └─┐turn_mutations_into_sequence{}
  ┌─┘
┌─┘
┘
┐build_query_plan_from_fetch_graph{}
┘
┐execute{}
└─┐SequenceNode::execute{data=Null, representations=[]}
  └─┐FetchNode::execute{data=Null, representations=[]}
    └─┐execute{subgraph_name="a"}
      └─┐execute{subgraph_name="a"}
        ├─   0.397871s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
        ├─   0.402175s   4ms DEBUG pooling idle connection for ("http", localhost:4200)
      ┌─┘
    ┌─┘
  ┌─┘
  └─┐FlattenNode::execute{data=Object {"product": Object {"__typename": String("Book"), "id": String("1"), "samePriceProduct": Object {"price": Number(10.99), "id": String("3"), "samePriceProduct": Object {"__typename": String("Book"), "id": String("1")}, "__typename": String("Book")}}}, representations=[]}
    └─┐FetchNode::execute{data=Null, representations=[Object {"__typename": String("Book"), "id": String("1"), "samePriceProduct": Object {"price": Number(10.99), "id": String("3"), "samePriceProduct": Object {"__typename": String("Book"), "id": String("1")}, "__typename": String("Book")}}]}
      └─┐project_requires{requires_selections=[SelectionItem::Fragment { type_name: "Book", selections: SelectionSet { items: [SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }] } }], entity=Object {"__typename": String("Book"), "id": String("1"), "samePriceProduct": Object {"price": Number(10.99), "id": String("3"), "samePriceProduct": Object {"__typename": String("Book"), "id": String("1")}, "__typename": String("Book")}}}
        └─┐entity_satisfies_type_condition{possible_types={"Product": ["Book"]}, type_name="Book", type_condition="Book"}
        ┌─┘
        └─┐project_requires{requires_selections=[SelectionItem::Field { name: "__typename", selections: SelectionSet { items: [] } }, SelectionItem::Field { name: "id", selections: SelectionSet { items: [] } }], entity=Object {"__typename": String("Book"), "id": String("1"), "samePriceProduct": Object {"price": Number(10.99), "id": String("3"), "samePriceProduct": Object {"__typename": String("Book"), "id": String("1")}, "__typename": String("Book")}}}
          └─┐project_requires{requires_selections=[], entity=String("Book")}
          ┌─┘
          └─┐project_requires{requires_selections=[], entity=String("1")}
          ┌─┘
        ┌─┘
      ┌─┘
      └─┐execute{subgraph_name="b"}
        └─┐execute{subgraph_name="b"}
          ├─   0.402759s   0ms DEBUG reuse idle connection for ("http", localhost:4200)
          ├─   0.409315s   6ms DEBUG pooling idle connection for ("http", localhost:4200)
        ┌─┘
      ┌─┘
    ┌─┘
  ┌─┘
┌─┘
┘
┐entity_satisfies_type_condition{possible_types={"Product": ["Book"]}, type_name="Book", type_condition="Book"}
┘
┐entity_satisfies_type_condition{possible_types={"Product": ["Book"]}, type_name="Book", type_condition="Book"}
┘
┐entity_satisfies_type_condition{possible_types={"Product": ["Book"]}, type_name="Book", type_condition="Book"}
┘
   0.409748s DEBUG execution result: ExecutionResult { data: Some(Object {"product": Object {"__typename": String("Book"), "samePriceProduct": Object {"__typename": String("Book"), "id": String("3"), "samePriceProduct": Object {"__typename": String("Book"), "id": String("1")}, "price": Number(10.99)}, "id": String("1"), "price": Number(10.99)}}), errors: None, extensions: Some({"queryPlan": Object {"kind": String("QueryPlan"), "node": Object {"kind": String("Sequence"), "nodes": Array [Object {"kind": String("Fetch"), "serviceName": String("a"), "operationKind": String("query"), "operation": String("{product{__typename ...on Book{__typename id samePriceProduct{price id}} samePriceProduct{samePriceProduct{__typename ...on Book{id}} __typename ...on Book{id}}}}")}, Object {"kind": String("Flatten"), "path": Array [String("product")], "node": Object {"kind": String("Fetch"), "serviceName": String("b"), "operationKind": String("query"), "operation": String("query($representations:[_Any!]!){_entities(representations: $representations){...on Book{price}}}"), "requires": Array [Object {"kind": String("InlineFragment"), "typeCondition": String("Book"), "selections": Array [Object {"kind": String("Field"), "name": String("__typename")}, Object {"kind": String("Field"), "name": String("id")}]}]}}]}}}) }
